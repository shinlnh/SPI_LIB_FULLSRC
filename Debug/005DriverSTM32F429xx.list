
005DriverSTM32F429xx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000333c  080001b0  080001b0  000011b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000044  080034ec  080034ec  000044ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003530  08003530  00005060  2**0
                  CONTENTS
  4 .ARM          00000008  08003530  08003530  00004530  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08003538  08003538  00005060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003538  08003538  00004538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800353c  0800353c  0000453c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000060  20000000  08003540  00005000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00005060  2**0
                  CONTENTS
 10 .bss          00000388  20000060  20000060  00005060  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200003e8  200003e8  00005060  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00005060  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002095  00000000  00000000  00005090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000007df  00000000  00000000  00007125  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000280  00000000  00000000  00007908  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001de  00000000  00000000  00007b88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00003727  00000000  00000000  00007d66  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000037a4  00000000  00000000  0000b48d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000cfd7  00000000  00000000  0000ec31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001bc08  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001104  00000000  00000000  0001bc4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000004f  00000000  00000000  0001cd50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	@ (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	@ (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000060 	.word	0x20000060
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080034d4 	.word	0x080034d4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	@ (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	@ (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	@ (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000064 	.word	0x20000064
 80001ec:	080034d4 	.word	0x080034d4

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <main>:
void LNH_SPIGPIO_Init(void);
void LNH_SPI_Init(void);
void LNH_SPI_ENABLE(SPI_RegDef_t* pSPIx, uint8_t EN_DI);

int main(void)
{
 8000290:	b580      	push	{r7, lr}
 8000292:	b082      	sub	sp, #8
 8000294:	af00      	add	r7, sp, #0
	uint8_t dummy = 0xFF;
 8000296:	23ff      	movs	r3, #255	@ 0xff
 8000298:	71fb      	strb	r3, [r7, #7]
	//char user_data[] = "Hello World";
	LNH_GPIOCLK(GPIOA,1);
 800029a:	2101      	movs	r1, #1
 800029c:	482a      	ldr	r0, [pc, #168]	@ (8000348 <main+0xb8>)
 800029e:	f000 f867 	bl	8000370 <LNH_GPIOCLK>
	LNH_GPIOCLK(GPIOD,1);
 80002a2:	2101      	movs	r1, #1
 80002a4:	4829      	ldr	r0, [pc, #164]	@ (800034c <main+0xbc>)
 80002a6:	f000 f863 	bl	8000370 <LNH_GPIOCLK>
	LNH_SPICLK(SPI1,1);
 80002aa:	2101      	movs	r1, #1
 80002ac:	4828      	ldr	r0, [pc, #160]	@ (8000350 <main+0xc0>)
 80002ae:	f000 f86e 	bl	800038e <LNH_SPICLK>


	LNH_SPIGPIO_Init();
 80002b2:	f000 f87b 	bl	80003ac <LNH_SPIGPIO_Init>

	LNH_SPI_Init();
 80002b6:	f000 f94f 	bl	8000558 <LNH_SPI_Init>
	__LNH_SPI_IRQ_ITConfig(IRQ_NO_SPI1 ,EN);
 80002ba:	2101      	movs	r1, #1
 80002bc:	2023      	movs	r0, #35	@ 0x23
 80002be:	f001 ffed 	bl	800229c <__LNH_SPI_IRQ_ITConfig>
	{
		//while (!__LNH_GPIO_ReadPin(GPIOA, GPIO_PIN_0));

		//delay();

		LNH_SPI_ENABLE(SPI1,1);
 80002c2:	2101      	movs	r1, #1
 80002c4:	4822      	ldr	r0, [pc, #136]	@ (8000350 <main+0xc0>)
 80002c6:	f000 f96d 	bl	80005a4 <LNH_SPI_ENABLE>
		rcvStop = 0;
 80002ca:	4b22      	ldr	r3, [pc, #136]	@ (8000354 <main+0xc4>)
 80002cc:	2200      	movs	r2, #0
 80002ce:	701a      	strb	r2, [r3, #0]
		while(!dataAvailable); // wait till data available interrupt from tranmission device
 80002d0:	bf00      	nop
 80002d2:	4b21      	ldr	r3, [pc, #132]	@ (8000358 <main+0xc8>)
 80002d4:	781b      	ldrb	r3, [r3, #0]
 80002d6:	b2db      	uxtb	r3, r3
 80002d8:	2b00      	cmp	r3, #0
 80002da:	d0fa      	beq.n	80002d2 <main+0x42>

		 __LNH_GPIO_IRQ_ITConfig(IRQ_NO_EXTI9_5 ,DI);
 80002dc:	2100      	movs	r1, #0
 80002de:	2017      	movs	r0, #23
 80002e0:	f001 fd5c 	bl	8001d9c <__LNH_GPIO_IRQ_ITConfig>
		//__LNH_SPI_SendData(SPI1,(uint8_t*)user_data, strlen(user_data));

		//while(__LNH_SPI_BSY(SPI1));

		//LNH_SPI_ENABLE(SPI1,0);
		while(!rcvStop)
 80002e4:	e012      	b.n	800030c <main+0x7c>
		{
			/*fetch the data from the SPI peripherals byte by byte in interrupt mode*/
			while (__LNH_SPI_SendDataIT(&pSPIConfig,&dummy,1) == SPI_BUSY_IN_TX);
 80002e6:	bf00      	nop
 80002e8:	1dfb      	adds	r3, r7, #7
 80002ea:	2201      	movs	r2, #1
 80002ec:	4619      	mov	r1, r3
 80002ee:	481b      	ldr	r0, [pc, #108]	@ (800035c <main+0xcc>)
 80002f0:	f002 f85a 	bl	80023a8 <__LNH_SPI_SendDataIT>
 80002f4:	4603      	mov	r3, r0
 80002f6:	2b02      	cmp	r3, #2
 80002f8:	d0f6      	beq.n	80002e8 <main+0x58>
			while (__LNH_SPI_ReceiveDataIT(&pSPIConfig,&ReadByte,1) == SPI_BUSY_IN_RX);
 80002fa:	bf00      	nop
 80002fc:	2201      	movs	r2, #1
 80002fe:	4918      	ldr	r1, [pc, #96]	@ (8000360 <main+0xd0>)
 8000300:	4816      	ldr	r0, [pc, #88]	@ (800035c <main+0xcc>)
 8000302:	f002 f875 	bl	80023f0 <__LNH_SPI_ReceiveDataIT>
 8000306:	4603      	mov	r3, r0
 8000308:	2b01      	cmp	r3, #1
 800030a:	d0f7      	beq.n	80002fc <main+0x6c>
		while(!rcvStop)
 800030c:	4b11      	ldr	r3, [pc, #68]	@ (8000354 <main+0xc4>)
 800030e:	781b      	ldrb	r3, [r3, #0]
 8000310:	b2db      	uxtb	r3, r3
 8000312:	2b00      	cmp	r3, #0
 8000314:	d0e7      	beq.n	80002e6 <main+0x56>
		}
		//Confirm SPI is not busy
		while (__LNH_SPI_GetFlagStatus(SPI1,SPI_BUSY_FLAG));
 8000316:	bf00      	nop
 8000318:	2180      	movs	r1, #128	@ 0x80
 800031a:	480d      	ldr	r0, [pc, #52]	@ (8000350 <main+0xc0>)
 800031c:	f001 ff8e 	bl	800223c <__LNH_SPI_GetFlagStatus>
 8000320:	4603      	mov	r3, r0
 8000322:	2b00      	cmp	r3, #0
 8000324:	d1f8      	bne.n	8000318 <main+0x88>

		//Disable the SPI peripherals
		LNH_SPICLK(SPI2,0);
 8000326:	2100      	movs	r1, #0
 8000328:	480e      	ldr	r0, [pc, #56]	@ (8000364 <main+0xd4>)
 800032a:	f000 f830 	bl	800038e <LNH_SPICLK>

		printf("Rcvd data = %s\n",RcvBuff);
 800032e:	490e      	ldr	r1, [pc, #56]	@ (8000368 <main+0xd8>)
 8000330:	480e      	ldr	r0, [pc, #56]	@ (800036c <main+0xdc>)
 8000332:	f002 fa61 	bl	80027f8 <iprintf>

		dataAvailable = 0;
 8000336:	4b08      	ldr	r3, [pc, #32]	@ (8000358 <main+0xc8>)
 8000338:	2200      	movs	r2, #0
 800033a:	701a      	strb	r2, [r3, #0]

		__LNH_GPIO_IRQ_ITConfig(IRQ_NO_EXTI9_5,EN);
 800033c:	2101      	movs	r1, #1
 800033e:	2017      	movs	r0, #23
 8000340:	f001 fd2c 	bl	8001d9c <__LNH_GPIO_IRQ_ITConfig>
		LNH_SPI_ENABLE(SPI1,1);
 8000344:	e7bd      	b.n	80002c2 <main+0x32>
 8000346:	bf00      	nop
 8000348:	40020000 	.word	0x40020000
 800034c:	40020c00 	.word	0x40020c00
 8000350:	40013000 	.word	0x40013000
 8000354:	20000291 	.word	0x20000291
 8000358:	20000292 	.word	0x20000292
 800035c:	2000007c 	.word	0x2000007c
 8000360:	20000290 	.word	0x20000290
 8000364:	40003800 	.word	0x40003800
 8000368:	2000009c 	.word	0x2000009c
 800036c:	080034ec 	.word	0x080034ec

08000370 <LNH_GPIOCLK>:
	return 0;
}


void LNH_GPIOCLK(GPIO_RegDef_t*pGPIOx, uint8_t EN_DI)
{
 8000370:	b580      	push	{r7, lr}
 8000372:	b082      	sub	sp, #8
 8000374:	af00      	add	r7, sp, #0
 8000376:	6078      	str	r0, [r7, #4]
 8000378:	460b      	mov	r3, r1
 800037a:	70fb      	strb	r3, [r7, #3]
	__LNH_GPIO_PeriClockControl(pGPIOx,EN_DI);
 800037c:	78fb      	ldrb	r3, [r7, #3]
 800037e:	4619      	mov	r1, r3
 8000380:	6878      	ldr	r0, [r7, #4]
 8000382:	f000 fa3b 	bl	80007fc <__LNH_GPIO_PeriClockControl>
}
 8000386:	bf00      	nop
 8000388:	3708      	adds	r7, #8
 800038a:	46bd      	mov	sp, r7
 800038c:	bd80      	pop	{r7, pc}

0800038e <LNH_SPICLK>:
void LNH_SPICLK(SPI_RegDef_t* pSPIx, uint8_t EN_DI)
{
 800038e:	b580      	push	{r7, lr}
 8000390:	b082      	sub	sp, #8
 8000392:	af00      	add	r7, sp, #0
 8000394:	6078      	str	r0, [r7, #4]
 8000396:	460b      	mov	r3, r1
 8000398:	70fb      	strb	r3, [r7, #3]

	__LNH_SPI_PeriClockControl(pSPIx,EN_DI);
 800039a:	78fb      	ldrb	r3, [r7, #3]
 800039c:	4619      	mov	r1, r3
 800039e:	6878      	ldr	r0, [r7, #4]
 80003a0:	f001 fda4 	bl	8001eec <__LNH_SPI_PeriClockControl>
}
 80003a4:	bf00      	nop
 80003a6:	3708      	adds	r7, #8
 80003a8:	46bd      	mov	sp, r7
 80003aa:	bd80      	pop	{r7, pc}

080003ac <LNH_SPIGPIO_Init>:

void LNH_SPIGPIO_Init(void)
{
 80003ac:	b580      	push	{r7, lr}
 80003ae:	b0a4      	sub	sp, #144	@ 0x90
 80003b0:	af00      	add	r7, sp, #0

	GPIO_Config_t pGPIOConfig0;
	pGPIOConfig0.pGPIOx = GPIOD;
 80003b2:	4b65      	ldr	r3, [pc, #404]	@ (8000548 <LNH_SPIGPIO_Init+0x19c>)
 80003b4:	67bb      	str	r3, [r7, #120]	@ 0x78
	pGPIOConfig0.GPIO_PIN = GPIO_PIN_6;
 80003b6:	2306      	movs	r3, #6
 80003b8:	f887 307c 	strb.w	r3, [r7, #124]	@ 0x7c
	pGPIOConfig0.GPIO_MODE = GPIO_MODE_IT;
 80003bc:	2304      	movs	r3, #4
 80003be:	f887 307d 	strb.w	r3, [r7, #125]	@ 0x7d
	pGPIOConfig0.GPIO_SPEED = GPIO_SPEED_MS;
 80003c2:	2301      	movs	r3, #1
 80003c4:	f887 307e 	strb.w	r3, [r7, #126]	@ 0x7e
	pGPIOConfig0.GPIO_PUPD = GPIO_PUPD_NP;
 80003c8:	2300      	movs	r3, #0
 80003ca:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
	pGPIOConfig0.GPIO_OTYPE = GPIO_OTYPE_PP;
 80003ce:	2300      	movs	r3, #0
 80003d0:	f887 3080 	strb.w	r3, [r7, #128]	@ 0x80
	pGPIOConfig0.GPIO_AF = 0;
 80003d4:	2300      	movs	r3, #0
 80003d6:	f887 3081 	strb.w	r3, [r7, #129]	@ 0x81
	pGPIOConfig0.pEXTI = EXTI;
 80003da:	4b5c      	ldr	r3, [pc, #368]	@ (800054c <LNH_SPIGPIO_Init+0x1a0>)
 80003dc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
	pGPIOConfig0.pSYSCFG = SYSCFG;
 80003e0:	4b5b      	ldr	r3, [pc, #364]	@ (8000550 <LNH_SPIGPIO_Init+0x1a4>)
 80003e2:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
	pGPIOConfig0.EXTI_ENDI = EXTI_EN;
 80003e6:	2301      	movs	r3, #1
 80003e8:	f887 308c 	strb.w	r3, [r7, #140]	@ 0x8c
	pGPIOConfig0.EXTI_TRIGGER = 0;
 80003ec:	2300      	movs	r3, #0
 80003ee:	f887 308d 	strb.w	r3, [r7, #141]	@ 0x8d
	__LNH_GPIO_Init(&pGPIOConfig0);
 80003f2:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 80003f6:	4618      	mov	r0, r3
 80003f8:	f000 fb4a 	bl	8000a90 <__LNH_GPIO_Init>
	//NSS : PA4
	GPIO_Config_t pGPIOConfig1;
	pGPIOConfig1.pGPIOx = GPIOA;
 80003fc:	4b55      	ldr	r3, [pc, #340]	@ (8000554 <LNH_SPIGPIO_Init+0x1a8>)
 80003fe:	663b      	str	r3, [r7, #96]	@ 0x60
	pGPIOConfig1.GPIO_PIN = GPIO_PIN_4;
 8000400:	2304      	movs	r3, #4
 8000402:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
	pGPIOConfig1.GPIO_MODE = GPIO_MODE_ALT;
 8000406:	2302      	movs	r3, #2
 8000408:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
	pGPIOConfig1.GPIO_SPEED = GPIO_SPEED_HS;
 800040c:	2302      	movs	r3, #2
 800040e:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
	pGPIOConfig1.GPIO_PUPD = GPIO_PUPD_NP;
 8000412:	2300      	movs	r3, #0
 8000414:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
	pGPIOConfig1.GPIO_OTYPE = GPIO_OTYPE_PP;
 8000418:	2300      	movs	r3, #0
 800041a:	f887 3068 	strb.w	r3, [r7, #104]	@ 0x68
	pGPIOConfig1.GPIO_AF = GPIO_AF_5;
 800041e:	2305      	movs	r3, #5
 8000420:	f887 3069 	strb.w	r3, [r7, #105]	@ 0x69
	pGPIOConfig1.pEXTI = EXTI;
 8000424:	4b49      	ldr	r3, [pc, #292]	@ (800054c <LNH_SPIGPIO_Init+0x1a0>)
 8000426:	66fb      	str	r3, [r7, #108]	@ 0x6c
	pGPIOConfig1.pSYSCFG = SYSCFG;
 8000428:	4b49      	ldr	r3, [pc, #292]	@ (8000550 <LNH_SPIGPIO_Init+0x1a4>)
 800042a:	673b      	str	r3, [r7, #112]	@ 0x70
	pGPIOConfig1.EXTI_ENDI = EXTI_DI;
 800042c:	2300      	movs	r3, #0
 800042e:	f887 3074 	strb.w	r3, [r7, #116]	@ 0x74
	pGPIOConfig1.EXTI_TRIGGER = EXTI_IT_RT;
 8000432:	2302      	movs	r3, #2
 8000434:	f887 3075 	strb.w	r3, [r7, #117]	@ 0x75
	__LNH_GPIO_Init(&pGPIOConfig1);
 8000438:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800043c:	4618      	mov	r0, r3
 800043e:	f000 fb27 	bl	8000a90 <__LNH_GPIO_Init>

	//SCK : PA5
	GPIO_Config_t pGPIOConfig2;
	pGPIOConfig2.pGPIOx = GPIOA;
 8000442:	4b44      	ldr	r3, [pc, #272]	@ (8000554 <LNH_SPIGPIO_Init+0x1a8>)
 8000444:	64bb      	str	r3, [r7, #72]	@ 0x48
	pGPIOConfig2.GPIO_PIN = GPIO_PIN_5;
 8000446:	2305      	movs	r3, #5
 8000448:	f887 304c 	strb.w	r3, [r7, #76]	@ 0x4c
	pGPIOConfig2.GPIO_MODE = GPIO_MODE_ALT;
 800044c:	2302      	movs	r3, #2
 800044e:	f887 304d 	strb.w	r3, [r7, #77]	@ 0x4d
	pGPIOConfig2.GPIO_SPEED = GPIO_SPEED_HS;
 8000452:	2302      	movs	r3, #2
 8000454:	f887 304e 	strb.w	r3, [r7, #78]	@ 0x4e
	pGPIOConfig2.GPIO_PUPD = GPIO_PUPD_NP;
 8000458:	2300      	movs	r3, #0
 800045a:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
	pGPIOConfig2.GPIO_OTYPE = GPIO_OTYPE_PP;
 800045e:	2300      	movs	r3, #0
 8000460:	f887 3050 	strb.w	r3, [r7, #80]	@ 0x50
	pGPIOConfig2.GPIO_AF = GPIO_AF_5;
 8000464:	2305      	movs	r3, #5
 8000466:	f887 3051 	strb.w	r3, [r7, #81]	@ 0x51
	pGPIOConfig2.pEXTI = EXTI;
 800046a:	4b38      	ldr	r3, [pc, #224]	@ (800054c <LNH_SPIGPIO_Init+0x1a0>)
 800046c:	657b      	str	r3, [r7, #84]	@ 0x54
	pGPIOConfig2.pSYSCFG = SYSCFG;
 800046e:	4b38      	ldr	r3, [pc, #224]	@ (8000550 <LNH_SPIGPIO_Init+0x1a4>)
 8000470:	65bb      	str	r3, [r7, #88]	@ 0x58
	pGPIOConfig2.EXTI_ENDI = EXTI_DI;
 8000472:	2300      	movs	r3, #0
 8000474:	f887 305c 	strb.w	r3, [r7, #92]	@ 0x5c
	pGPIOConfig2.EXTI_TRIGGER = EXTI_IT_RT;
 8000478:	2302      	movs	r3, #2
 800047a:	f887 305d 	strb.w	r3, [r7, #93]	@ 0x5d
	__LNH_GPIO_Init(&pGPIOConfig2);
 800047e:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 8000482:	4618      	mov	r0, r3
 8000484:	f000 fb04 	bl	8000a90 <__LNH_GPIO_Init>

	//MISO : PA6
	GPIO_Config_t pGPIOConfig3;
	pGPIOConfig3.pGPIOx = GPIOA;
 8000488:	4b32      	ldr	r3, [pc, #200]	@ (8000554 <LNH_SPIGPIO_Init+0x1a8>)
 800048a:	633b      	str	r3, [r7, #48]	@ 0x30
	pGPIOConfig3.GPIO_PIN = GPIO_PIN_6;
 800048c:	2306      	movs	r3, #6
 800048e:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
	pGPIOConfig3.GPIO_MODE = GPIO_MODE_ALT;
 8000492:	2302      	movs	r3, #2
 8000494:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
	pGPIOConfig3.GPIO_SPEED = GPIO_SPEED_HS;
 8000498:	2302      	movs	r3, #2
 800049a:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
	pGPIOConfig3.GPIO_PUPD = GPIO_PUPD_NP;
 800049e:	2300      	movs	r3, #0
 80004a0:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
	pGPIOConfig3.GPIO_OTYPE = GPIO_OTYPE_PP;
 80004a4:	2300      	movs	r3, #0
 80004a6:	f887 3038 	strb.w	r3, [r7, #56]	@ 0x38
	pGPIOConfig3.GPIO_AF = GPIO_AF_5;
 80004aa:	2305      	movs	r3, #5
 80004ac:	f887 3039 	strb.w	r3, [r7, #57]	@ 0x39
	pGPIOConfig3.pEXTI = EXTI;
 80004b0:	4b26      	ldr	r3, [pc, #152]	@ (800054c <LNH_SPIGPIO_Init+0x1a0>)
 80004b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
	pGPIOConfig3.pSYSCFG = SYSCFG;
 80004b4:	4b26      	ldr	r3, [pc, #152]	@ (8000550 <LNH_SPIGPIO_Init+0x1a4>)
 80004b6:	643b      	str	r3, [r7, #64]	@ 0x40
	pGPIOConfig3.EXTI_ENDI = EXTI_DI;
 80004b8:	2300      	movs	r3, #0
 80004ba:	f887 3044 	strb.w	r3, [r7, #68]	@ 0x44
	pGPIOConfig3.EXTI_TRIGGER = EXTI_IT_RT;
 80004be:	2302      	movs	r3, #2
 80004c0:	f887 3045 	strb.w	r3, [r7, #69]	@ 0x45
	__LNH_GPIO_Init(&pGPIOConfig3);
 80004c4:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80004c8:	4618      	mov	r0, r3
 80004ca:	f000 fae1 	bl	8000a90 <__LNH_GPIO_Init>

	//MOSI : PA7

	GPIO_Config_t pGPIOConfig4;
	pGPIOConfig4.pGPIOx = GPIOA;
 80004ce:	4b21      	ldr	r3, [pc, #132]	@ (8000554 <LNH_SPIGPIO_Init+0x1a8>)
 80004d0:	61bb      	str	r3, [r7, #24]
	pGPIOConfig4.GPIO_PIN = GPIO_PIN_7;
 80004d2:	2307      	movs	r3, #7
 80004d4:	773b      	strb	r3, [r7, #28]
	pGPIOConfig4.GPIO_MODE = GPIO_MODE_ALT;
 80004d6:	2302      	movs	r3, #2
 80004d8:	777b      	strb	r3, [r7, #29]
	pGPIOConfig4.GPIO_SPEED = GPIO_SPEED_HS;
 80004da:	2302      	movs	r3, #2
 80004dc:	77bb      	strb	r3, [r7, #30]
	pGPIOConfig4.GPIO_PUPD = GPIO_PUPD_NP;
 80004de:	2300      	movs	r3, #0
 80004e0:	77fb      	strb	r3, [r7, #31]
	pGPIOConfig4.GPIO_OTYPE = GPIO_OTYPE_PP;
 80004e2:	2300      	movs	r3, #0
 80004e4:	f887 3020 	strb.w	r3, [r7, #32]
	pGPIOConfig4.GPIO_AF = GPIO_AF_5;
 80004e8:	2305      	movs	r3, #5
 80004ea:	f887 3021 	strb.w	r3, [r7, #33]	@ 0x21
	pGPIOConfig4.pEXTI = EXTI;
 80004ee:	4b17      	ldr	r3, [pc, #92]	@ (800054c <LNH_SPIGPIO_Init+0x1a0>)
 80004f0:	627b      	str	r3, [r7, #36]	@ 0x24
	pGPIOConfig4.pSYSCFG = SYSCFG;
 80004f2:	4b17      	ldr	r3, [pc, #92]	@ (8000550 <LNH_SPIGPIO_Init+0x1a4>)
 80004f4:	62bb      	str	r3, [r7, #40]	@ 0x28
	pGPIOConfig4.EXTI_ENDI = EXTI_DI;
 80004f6:	2300      	movs	r3, #0
 80004f8:	f887 302c 	strb.w	r3, [r7, #44]	@ 0x2c
	pGPIOConfig4.EXTI_TRIGGER = EXTI_IT_RT;
 80004fc:	2302      	movs	r3, #2
 80004fe:	f887 302d 	strb.w	r3, [r7, #45]	@ 0x2d
	__LNH_GPIO_Init(&pGPIOConfig4);
 8000502:	f107 0318 	add.w	r3, r7, #24
 8000506:	4618      	mov	r0, r3
 8000508:	f000 fac2 	bl	8000a90 <__LNH_GPIO_Init>

	//BTN
	GPIO_Config_t pGPIOConfig5;
	pGPIOConfig5.pGPIOx = GPIOA;
 800050c:	4b11      	ldr	r3, [pc, #68]	@ (8000554 <LNH_SPIGPIO_Init+0x1a8>)
 800050e:	603b      	str	r3, [r7, #0]
	pGPIOConfig5.GPIO_PIN = GPIO_PIN_0;
 8000510:	2300      	movs	r3, #0
 8000512:	713b      	strb	r3, [r7, #4]
	pGPIOConfig5.GPIO_MODE = GPIO_MODE_IN;
 8000514:	2300      	movs	r3, #0
 8000516:	717b      	strb	r3, [r7, #5]
	pGPIOConfig5.GPIO_SPEED = GPIO_SPEED_MS;
 8000518:	2301      	movs	r3, #1
 800051a:	71bb      	strb	r3, [r7, #6]
	pGPIOConfig5.GPIO_PUPD = GPIO_PUPD_PD;
 800051c:	2302      	movs	r3, #2
 800051e:	71fb      	strb	r3, [r7, #7]
	pGPIOConfig5.GPIO_OTYPE = GPIO_OTYPE_PP;
 8000520:	2300      	movs	r3, #0
 8000522:	723b      	strb	r3, [r7, #8]
	pGPIOConfig5.GPIO_AF = 0;
 8000524:	2300      	movs	r3, #0
 8000526:	727b      	strb	r3, [r7, #9]
	pGPIOConfig5.pEXTI = EXTI;
 8000528:	4b08      	ldr	r3, [pc, #32]	@ (800054c <LNH_SPIGPIO_Init+0x1a0>)
 800052a:	60fb      	str	r3, [r7, #12]
	pGPIOConfig5.pSYSCFG = SYSCFG;
 800052c:	4b08      	ldr	r3, [pc, #32]	@ (8000550 <LNH_SPIGPIO_Init+0x1a4>)
 800052e:	613b      	str	r3, [r7, #16]
	pGPIOConfig5.EXTI_ENDI = EXTI_EN;
 8000530:	2301      	movs	r3, #1
 8000532:	753b      	strb	r3, [r7, #20]
	pGPIOConfig5.EXTI_TRIGGER = EXTI_IT_RT;
 8000534:	2302      	movs	r3, #2
 8000536:	757b      	strb	r3, [r7, #21]

	__LNH_GPIO_Init(&pGPIOConfig5);
 8000538:	463b      	mov	r3, r7
 800053a:	4618      	mov	r0, r3
 800053c:	f000 faa8 	bl	8000a90 <__LNH_GPIO_Init>
}
 8000540:	bf00      	nop
 8000542:	3790      	adds	r7, #144	@ 0x90
 8000544:	46bd      	mov	sp, r7
 8000546:	bd80      	pop	{r7, pc}
 8000548:	40020c00 	.word	0x40020c00
 800054c:	40013c00 	.word	0x40013c00
 8000550:	40013800 	.word	0x40013800
 8000554:	40020000 	.word	0x40020000

08000558 <LNH_SPI_Init>:

void LNH_SPI_Init(void)
{
 8000558:	b580      	push	{r7, lr}
 800055a:	af00      	add	r7, sp, #0

	pSPIConfig.pSPIx = SPI1;
 800055c:	4b0f      	ldr	r3, [pc, #60]	@ (800059c <LNH_SPI_Init+0x44>)
 800055e:	4a10      	ldr	r2, [pc, #64]	@ (80005a0 <LNH_SPI_Init+0x48>)
 8000560:	601a      	str	r2, [r3, #0]
	pSPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 8000562:	4b0e      	ldr	r3, [pc, #56]	@ (800059c <LNH_SPI_Init+0x44>)
 8000564:	2201      	movs	r2, #1
 8000566:	715a      	strb	r2, [r3, #5]
	pSPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
 8000568:	4b0c      	ldr	r3, [pc, #48]	@ (800059c <LNH_SPI_Init+0x44>)
 800056a:	2201      	movs	r2, #1
 800056c:	711a      	strb	r2, [r3, #4]
	pSPIConfig.SPI_SCLKSpeed = SPI_SCLK_SPEED_DIV2; //8MHz
 800056e:	4b0b      	ldr	r3, [pc, #44]	@ (800059c <LNH_SPI_Init+0x44>)
 8000570:	2200      	movs	r2, #0
 8000572:	719a      	strb	r2, [r3, #6]
	pSPIConfig.SPI_DFF = SPI_DFF_8BITS;
 8000574:	4b09      	ldr	r3, [pc, #36]	@ (800059c <LNH_SPI_Init+0x44>)
 8000576:	2200      	movs	r2, #0
 8000578:	71da      	strb	r2, [r3, #7]
	pSPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 800057a:	4b08      	ldr	r3, [pc, #32]	@ (800059c <LNH_SPI_Init+0x44>)
 800057c:	2200      	movs	r2, #0
 800057e:	721a      	strb	r2, [r3, #8]
	pSPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 8000580:	4b06      	ldr	r3, [pc, #24]	@ (800059c <LNH_SPI_Init+0x44>)
 8000582:	2200      	movs	r2, #0
 8000584:	725a      	strb	r2, [r3, #9]
	pSPIConfig.SPI_SSM = SPI_SSM_HW;
 8000586:	4b05      	ldr	r3, [pc, #20]	@ (800059c <LNH_SPI_Init+0x44>)
 8000588:	2200      	movs	r2, #0
 800058a:	729a      	strb	r2, [r3, #10]
	pSPIConfig.SPI_FUNC = SPI_FUNC_MT;
 800058c:	4b03      	ldr	r3, [pc, #12]	@ (800059c <LNH_SPI_Init+0x44>)
 800058e:	2200      	movs	r2, #0
 8000590:	72da      	strb	r2, [r3, #11]
	__LNH_SPI_Init(&pSPIConfig);
 8000592:	4802      	ldr	r0, [pc, #8]	@ (800059c <LNH_SPI_Init+0x44>)
 8000594:	f001 fd62 	bl	800205c <__LNH_SPI_Init>

}
 8000598:	bf00      	nop
 800059a:	bd80      	pop	{r7, pc}
 800059c:	2000007c 	.word	0x2000007c
 80005a0:	40013000 	.word	0x40013000

080005a4 <LNH_SPI_ENABLE>:
void LNH_SPI_ENABLE(SPI_RegDef_t* pSPIx, uint8_t EN_DI)
{
 80005a4:	b580      	push	{r7, lr}
 80005a6:	b082      	sub	sp, #8
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	6078      	str	r0, [r7, #4]
 80005ac:	460b      	mov	r3, r1
 80005ae:	70fb      	strb	r3, [r7, #3]
	 __LNH_SPI_PeripheralENDI(pSPIx,EN_DI);
 80005b0:	78fb      	ldrb	r3, [r7, #3]
 80005b2:	4619      	mov	r1, r3
 80005b4:	6878      	ldr	r0, [r7, #4]
 80005b6:	f001 fe55 	bl	8002264 <__LNH_SPI_PeripheralENDI>
}
 80005ba:	bf00      	nop
 80005bc:	3708      	adds	r7, #8
 80005be:	46bd      	mov	sp, r7
 80005c0:	bd80      	pop	{r7, pc}
	...

080005c4 <SPI1_IRQHandler>:
		for(uint32_t i=0;i<500000/2;i++);

}
/*Run when a data byte is received from the peripherals over SPI*/
void SPI1_IRQHandler(void)
{
 80005c4:	b580      	push	{r7, lr}
 80005c6:	af00      	add	r7, sp, #0
	__LNH_SPI_IRQHanding(&pSPIConfig);
 80005c8:	4802      	ldr	r0, [pc, #8]	@ (80005d4 <SPI1_IRQHandler+0x10>)
 80005ca:	f001 ff35 	bl	8002438 <__LNH_SPI_IRQHanding>
}
 80005ce:	bf00      	nop
 80005d0:	bd80      	pop	{r7, pc}
 80005d2:	bf00      	nop
 80005d4:	2000007c 	.word	0x2000007c

080005d8 <__LNH_ApplicationEventCallback>:

void __LNH_ApplicationEventCallback(SPI_Config_t* pSPIConfig,uint8_t AppEv)
{
 80005d8:	b480      	push	{r7}
 80005da:	b083      	sub	sp, #12
 80005dc:	af00      	add	r7, sp, #0
 80005de:	6078      	str	r0, [r7, #4]
 80005e0:	460b      	mov	r3, r1
 80005e2:	70fb      	strb	r3, [r7, #3]
	static uint32_t i = 0;
	/*In the Rx complete event, copy data in to rcv buffer. '\0' indicates end of message(rcvStop =1) */
	if (AppEv == SPI_EVENT_RX_CMPLT)
 80005e4:	78fb      	ldrb	r3, [r7, #3]
 80005e6:	2b02      	cmp	r3, #2
 80005e8:	d11f      	bne.n	800062a <__LNH_ApplicationEventCallback+0x52>
	{
		RcvBuff[i++] = ReadByte;
 80005ea:	4b13      	ldr	r3, [pc, #76]	@ (8000638 <__LNH_ApplicationEventCallback+0x60>)
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	1c5a      	adds	r2, r3, #1
 80005f0:	4911      	ldr	r1, [pc, #68]	@ (8000638 <__LNH_ApplicationEventCallback+0x60>)
 80005f2:	600a      	str	r2, [r1, #0]
 80005f4:	4a11      	ldr	r2, [pc, #68]	@ (800063c <__LNH_ApplicationEventCallback+0x64>)
 80005f6:	7812      	ldrb	r2, [r2, #0]
 80005f8:	b2d1      	uxtb	r1, r2
 80005fa:	4a11      	ldr	r2, [pc, #68]	@ (8000640 <__LNH_ApplicationEventCallback+0x68>)
 80005fc:	54d1      	strb	r1, [r2, r3]
		if( ReadByte == '0' || i == MAX_LEN)
 80005fe:	4b0f      	ldr	r3, [pc, #60]	@ (800063c <__LNH_ApplicationEventCallback+0x64>)
 8000600:	781b      	ldrb	r3, [r3, #0]
 8000602:	b2db      	uxtb	r3, r3
 8000604:	2b30      	cmp	r3, #48	@ 0x30
 8000606:	d004      	beq.n	8000612 <__LNH_ApplicationEventCallback+0x3a>
 8000608:	4b0b      	ldr	r3, [pc, #44]	@ (8000638 <__LNH_ApplicationEventCallback+0x60>)
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8000610:	d10b      	bne.n	800062a <__LNH_ApplicationEventCallback+0x52>
		{
			rcvStop = 1;
 8000612:	4b0c      	ldr	r3, [pc, #48]	@ (8000644 <__LNH_ApplicationEventCallback+0x6c>)
 8000614:	2201      	movs	r2, #1
 8000616:	701a      	strb	r2, [r3, #0]
			RcvBuff[i-1] = '\0';
 8000618:	4b07      	ldr	r3, [pc, #28]	@ (8000638 <__LNH_ApplicationEventCallback+0x60>)
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	3b01      	subs	r3, #1
 800061e:	4a08      	ldr	r2, [pc, #32]	@ (8000640 <__LNH_ApplicationEventCallback+0x68>)
 8000620:	2100      	movs	r1, #0
 8000622:	54d1      	strb	r1, [r2, r3]
			i = 0;
 8000624:	4b04      	ldr	r3, [pc, #16]	@ (8000638 <__LNH_ApplicationEventCallback+0x60>)
 8000626:	2200      	movs	r2, #0
 8000628:	601a      	str	r2, [r3, #0]

		}
	}
}
 800062a:	bf00      	nop
 800062c:	370c      	adds	r7, #12
 800062e:	46bd      	mov	sp, r7
 8000630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000634:	4770      	bx	lr
 8000636:	bf00      	nop
 8000638:	20000294 	.word	0x20000294
 800063c:	20000290 	.word	0x20000290
 8000640:	2000009c 	.word	0x2000009c
 8000644:	20000291 	.word	0x20000291

08000648 <EXTI9_5_IRQHandler>:
/*Slave data available interrupt handler
 */
void EXTI9_5_IRQHandler(void)
{
 8000648:	b580      	push	{r7, lr}
 800064a:	af00      	add	r7, sp, #0
	__LNH_GPIO_IRQHanding(GPIO_PIN_6);
 800064c:	2006      	movs	r0, #6
 800064e:	f001 fc2b 	bl	8001ea8 <__LNH_GPIO_IRQHanding>
	dataAvailable = 1;
 8000652:	4b02      	ldr	r3, [pc, #8]	@ (800065c <EXTI9_5_IRQHandler+0x14>)
 8000654:	2201      	movs	r2, #1
 8000656:	701a      	strb	r2, [r3, #0]
}
 8000658:	bf00      	nop
 800065a:	bd80      	pop	{r7, pc}
 800065c:	20000292 	.word	0x20000292

08000660 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000660:	b580      	push	{r7, lr}
 8000662:	b086      	sub	sp, #24
 8000664:	af00      	add	r7, sp, #0
 8000666:	60f8      	str	r0, [r7, #12]
 8000668:	60b9      	str	r1, [r7, #8]
 800066a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800066c:	2300      	movs	r3, #0
 800066e:	617b      	str	r3, [r7, #20]
 8000670:	e00a      	b.n	8000688 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000672:	f3af 8000 	nop.w
 8000676:	4601      	mov	r1, r0
 8000678:	68bb      	ldr	r3, [r7, #8]
 800067a:	1c5a      	adds	r2, r3, #1
 800067c:	60ba      	str	r2, [r7, #8]
 800067e:	b2ca      	uxtb	r2, r1
 8000680:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000682:	697b      	ldr	r3, [r7, #20]
 8000684:	3301      	adds	r3, #1
 8000686:	617b      	str	r3, [r7, #20]
 8000688:	697a      	ldr	r2, [r7, #20]
 800068a:	687b      	ldr	r3, [r7, #4]
 800068c:	429a      	cmp	r2, r3
 800068e:	dbf0      	blt.n	8000672 <_read+0x12>
  }

  return len;
 8000690:	687b      	ldr	r3, [r7, #4]
}
 8000692:	4618      	mov	r0, r3
 8000694:	3718      	adds	r7, #24
 8000696:	46bd      	mov	sp, r7
 8000698:	bd80      	pop	{r7, pc}

0800069a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800069a:	b580      	push	{r7, lr}
 800069c:	b086      	sub	sp, #24
 800069e:	af00      	add	r7, sp, #0
 80006a0:	60f8      	str	r0, [r7, #12]
 80006a2:	60b9      	str	r1, [r7, #8]
 80006a4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80006a6:	2300      	movs	r3, #0
 80006a8:	617b      	str	r3, [r7, #20]
 80006aa:	e009      	b.n	80006c0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80006ac:	68bb      	ldr	r3, [r7, #8]
 80006ae:	1c5a      	adds	r2, r3, #1
 80006b0:	60ba      	str	r2, [r7, #8]
 80006b2:	781b      	ldrb	r3, [r3, #0]
 80006b4:	4618      	mov	r0, r3
 80006b6:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80006ba:	697b      	ldr	r3, [r7, #20]
 80006bc:	3301      	adds	r3, #1
 80006be:	617b      	str	r3, [r7, #20]
 80006c0:	697a      	ldr	r2, [r7, #20]
 80006c2:	687b      	ldr	r3, [r7, #4]
 80006c4:	429a      	cmp	r2, r3
 80006c6:	dbf1      	blt.n	80006ac <_write+0x12>
  }
  return len;
 80006c8:	687b      	ldr	r3, [r7, #4]
}
 80006ca:	4618      	mov	r0, r3
 80006cc:	3718      	adds	r7, #24
 80006ce:	46bd      	mov	sp, r7
 80006d0:	bd80      	pop	{r7, pc}

080006d2 <_close>:

int _close(int file)
{
 80006d2:	b480      	push	{r7}
 80006d4:	b083      	sub	sp, #12
 80006d6:	af00      	add	r7, sp, #0
 80006d8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80006da:	f04f 33ff 	mov.w	r3, #4294967295
}
 80006de:	4618      	mov	r0, r3
 80006e0:	370c      	adds	r7, #12
 80006e2:	46bd      	mov	sp, r7
 80006e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006e8:	4770      	bx	lr

080006ea <_fstat>:


int _fstat(int file, struct stat *st)
{
 80006ea:	b480      	push	{r7}
 80006ec:	b083      	sub	sp, #12
 80006ee:	af00      	add	r7, sp, #0
 80006f0:	6078      	str	r0, [r7, #4]
 80006f2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80006f4:	683b      	ldr	r3, [r7, #0]
 80006f6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80006fa:	605a      	str	r2, [r3, #4]
  return 0;
 80006fc:	2300      	movs	r3, #0
}
 80006fe:	4618      	mov	r0, r3
 8000700:	370c      	adds	r7, #12
 8000702:	46bd      	mov	sp, r7
 8000704:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000708:	4770      	bx	lr

0800070a <_isatty>:

int _isatty(int file)
{
 800070a:	b480      	push	{r7}
 800070c:	b083      	sub	sp, #12
 800070e:	af00      	add	r7, sp, #0
 8000710:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000712:	2301      	movs	r3, #1
}
 8000714:	4618      	mov	r0, r3
 8000716:	370c      	adds	r7, #12
 8000718:	46bd      	mov	sp, r7
 800071a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800071e:	4770      	bx	lr

08000720 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000720:	b480      	push	{r7}
 8000722:	b085      	sub	sp, #20
 8000724:	af00      	add	r7, sp, #0
 8000726:	60f8      	str	r0, [r7, #12]
 8000728:	60b9      	str	r1, [r7, #8]
 800072a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800072c:	2300      	movs	r3, #0
}
 800072e:	4618      	mov	r0, r3
 8000730:	3714      	adds	r7, #20
 8000732:	46bd      	mov	sp, r7
 8000734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000738:	4770      	bx	lr
	...

0800073c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800073c:	b580      	push	{r7, lr}
 800073e:	b086      	sub	sp, #24
 8000740:	af00      	add	r7, sp, #0
 8000742:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000744:	4a14      	ldr	r2, [pc, #80]	@ (8000798 <_sbrk+0x5c>)
 8000746:	4b15      	ldr	r3, [pc, #84]	@ (800079c <_sbrk+0x60>)
 8000748:	1ad3      	subs	r3, r2, r3
 800074a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800074c:	697b      	ldr	r3, [r7, #20]
 800074e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000750:	4b13      	ldr	r3, [pc, #76]	@ (80007a0 <_sbrk+0x64>)
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	2b00      	cmp	r3, #0
 8000756:	d102      	bne.n	800075e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000758:	4b11      	ldr	r3, [pc, #68]	@ (80007a0 <_sbrk+0x64>)
 800075a:	4a12      	ldr	r2, [pc, #72]	@ (80007a4 <_sbrk+0x68>)
 800075c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800075e:	4b10      	ldr	r3, [pc, #64]	@ (80007a0 <_sbrk+0x64>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	4413      	add	r3, r2
 8000766:	693a      	ldr	r2, [r7, #16]
 8000768:	429a      	cmp	r2, r3
 800076a:	d207      	bcs.n	800077c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800076c:	f002 f8e8 	bl	8002940 <__errno>
 8000770:	4603      	mov	r3, r0
 8000772:	220c      	movs	r2, #12
 8000774:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000776:	f04f 33ff 	mov.w	r3, #4294967295
 800077a:	e009      	b.n	8000790 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800077c:	4b08      	ldr	r3, [pc, #32]	@ (80007a0 <_sbrk+0x64>)
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000782:	4b07      	ldr	r3, [pc, #28]	@ (80007a0 <_sbrk+0x64>)
 8000784:	681a      	ldr	r2, [r3, #0]
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	4413      	add	r3, r2
 800078a:	4a05      	ldr	r2, [pc, #20]	@ (80007a0 <_sbrk+0x64>)
 800078c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800078e:	68fb      	ldr	r3, [r7, #12]
}
 8000790:	4618      	mov	r0, r3
 8000792:	3718      	adds	r7, #24
 8000794:	46bd      	mov	sp, r7
 8000796:	bd80      	pop	{r7, pc}
 8000798:	20030000 	.word	0x20030000
 800079c:	00000400 	.word	0x00000400
 80007a0:	20000298 	.word	0x20000298
 80007a4:	200003e8 	.word	0x200003e8

080007a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007a8:	480d      	ldr	r0, [pc, #52]	@ (80007e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007b0:	480c      	ldr	r0, [pc, #48]	@ (80007e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80007b2:	490d      	ldr	r1, [pc, #52]	@ (80007e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007b4:	4a0d      	ldr	r2, [pc, #52]	@ (80007ec <LoopForever+0xe>)
  movs r3, #0
 80007b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007b8:	e002      	b.n	80007c0 <LoopCopyDataInit>

080007ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007be:	3304      	adds	r3, #4

080007c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007c4:	d3f9      	bcc.n	80007ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007c6:	4a0a      	ldr	r2, [pc, #40]	@ (80007f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80007c8:	4c0a      	ldr	r4, [pc, #40]	@ (80007f4 <LoopForever+0x16>)
  movs r3, #0
 80007ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007cc:	e001      	b.n	80007d2 <LoopFillZerobss>

080007ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007d0:	3204      	adds	r2, #4

080007d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007d4:	d3fb      	bcc.n	80007ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007d6:	f002 f8b9 	bl	800294c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007da:	f7ff fd59 	bl	8000290 <main>

080007de <LoopForever>:

LoopForever:
  b LoopForever
 80007de:	e7fe      	b.n	80007de <LoopForever>
  ldr   r0, =_estack
 80007e0:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 80007e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007e8:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80007ec:	08003540 	.word	0x08003540
  ldr r2, =_sbss
 80007f0:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80007f4:	200003e8 	.word	0x200003e8

080007f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007f8:	e7fe      	b.n	80007f8 <ADC_IRQHandler>
	...

080007fc <__LNH_GPIO_PeriClockControl>:
#include "stm32f429xx_gpio_driver.h"


RCC_RegDef_t* pRCC = RCC;
void __LNH_GPIO_PeriClockControl(GPIO_RegDef_t*pGPIOx, uint8_t EN_DI)
{
 80007fc:	b480      	push	{r7}
 80007fe:	b083      	sub	sp, #12
 8000800:	af00      	add	r7, sp, #0
 8000802:	6078      	str	r0, [r7, #4]
 8000804:	460b      	mov	r3, r1
 8000806:	70fb      	strb	r3, [r7, #3]
	if (EN_DI == EN)
 8000808:	78fb      	ldrb	r3, [r7, #3]
 800080a:	2b01      	cmp	r3, #1
 800080c:	f040 8090 	bne.w	8000930 <__LNH_GPIO_PeriClockControl+0x134>
		{
			if (pGPIOx == GPIOA)
 8000810:	687b      	ldr	r3, [r7, #4]
 8000812:	4a88      	ldr	r2, [pc, #544]	@ (8000a34 <__LNH_GPIO_PeriClockControl+0x238>)
 8000814:	4293      	cmp	r3, r2
 8000816:	d108      	bne.n	800082a <__LNH_GPIO_PeriClockControl+0x2e>
			{
				GPIOA_PCLK_EN();
 8000818:	4b87      	ldr	r3, [pc, #540]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800081e:	4b86      	ldr	r3, [pc, #536]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000820:	681b      	ldr	r3, [r3, #0]
 8000822:	f042 0201 	orr.w	r2, r2, #1
 8000826:	631a      	str	r2, [r3, #48]	@ 0x30
			{
				GPIOK_PCLK_DI();
			}
		}

}
 8000828:	e128      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOB)
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	4a83      	ldr	r2, [pc, #524]	@ (8000a3c <__LNH_GPIO_PeriClockControl+0x240>)
 800082e:	4293      	cmp	r3, r2
 8000830:	d108      	bne.n	8000844 <__LNH_GPIO_PeriClockControl+0x48>
				GPIOB_PCLK_EN();
 8000832:	4b81      	ldr	r3, [pc, #516]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000834:	681b      	ldr	r3, [r3, #0]
 8000836:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000838:	4b7f      	ldr	r3, [pc, #508]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	f042 0202 	orr.w	r2, r2, #2
 8000840:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000842:	e11b      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOC)
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	4a7e      	ldr	r2, [pc, #504]	@ (8000a40 <__LNH_GPIO_PeriClockControl+0x244>)
 8000848:	4293      	cmp	r3, r2
 800084a:	d108      	bne.n	800085e <__LNH_GPIO_PeriClockControl+0x62>
				GPIOC_PCLK_EN();
 800084c:	4b7a      	ldr	r3, [pc, #488]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800084e:	681b      	ldr	r3, [r3, #0]
 8000850:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000852:	4b79      	ldr	r3, [pc, #484]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000854:	681b      	ldr	r3, [r3, #0]
 8000856:	f042 0204 	orr.w	r2, r2, #4
 800085a:	631a      	str	r2, [r3, #48]	@ 0x30
}
 800085c:	e10e      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOD)
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	4a78      	ldr	r2, [pc, #480]	@ (8000a44 <__LNH_GPIO_PeriClockControl+0x248>)
 8000862:	4293      	cmp	r3, r2
 8000864:	d108      	bne.n	8000878 <__LNH_GPIO_PeriClockControl+0x7c>
				GPIOD_PCLK_EN();
 8000866:	4b74      	ldr	r3, [pc, #464]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000868:	681b      	ldr	r3, [r3, #0]
 800086a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800086c:	4b72      	ldr	r3, [pc, #456]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800086e:	681b      	ldr	r3, [r3, #0]
 8000870:	f042 0208 	orr.w	r2, r2, #8
 8000874:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000876:	e101      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOE)
 8000878:	687b      	ldr	r3, [r7, #4]
 800087a:	4a73      	ldr	r2, [pc, #460]	@ (8000a48 <__LNH_GPIO_PeriClockControl+0x24c>)
 800087c:	4293      	cmp	r3, r2
 800087e:	d108      	bne.n	8000892 <__LNH_GPIO_PeriClockControl+0x96>
				GPIOE_PCLK_EN();
 8000880:	4b6d      	ldr	r3, [pc, #436]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000886:	4b6c      	ldr	r3, [pc, #432]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000888:	681b      	ldr	r3, [r3, #0]
 800088a:	f042 0210 	orr.w	r2, r2, #16
 800088e:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000890:	e0f4      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOF)
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	4a6d      	ldr	r2, [pc, #436]	@ (8000a4c <__LNH_GPIO_PeriClockControl+0x250>)
 8000896:	4293      	cmp	r3, r2
 8000898:	d108      	bne.n	80008ac <__LNH_GPIO_PeriClockControl+0xb0>
				GPIOF_PCLK_EN();
 800089a:	4b67      	ldr	r3, [pc, #412]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80008a0:	4b65      	ldr	r3, [pc, #404]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80008a2:	681b      	ldr	r3, [r3, #0]
 80008a4:	f042 0220 	orr.w	r2, r2, #32
 80008a8:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80008aa:	e0e7      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOG)
 80008ac:	687b      	ldr	r3, [r7, #4]
 80008ae:	4a68      	ldr	r2, [pc, #416]	@ (8000a50 <__LNH_GPIO_PeriClockControl+0x254>)
 80008b0:	4293      	cmp	r3, r2
 80008b2:	d108      	bne.n	80008c6 <__LNH_GPIO_PeriClockControl+0xca>
				GPIOG_PCLK_EN();
 80008b4:	4b60      	ldr	r3, [pc, #384]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80008b6:	681b      	ldr	r3, [r3, #0]
 80008b8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80008ba:	4b5f      	ldr	r3, [pc, #380]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80008bc:	681b      	ldr	r3, [r3, #0]
 80008be:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80008c2:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80008c4:	e0da      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOH)
 80008c6:	687b      	ldr	r3, [r7, #4]
 80008c8:	4a62      	ldr	r2, [pc, #392]	@ (8000a54 <__LNH_GPIO_PeriClockControl+0x258>)
 80008ca:	4293      	cmp	r3, r2
 80008cc:	d108      	bne.n	80008e0 <__LNH_GPIO_PeriClockControl+0xe4>
				GPIOH_PCLK_EN();
 80008ce:	4b5a      	ldr	r3, [pc, #360]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80008d0:	681b      	ldr	r3, [r3, #0]
 80008d2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80008d4:	4b58      	ldr	r3, [pc, #352]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80008d6:	681b      	ldr	r3, [r3, #0]
 80008d8:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80008dc:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80008de:	e0cd      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOI)
 80008e0:	687b      	ldr	r3, [r7, #4]
 80008e2:	4a5d      	ldr	r2, [pc, #372]	@ (8000a58 <__LNH_GPIO_PeriClockControl+0x25c>)
 80008e4:	4293      	cmp	r3, r2
 80008e6:	d108      	bne.n	80008fa <__LNH_GPIO_PeriClockControl+0xfe>
				GPIOI_PCLK_EN();
 80008e8:	4b53      	ldr	r3, [pc, #332]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80008ee:	4b52      	ldr	r3, [pc, #328]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80008f0:	681b      	ldr	r3, [r3, #0]
 80008f2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80008f6:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80008f8:	e0c0      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOJ)
 80008fa:	687b      	ldr	r3, [r7, #4]
 80008fc:	4a57      	ldr	r2, [pc, #348]	@ (8000a5c <__LNH_GPIO_PeriClockControl+0x260>)
 80008fe:	4293      	cmp	r3, r2
 8000900:	d108      	bne.n	8000914 <__LNH_GPIO_PeriClockControl+0x118>
				GPIOJ_PCLK_EN();
 8000902:	4b4d      	ldr	r3, [pc, #308]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000904:	681b      	ldr	r3, [r3, #0]
 8000906:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000908:	4b4b      	ldr	r3, [pc, #300]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000910:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000912:	e0b3      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOK)
 8000914:	687b      	ldr	r3, [r7, #4]
 8000916:	4a52      	ldr	r2, [pc, #328]	@ (8000a60 <__LNH_GPIO_PeriClockControl+0x264>)
 8000918:	4293      	cmp	r3, r2
 800091a:	f040 80af 	bne.w	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
				GPIOK_PCLK_EN();
 800091e:	4b46      	ldr	r3, [pc, #280]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000920:	681b      	ldr	r3, [r3, #0]
 8000922:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000924:	4b44      	ldr	r3, [pc, #272]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000926:	681b      	ldr	r3, [r3, #0]
 8000928:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800092c:	631a      	str	r2, [r3, #48]	@ 0x30
}
 800092e:	e0a5      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			if (pGPIOx == GPIOA)
 8000930:	687b      	ldr	r3, [r7, #4]
 8000932:	4a40      	ldr	r2, [pc, #256]	@ (8000a34 <__LNH_GPIO_PeriClockControl+0x238>)
 8000934:	4293      	cmp	r3, r2
 8000936:	d108      	bne.n	800094a <__LNH_GPIO_PeriClockControl+0x14e>
				GPIOA_PCLK_DI();
 8000938:	4b3f      	ldr	r3, [pc, #252]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800093a:	681b      	ldr	r3, [r3, #0]
 800093c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800093e:	4b3e      	ldr	r3, [pc, #248]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000940:	681b      	ldr	r3, [r3, #0]
 8000942:	f022 0201 	bic.w	r2, r2, #1
 8000946:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000948:	e098      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOB)
 800094a:	687b      	ldr	r3, [r7, #4]
 800094c:	4a3b      	ldr	r2, [pc, #236]	@ (8000a3c <__LNH_GPIO_PeriClockControl+0x240>)
 800094e:	4293      	cmp	r3, r2
 8000950:	d108      	bne.n	8000964 <__LNH_GPIO_PeriClockControl+0x168>
				GPIOB_PCLK_DI();
 8000952:	4b39      	ldr	r3, [pc, #228]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000954:	681b      	ldr	r3, [r3, #0]
 8000956:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000958:	4b37      	ldr	r3, [pc, #220]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800095a:	681b      	ldr	r3, [r3, #0]
 800095c:	f022 0202 	bic.w	r2, r2, #2
 8000960:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000962:	e08b      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOC)
 8000964:	687b      	ldr	r3, [r7, #4]
 8000966:	4a36      	ldr	r2, [pc, #216]	@ (8000a40 <__LNH_GPIO_PeriClockControl+0x244>)
 8000968:	4293      	cmp	r3, r2
 800096a:	d108      	bne.n	800097e <__LNH_GPIO_PeriClockControl+0x182>
				GPIOC_PCLK_DI();
 800096c:	4b32      	ldr	r3, [pc, #200]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800096e:	681b      	ldr	r3, [r3, #0]
 8000970:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000972:	4b31      	ldr	r3, [pc, #196]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000974:	681b      	ldr	r3, [r3, #0]
 8000976:	f022 0204 	bic.w	r2, r2, #4
 800097a:	631a      	str	r2, [r3, #48]	@ 0x30
}
 800097c:	e07e      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOD)
 800097e:	687b      	ldr	r3, [r7, #4]
 8000980:	4a30      	ldr	r2, [pc, #192]	@ (8000a44 <__LNH_GPIO_PeriClockControl+0x248>)
 8000982:	4293      	cmp	r3, r2
 8000984:	d108      	bne.n	8000998 <__LNH_GPIO_PeriClockControl+0x19c>
				GPIOD_PCLK_DI();
 8000986:	4b2c      	ldr	r3, [pc, #176]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000988:	681b      	ldr	r3, [r3, #0]
 800098a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800098c:	4b2a      	ldr	r3, [pc, #168]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 800098e:	681b      	ldr	r3, [r3, #0]
 8000990:	f022 0208 	bic.w	r2, r2, #8
 8000994:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000996:	e071      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOE)
 8000998:	687b      	ldr	r3, [r7, #4]
 800099a:	4a2b      	ldr	r2, [pc, #172]	@ (8000a48 <__LNH_GPIO_PeriClockControl+0x24c>)
 800099c:	4293      	cmp	r3, r2
 800099e:	d108      	bne.n	80009b2 <__LNH_GPIO_PeriClockControl+0x1b6>
				GPIOE_PCLK_DI();
 80009a0:	4b25      	ldr	r3, [pc, #148]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009a2:	681b      	ldr	r3, [r3, #0]
 80009a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80009a6:	4b24      	ldr	r3, [pc, #144]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009a8:	681b      	ldr	r3, [r3, #0]
 80009aa:	f022 0210 	bic.w	r2, r2, #16
 80009ae:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80009b0:	e064      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOF)
 80009b2:	687b      	ldr	r3, [r7, #4]
 80009b4:	4a25      	ldr	r2, [pc, #148]	@ (8000a4c <__LNH_GPIO_PeriClockControl+0x250>)
 80009b6:	4293      	cmp	r3, r2
 80009b8:	d108      	bne.n	80009cc <__LNH_GPIO_PeriClockControl+0x1d0>
				GPIOF_PCLK_DI();
 80009ba:	4b1f      	ldr	r3, [pc, #124]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009bc:	681b      	ldr	r3, [r3, #0]
 80009be:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80009c0:	4b1d      	ldr	r3, [pc, #116]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009c2:	681b      	ldr	r3, [r3, #0]
 80009c4:	f022 0220 	bic.w	r2, r2, #32
 80009c8:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80009ca:	e057      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOG)
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	4a20      	ldr	r2, [pc, #128]	@ (8000a50 <__LNH_GPIO_PeriClockControl+0x254>)
 80009d0:	4293      	cmp	r3, r2
 80009d2:	d108      	bne.n	80009e6 <__LNH_GPIO_PeriClockControl+0x1ea>
				GPIOG_PCLK_DI();
 80009d4:	4b18      	ldr	r3, [pc, #96]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80009da:	4b17      	ldr	r3, [pc, #92]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009dc:	681b      	ldr	r3, [r3, #0]
 80009de:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80009e2:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80009e4:	e04a      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOH)
 80009e6:	687b      	ldr	r3, [r7, #4]
 80009e8:	4a1a      	ldr	r2, [pc, #104]	@ (8000a54 <__LNH_GPIO_PeriClockControl+0x258>)
 80009ea:	4293      	cmp	r3, r2
 80009ec:	d108      	bne.n	8000a00 <__LNH_GPIO_PeriClockControl+0x204>
				GPIOH_PCLK_DI();
 80009ee:	4b12      	ldr	r3, [pc, #72]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009f0:	681b      	ldr	r3, [r3, #0]
 80009f2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80009f4:	4b10      	ldr	r3, [pc, #64]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 80009f6:	681b      	ldr	r3, [r3, #0]
 80009f8:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80009fc:	631a      	str	r2, [r3, #48]	@ 0x30
}
 80009fe:	e03d      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOI)
 8000a00:	687b      	ldr	r3, [r7, #4]
 8000a02:	4a15      	ldr	r2, [pc, #84]	@ (8000a58 <__LNH_GPIO_PeriClockControl+0x25c>)
 8000a04:	4293      	cmp	r3, r2
 8000a06:	d108      	bne.n	8000a1a <__LNH_GPIO_PeriClockControl+0x21e>
				GPIOI_PCLK_DI();
 8000a08:	4b0b      	ldr	r3, [pc, #44]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000a0a:	681b      	ldr	r3, [r3, #0]
 8000a0c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000a0e:	4b0a      	ldr	r3, [pc, #40]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000a10:	681b      	ldr	r3, [r3, #0]
 8000a12:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8000a16:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000a18:	e030      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
			}else if (pGPIOx == GPIOJ)
 8000a1a:	687b      	ldr	r3, [r7, #4]
 8000a1c:	4a0f      	ldr	r2, [pc, #60]	@ (8000a5c <__LNH_GPIO_PeriClockControl+0x260>)
 8000a1e:	4293      	cmp	r3, r2
 8000a20:	d120      	bne.n	8000a64 <__LNH_GPIO_PeriClockControl+0x268>
				GPIOJ_PCLK_DI();
 8000a22:	4b05      	ldr	r3, [pc, #20]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000a24:	681b      	ldr	r3, [r3, #0]
 8000a26:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000a28:	4b03      	ldr	r3, [pc, #12]	@ (8000a38 <__LNH_GPIO_PeriClockControl+0x23c>)
 8000a2a:	681b      	ldr	r3, [r3, #0]
 8000a2c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8000a30:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000a32:	e023      	b.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
 8000a34:	40020000 	.word	0x40020000
 8000a38:	20000000 	.word	0x20000000
 8000a3c:	40020400 	.word	0x40020400
 8000a40:	40020800 	.word	0x40020800
 8000a44:	40020c00 	.word	0x40020c00
 8000a48:	40021000 	.word	0x40021000
 8000a4c:	40021400 	.word	0x40021400
 8000a50:	40021800 	.word	0x40021800
 8000a54:	40021c00 	.word	0x40021c00
 8000a58:	40022000 	.word	0x40022000
 8000a5c:	40022400 	.word	0x40022400
 8000a60:	40022800 	.word	0x40022800
			}else if (pGPIOx == GPIOK)
 8000a64:	687b      	ldr	r3, [r7, #4]
 8000a66:	4a08      	ldr	r2, [pc, #32]	@ (8000a88 <__LNH_GPIO_PeriClockControl+0x28c>)
 8000a68:	4293      	cmp	r3, r2
 8000a6a:	d107      	bne.n	8000a7c <__LNH_GPIO_PeriClockControl+0x280>
				GPIOK_PCLK_DI();
 8000a6c:	4b07      	ldr	r3, [pc, #28]	@ (8000a8c <__LNH_GPIO_PeriClockControl+0x290>)
 8000a6e:	681b      	ldr	r3, [r3, #0]
 8000a70:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000a72:	4b06      	ldr	r3, [pc, #24]	@ (8000a8c <__LNH_GPIO_PeriClockControl+0x290>)
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8000a7a:	631a      	str	r2, [r3, #48]	@ 0x30
}
 8000a7c:	bf00      	nop
 8000a7e:	370c      	adds	r7, #12
 8000a80:	46bd      	mov	sp, r7
 8000a82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a86:	4770      	bx	lr
 8000a88:	40022800 	.word	0x40022800
 8000a8c:	20000000 	.word	0x20000000

08000a90 <__LNH_GPIO_Init>:

void __LNH_GPIO_Init(GPIO_Config_t* pGPIOConfig_t)
{
 8000a90:	b480      	push	{r7}
 8000a92:	b08b      	sub	sp, #44	@ 0x2c
 8000a94:	af00      	add	r7, sp, #0
 8000a96:	6078      	str	r0, [r7, #4]
	 * trỏ đến, tuy nhiên trong lúc chúng ta trỏ đến các bit của thanh ghi, ta vô tình
	 * xác định luôn cổng cho nó vì cú pháp
	 * pGPIOConfig_t->pGPIOx->MODER, đã xác định pGPIOx do người dùng truyền vào.
	 */
	// Xác định 2 bit xác định cho chân GPIO
		uint32_t GPIO_PIN_LH1 = (pGPIOConfig_t->GPIO_PIN);
 8000a98:	687b      	ldr	r3, [r7, #4]
 8000a9a:	791b      	ldrb	r3, [r3, #4]
 8000a9c:	627b      	str	r3, [r7, #36]	@ 0x24
	    uint32_t GPIO_PIN_L2 = 2 * (pGPIOConfig_t->GPIO_PIN);
 8000a9e:	687b      	ldr	r3, [r7, #4]
 8000aa0:	791b      	ldrb	r3, [r3, #4]
 8000aa2:	005b      	lsls	r3, r3, #1
 8000aa4:	623b      	str	r3, [r7, #32]
	    uint32_t GPIO_PIN_H2 = GPIO_PIN_L2 + 1;
 8000aa6:	6a3b      	ldr	r3, [r7, #32]
 8000aa8:	3301      	adds	r3, #1
 8000aaa:	61fb      	str	r3, [r7, #28]
	    uint32_t GPIO_PIN_LMA3 = 4 * ((pGPIOConfig_t->GPIO_PIN) % 8);
 8000aac:	687b      	ldr	r3, [r7, #4]
 8000aae:	791b      	ldrb	r3, [r3, #4]
 8000ab0:	f003 0307 	and.w	r3, r3, #7
 8000ab4:	009b      	lsls	r3, r3, #2
 8000ab6:	61bb      	str	r3, [r7, #24]
		uint32_t GPIO_PIN_LMI3 = GPIO_PIN_LMA3 + 1;
 8000ab8:	69bb      	ldr	r3, [r7, #24]
 8000aba:	3301      	adds	r3, #1
 8000abc:	617b      	str	r3, [r7, #20]
		uint32_t GPIO_PIN_HMI3 = GPIO_PIN_LMI3 + 1;
 8000abe:	697b      	ldr	r3, [r7, #20]
 8000ac0:	3301      	adds	r3, #1
 8000ac2:	613b      	str	r3, [r7, #16]
		uint32_t GPIO_PIN_HMA3 = GPIO_PIN_HMI3 + 1;
 8000ac4:	693b      	ldr	r3, [r7, #16]
 8000ac6:	3301      	adds	r3, #1
 8000ac8:	60fb      	str	r3, [r7, #12]
	    // Cấu hình MODER cho từng chế độ
	    switch (pGPIOConfig_t->GPIO_MODE)
 8000aca:	687b      	ldr	r3, [r7, #4]
 8000acc:	795b      	ldrb	r3, [r3, #5]
 8000ace:	2b03      	cmp	r3, #3
 8000ad0:	d872      	bhi.n	8000bb8 <__LNH_GPIO_Init+0x128>
 8000ad2:	a201      	add	r2, pc, #4	@ (adr r2, 8000ad8 <__LNH_GPIO_Init+0x48>)
 8000ad4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ad8:	08000ae9 	.word	0x08000ae9
 8000adc:	08000b1f 	.word	0x08000b1f
 8000ae0:	08000b53 	.word	0x08000b53
 8000ae4:	08000b87 	.word	0x08000b87
	    {
	        case GPIO_MODE_IN:  // Input mode
	            pGPIOConfig_t->pGPIOx->MODER &= ~(1 << GPIO_PIN_L2);  // Clear bit L
 8000ae8:	687b      	ldr	r3, [r7, #4]
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	681a      	ldr	r2, [r3, #0]
 8000aee:	2101      	movs	r1, #1
 8000af0:	6a3b      	ldr	r3, [r7, #32]
 8000af2:	fa01 f303 	lsl.w	r3, r1, r3
 8000af6:	43db      	mvns	r3, r3
 8000af8:	4619      	mov	r1, r3
 8000afa:	687b      	ldr	r3, [r7, #4]
 8000afc:	681b      	ldr	r3, [r3, #0]
 8000afe:	400a      	ands	r2, r1
 8000b00:	601a      	str	r2, [r3, #0]
	            pGPIOConfig_t->pGPIOx->MODER &= ~(1 << GPIO_PIN_H2);  // Clear bit H
 8000b02:	687b      	ldr	r3, [r7, #4]
 8000b04:	681b      	ldr	r3, [r3, #0]
 8000b06:	681a      	ldr	r2, [r3, #0]
 8000b08:	2101      	movs	r1, #1
 8000b0a:	69fb      	ldr	r3, [r7, #28]
 8000b0c:	fa01 f303 	lsl.w	r3, r1, r3
 8000b10:	43db      	mvns	r3, r3
 8000b12:	4619      	mov	r1, r3
 8000b14:	687b      	ldr	r3, [r7, #4]
 8000b16:	681b      	ldr	r3, [r3, #0]
 8000b18:	400a      	ands	r2, r1
 8000b1a:	601a      	str	r2, [r3, #0]
	            break;
 8000b1c:	e04d      	b.n	8000bba <__LNH_GPIO_Init+0x12a>

	        case GPIO_MODE_OUT:  // Output mode
	            pGPIOConfig_t->pGPIOx->MODER |=  (1 << GPIO_PIN_L2);  // Set bit L
 8000b1e:	687b      	ldr	r3, [r7, #4]
 8000b20:	681b      	ldr	r3, [r3, #0]
 8000b22:	681a      	ldr	r2, [r3, #0]
 8000b24:	2101      	movs	r1, #1
 8000b26:	6a3b      	ldr	r3, [r7, #32]
 8000b28:	fa01 f303 	lsl.w	r3, r1, r3
 8000b2c:	4619      	mov	r1, r3
 8000b2e:	687b      	ldr	r3, [r7, #4]
 8000b30:	681b      	ldr	r3, [r3, #0]
 8000b32:	430a      	orrs	r2, r1
 8000b34:	601a      	str	r2, [r3, #0]
	            pGPIOConfig_t->pGPIOx->MODER &= ~(1 << GPIO_PIN_H2);  // Clear bit H
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	681b      	ldr	r3, [r3, #0]
 8000b3a:	681a      	ldr	r2, [r3, #0]
 8000b3c:	2101      	movs	r1, #1
 8000b3e:	69fb      	ldr	r3, [r7, #28]
 8000b40:	fa01 f303 	lsl.w	r3, r1, r3
 8000b44:	43db      	mvns	r3, r3
 8000b46:	4619      	mov	r1, r3
 8000b48:	687b      	ldr	r3, [r7, #4]
 8000b4a:	681b      	ldr	r3, [r3, #0]
 8000b4c:	400a      	ands	r2, r1
 8000b4e:	601a      	str	r2, [r3, #0]
	            break;
 8000b50:	e033      	b.n	8000bba <__LNH_GPIO_Init+0x12a>

	        case GPIO_MODE_ALT:  // Alternate function mode
	            pGPIOConfig_t->pGPIOx->MODER &= ~(1 << GPIO_PIN_L2);  // Clear bit L
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	681b      	ldr	r3, [r3, #0]
 8000b56:	681a      	ldr	r2, [r3, #0]
 8000b58:	2101      	movs	r1, #1
 8000b5a:	6a3b      	ldr	r3, [r7, #32]
 8000b5c:	fa01 f303 	lsl.w	r3, r1, r3
 8000b60:	43db      	mvns	r3, r3
 8000b62:	4619      	mov	r1, r3
 8000b64:	687b      	ldr	r3, [r7, #4]
 8000b66:	681b      	ldr	r3, [r3, #0]
 8000b68:	400a      	ands	r2, r1
 8000b6a:	601a      	str	r2, [r3, #0]
	            pGPIOConfig_t->pGPIOx->MODER |=  (1 << GPIO_PIN_H2);  // Set bit H
 8000b6c:	687b      	ldr	r3, [r7, #4]
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	681a      	ldr	r2, [r3, #0]
 8000b72:	2101      	movs	r1, #1
 8000b74:	69fb      	ldr	r3, [r7, #28]
 8000b76:	fa01 f303 	lsl.w	r3, r1, r3
 8000b7a:	4619      	mov	r1, r3
 8000b7c:	687b      	ldr	r3, [r7, #4]
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	430a      	orrs	r2, r1
 8000b82:	601a      	str	r2, [r3, #0]
	            break;
 8000b84:	e019      	b.n	8000bba <__LNH_GPIO_Init+0x12a>

	        case GPIO_MODE_ANL:  // Analog mode
	            pGPIOConfig_t->pGPIOx->MODER |=  (1 << GPIO_PIN_L2);  // Set bit L
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	681b      	ldr	r3, [r3, #0]
 8000b8a:	681a      	ldr	r2, [r3, #0]
 8000b8c:	2101      	movs	r1, #1
 8000b8e:	6a3b      	ldr	r3, [r7, #32]
 8000b90:	fa01 f303 	lsl.w	r3, r1, r3
 8000b94:	4619      	mov	r1, r3
 8000b96:	687b      	ldr	r3, [r7, #4]
 8000b98:	681b      	ldr	r3, [r3, #0]
 8000b9a:	430a      	orrs	r2, r1
 8000b9c:	601a      	str	r2, [r3, #0]
	            pGPIOConfig_t->pGPIOx->MODER |=  (1 << GPIO_PIN_H2);  // Set bit H
 8000b9e:	687b      	ldr	r3, [r7, #4]
 8000ba0:	681b      	ldr	r3, [r3, #0]
 8000ba2:	681a      	ldr	r2, [r3, #0]
 8000ba4:	2101      	movs	r1, #1
 8000ba6:	69fb      	ldr	r3, [r7, #28]
 8000ba8:	fa01 f303 	lsl.w	r3, r1, r3
 8000bac:	4619      	mov	r1, r3
 8000bae:	687b      	ldr	r3, [r7, #4]
 8000bb0:	681b      	ldr	r3, [r3, #0]
 8000bb2:	430a      	orrs	r2, r1
 8000bb4:	601a      	str	r2, [r3, #0]
	            break;
 8000bb6:	e000      	b.n	8000bba <__LNH_GPIO_Init+0x12a>

	        default:
	            // Xử lý trường hợp không hợp lệ (nếu cần)
	            break;
 8000bb8:	bf00      	nop
	    }
	    //Port được xác định qua ->pGPIOx, PIN được xác định qua GPIO_PIN_L và H


	    //Cấu hình SPEED cho từng chế độ
	    switch (pGPIOConfig_t->GPIO_SPEED)
 8000bba:	687b      	ldr	r3, [r7, #4]
 8000bbc:	799b      	ldrb	r3, [r3, #6]
 8000bbe:	2b03      	cmp	r3, #3
 8000bc0:	d872      	bhi.n	8000ca8 <__LNH_GPIO_Init+0x218>
 8000bc2:	a201      	add	r2, pc, #4	@ (adr r2, 8000bc8 <__LNH_GPIO_Init+0x138>)
 8000bc4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000bc8:	08000bd9 	.word	0x08000bd9
 8000bcc:	08000c0f 	.word	0x08000c0f
 8000bd0:	08000c43 	.word	0x08000c43
 8000bd4:	08000c77 	.word	0x08000c77
		{
			case GPIO_SPEED_LS:  // Input mode
				pGPIOConfig_t->pGPIOx->OSPEEDR &= ~(1 << GPIO_PIN_L2);  // Clear bit L
 8000bd8:	687b      	ldr	r3, [r7, #4]
 8000bda:	681b      	ldr	r3, [r3, #0]
 8000bdc:	689a      	ldr	r2, [r3, #8]
 8000bde:	2101      	movs	r1, #1
 8000be0:	6a3b      	ldr	r3, [r7, #32]
 8000be2:	fa01 f303 	lsl.w	r3, r1, r3
 8000be6:	43db      	mvns	r3, r3
 8000be8:	4619      	mov	r1, r3
 8000bea:	687b      	ldr	r3, [r7, #4]
 8000bec:	681b      	ldr	r3, [r3, #0]
 8000bee:	400a      	ands	r2, r1
 8000bf0:	609a      	str	r2, [r3, #8]
				pGPIOConfig_t->pGPIOx->OSPEEDR &= ~(1 << GPIO_PIN_H2);  // Clear bit H
 8000bf2:	687b      	ldr	r3, [r7, #4]
 8000bf4:	681b      	ldr	r3, [r3, #0]
 8000bf6:	689a      	ldr	r2, [r3, #8]
 8000bf8:	2101      	movs	r1, #1
 8000bfa:	69fb      	ldr	r3, [r7, #28]
 8000bfc:	fa01 f303 	lsl.w	r3, r1, r3
 8000c00:	43db      	mvns	r3, r3
 8000c02:	4619      	mov	r1, r3
 8000c04:	687b      	ldr	r3, [r7, #4]
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	400a      	ands	r2, r1
 8000c0a:	609a      	str	r2, [r3, #8]
				break;
 8000c0c:	e04d      	b.n	8000caa <__LNH_GPIO_Init+0x21a>

			case GPIO_SPEED_MS:  // Output mode
				pGPIOConfig_t->pGPIOx->OSPEEDR |=  (1 << GPIO_PIN_L2);  // Set bit L
 8000c0e:	687b      	ldr	r3, [r7, #4]
 8000c10:	681b      	ldr	r3, [r3, #0]
 8000c12:	689a      	ldr	r2, [r3, #8]
 8000c14:	2101      	movs	r1, #1
 8000c16:	6a3b      	ldr	r3, [r7, #32]
 8000c18:	fa01 f303 	lsl.w	r3, r1, r3
 8000c1c:	4619      	mov	r1, r3
 8000c1e:	687b      	ldr	r3, [r7, #4]
 8000c20:	681b      	ldr	r3, [r3, #0]
 8000c22:	430a      	orrs	r2, r1
 8000c24:	609a      	str	r2, [r3, #8]
				pGPIOConfig_t->pGPIOx->OSPEEDR &= ~(1 << GPIO_PIN_H2);  // Clear bit H
 8000c26:	687b      	ldr	r3, [r7, #4]
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	689a      	ldr	r2, [r3, #8]
 8000c2c:	2101      	movs	r1, #1
 8000c2e:	69fb      	ldr	r3, [r7, #28]
 8000c30:	fa01 f303 	lsl.w	r3, r1, r3
 8000c34:	43db      	mvns	r3, r3
 8000c36:	4619      	mov	r1, r3
 8000c38:	687b      	ldr	r3, [r7, #4]
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	400a      	ands	r2, r1
 8000c3e:	609a      	str	r2, [r3, #8]
				break;
 8000c40:	e033      	b.n	8000caa <__LNH_GPIO_Init+0x21a>

			case GPIO_SPEED_HS:  // Alternate function mode
				pGPIOConfig_t->pGPIOx->OSPEEDR &= ~(1 << GPIO_PIN_L2);  // Clear bit L
 8000c42:	687b      	ldr	r3, [r7, #4]
 8000c44:	681b      	ldr	r3, [r3, #0]
 8000c46:	689a      	ldr	r2, [r3, #8]
 8000c48:	2101      	movs	r1, #1
 8000c4a:	6a3b      	ldr	r3, [r7, #32]
 8000c4c:	fa01 f303 	lsl.w	r3, r1, r3
 8000c50:	43db      	mvns	r3, r3
 8000c52:	4619      	mov	r1, r3
 8000c54:	687b      	ldr	r3, [r7, #4]
 8000c56:	681b      	ldr	r3, [r3, #0]
 8000c58:	400a      	ands	r2, r1
 8000c5a:	609a      	str	r2, [r3, #8]
				pGPIOConfig_t->pGPIOx->OSPEEDR |=  (1 << GPIO_PIN_H2);  // Set bit H
 8000c5c:	687b      	ldr	r3, [r7, #4]
 8000c5e:	681b      	ldr	r3, [r3, #0]
 8000c60:	689a      	ldr	r2, [r3, #8]
 8000c62:	2101      	movs	r1, #1
 8000c64:	69fb      	ldr	r3, [r7, #28]
 8000c66:	fa01 f303 	lsl.w	r3, r1, r3
 8000c6a:	4619      	mov	r1, r3
 8000c6c:	687b      	ldr	r3, [r7, #4]
 8000c6e:	681b      	ldr	r3, [r3, #0]
 8000c70:	430a      	orrs	r2, r1
 8000c72:	609a      	str	r2, [r3, #8]
				break;
 8000c74:	e019      	b.n	8000caa <__LNH_GPIO_Init+0x21a>

			case GPIO_SPEED_VHS:  // Analog mode
				pGPIOConfig_t->pGPIOx->OSPEEDR |=  (1 << GPIO_PIN_L2);  // Set bit L
 8000c76:	687b      	ldr	r3, [r7, #4]
 8000c78:	681b      	ldr	r3, [r3, #0]
 8000c7a:	689a      	ldr	r2, [r3, #8]
 8000c7c:	2101      	movs	r1, #1
 8000c7e:	6a3b      	ldr	r3, [r7, #32]
 8000c80:	fa01 f303 	lsl.w	r3, r1, r3
 8000c84:	4619      	mov	r1, r3
 8000c86:	687b      	ldr	r3, [r7, #4]
 8000c88:	681b      	ldr	r3, [r3, #0]
 8000c8a:	430a      	orrs	r2, r1
 8000c8c:	609a      	str	r2, [r3, #8]
				pGPIOConfig_t->pGPIOx->OSPEEDR |=  (1 << GPIO_PIN_H2);  // Set bit H
 8000c8e:	687b      	ldr	r3, [r7, #4]
 8000c90:	681b      	ldr	r3, [r3, #0]
 8000c92:	689a      	ldr	r2, [r3, #8]
 8000c94:	2101      	movs	r1, #1
 8000c96:	69fb      	ldr	r3, [r7, #28]
 8000c98:	fa01 f303 	lsl.w	r3, r1, r3
 8000c9c:	4619      	mov	r1, r3
 8000c9e:	687b      	ldr	r3, [r7, #4]
 8000ca0:	681b      	ldr	r3, [r3, #0]
 8000ca2:	430a      	orrs	r2, r1
 8000ca4:	609a      	str	r2, [r3, #8]
				break;
 8000ca6:	e000      	b.n	8000caa <__LNH_GPIO_Init+0x21a>

			default:
				// Xử lý trường hợp không hợp lệ (nếu cần)
				break;
 8000ca8:	bf00      	nop
		}

	    //Cấu hình OTYPE cho từng chế độ
	    switch (pGPIOConfig_t->GPIO_OTYPE)
 8000caa:	687b      	ldr	r3, [r7, #4]
 8000cac:	7a1b      	ldrb	r3, [r3, #8]
 8000cae:	2b00      	cmp	r3, #0
 8000cb0:	d002      	beq.n	8000cb8 <__LNH_GPIO_Init+0x228>
 8000cb2:	2b01      	cmp	r3, #1
 8000cb4:	d00e      	beq.n	8000cd4 <__LNH_GPIO_Init+0x244>
	    		pGPIOConfig_t->pGPIOx->OTYPER |=  (1 << GPIO_PIN_LH1);  // Set bit LH1
	    		break;

	    	default:
	    		// Xử lí trường hợp không hợp lệ (nếu cần)
	    		break;
 8000cb6:	e01a      	b.n	8000cee <__LNH_GPIO_Init+0x25e>
	    		pGPIOConfig_t->pGPIOx->OTYPER &= ~(1 << GPIO_PIN_LH1);  // Clear bit LH1
 8000cb8:	687b      	ldr	r3, [r7, #4]
 8000cba:	681b      	ldr	r3, [r3, #0]
 8000cbc:	685a      	ldr	r2, [r3, #4]
 8000cbe:	2101      	movs	r1, #1
 8000cc0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000cc2:	fa01 f303 	lsl.w	r3, r1, r3
 8000cc6:	43db      	mvns	r3, r3
 8000cc8:	4619      	mov	r1, r3
 8000cca:	687b      	ldr	r3, [r7, #4]
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	400a      	ands	r2, r1
 8000cd0:	605a      	str	r2, [r3, #4]
	    		break;
 8000cd2:	e00c      	b.n	8000cee <__LNH_GPIO_Init+0x25e>
	    		pGPIOConfig_t->pGPIOx->OTYPER |=  (1 << GPIO_PIN_LH1);  // Set bit LH1
 8000cd4:	687b      	ldr	r3, [r7, #4]
 8000cd6:	681b      	ldr	r3, [r3, #0]
 8000cd8:	685a      	ldr	r2, [r3, #4]
 8000cda:	2101      	movs	r1, #1
 8000cdc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000cde:	fa01 f303 	lsl.w	r3, r1, r3
 8000ce2:	4619      	mov	r1, r3
 8000ce4:	687b      	ldr	r3, [r7, #4]
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	430a      	orrs	r2, r1
 8000cea:	605a      	str	r2, [r3, #4]
	    		break;
 8000cec:	bf00      	nop
	    }
	    //Cấu hình PUPD cho từng chế độ
	    switch (pGPIOConfig_t->GPIO_PUPD)
 8000cee:	687b      	ldr	r3, [r7, #4]
 8000cf0:	79db      	ldrb	r3, [r3, #7]
 8000cf2:	2b03      	cmp	r3, #3
 8000cf4:	d872      	bhi.n	8000ddc <__LNH_GPIO_Init+0x34c>
 8000cf6:	a201      	add	r2, pc, #4	@ (adr r2, 8000cfc <__LNH_GPIO_Init+0x26c>)
 8000cf8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000cfc:	08000d0d 	.word	0x08000d0d
 8000d00:	08000d43 	.word	0x08000d43
 8000d04:	08000d77 	.word	0x08000d77
 8000d08:	08000dab 	.word	0x08000dab
	    {
	    	case GPIO_PUPD_NP: //No pull up and no pull down
	    		pGPIOConfig_t->pGPIOx->PUPDR &= ~(1 << GPIO_PIN_L2);  // Clear bit L
 8000d0c:	687b      	ldr	r3, [r7, #4]
 8000d0e:	681b      	ldr	r3, [r3, #0]
 8000d10:	68da      	ldr	r2, [r3, #12]
 8000d12:	2101      	movs	r1, #1
 8000d14:	6a3b      	ldr	r3, [r7, #32]
 8000d16:	fa01 f303 	lsl.w	r3, r1, r3
 8000d1a:	43db      	mvns	r3, r3
 8000d1c:	4619      	mov	r1, r3
 8000d1e:	687b      	ldr	r3, [r7, #4]
 8000d20:	681b      	ldr	r3, [r3, #0]
 8000d22:	400a      	ands	r2, r1
 8000d24:	60da      	str	r2, [r3, #12]
	    		pGPIOConfig_t->pGPIOx->PUPDR &= ~(1 << GPIO_PIN_H2);  // Clear bit H
 8000d26:	687b      	ldr	r3, [r7, #4]
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	68da      	ldr	r2, [r3, #12]
 8000d2c:	2101      	movs	r1, #1
 8000d2e:	69fb      	ldr	r3, [r7, #28]
 8000d30:	fa01 f303 	lsl.w	r3, r1, r3
 8000d34:	43db      	mvns	r3, r3
 8000d36:	4619      	mov	r1, r3
 8000d38:	687b      	ldr	r3, [r7, #4]
 8000d3a:	681b      	ldr	r3, [r3, #0]
 8000d3c:	400a      	ands	r2, r1
 8000d3e:	60da      	str	r2, [r3, #12]
	    		break;
 8000d40:	e04d      	b.n	8000dde <__LNH_GPIO_Init+0x34e>

	    	case GPIO_PUPD_PU: //Pull up
	    		pGPIOConfig_t->pGPIOx->PUPDR |=  (1 << GPIO_PIN_L2);  // Set bit L
 8000d42:	687b      	ldr	r3, [r7, #4]
 8000d44:	681b      	ldr	r3, [r3, #0]
 8000d46:	68da      	ldr	r2, [r3, #12]
 8000d48:	2101      	movs	r1, #1
 8000d4a:	6a3b      	ldr	r3, [r7, #32]
 8000d4c:	fa01 f303 	lsl.w	r3, r1, r3
 8000d50:	4619      	mov	r1, r3
 8000d52:	687b      	ldr	r3, [r7, #4]
 8000d54:	681b      	ldr	r3, [r3, #0]
 8000d56:	430a      	orrs	r2, r1
 8000d58:	60da      	str	r2, [r3, #12]
	    		pGPIOConfig_t->pGPIOx->PUPDR |= ~(1 << GPIO_PIN_H2);  // Clear bit H
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	681b      	ldr	r3, [r3, #0]
 8000d5e:	68da      	ldr	r2, [r3, #12]
 8000d60:	2101      	movs	r1, #1
 8000d62:	69fb      	ldr	r3, [r7, #28]
 8000d64:	fa01 f303 	lsl.w	r3, r1, r3
 8000d68:	43db      	mvns	r3, r3
 8000d6a:	4619      	mov	r1, r3
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	430a      	orrs	r2, r1
 8000d72:	60da      	str	r2, [r3, #12]
	    		break;
 8000d74:	e033      	b.n	8000dde <__LNH_GPIO_Init+0x34e>

	    	case GPIO_PUPD_PD:  // Alternate function mode
	    		pGPIOConfig_t->pGPIOx->PUPDR &= ~(1 << GPIO_PIN_L2);  // Clear bit L
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	681b      	ldr	r3, [r3, #0]
 8000d7a:	68da      	ldr	r2, [r3, #12]
 8000d7c:	2101      	movs	r1, #1
 8000d7e:	6a3b      	ldr	r3, [r7, #32]
 8000d80:	fa01 f303 	lsl.w	r3, r1, r3
 8000d84:	43db      	mvns	r3, r3
 8000d86:	4619      	mov	r1, r3
 8000d88:	687b      	ldr	r3, [r7, #4]
 8000d8a:	681b      	ldr	r3, [r3, #0]
 8000d8c:	400a      	ands	r2, r1
 8000d8e:	60da      	str	r2, [r3, #12]
	    		pGPIOConfig_t->pGPIOx->PUPDR |=  (1 << GPIO_PIN_H2);  // Set bit H
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	681b      	ldr	r3, [r3, #0]
 8000d94:	68da      	ldr	r2, [r3, #12]
 8000d96:	2101      	movs	r1, #1
 8000d98:	69fb      	ldr	r3, [r7, #28]
 8000d9a:	fa01 f303 	lsl.w	r3, r1, r3
 8000d9e:	4619      	mov	r1, r3
 8000da0:	687b      	ldr	r3, [r7, #4]
 8000da2:	681b      	ldr	r3, [r3, #0]
 8000da4:	430a      	orrs	r2, r1
 8000da6:	60da      	str	r2, [r3, #12]
	    		break;
 8000da8:	e019      	b.n	8000dde <__LNH_GPIO_Init+0x34e>

	    	case GPIO_PUPD_RV:  // Analog mode
	    		pGPIOConfig_t->pGPIOx->PUPDR |=  (1 << GPIO_PIN_L2);  // Set bit L
 8000daa:	687b      	ldr	r3, [r7, #4]
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	68da      	ldr	r2, [r3, #12]
 8000db0:	2101      	movs	r1, #1
 8000db2:	6a3b      	ldr	r3, [r7, #32]
 8000db4:	fa01 f303 	lsl.w	r3, r1, r3
 8000db8:	4619      	mov	r1, r3
 8000dba:	687b      	ldr	r3, [r7, #4]
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	430a      	orrs	r2, r1
 8000dc0:	60da      	str	r2, [r3, #12]
	    		pGPIOConfig_t->pGPIOx->PUPDR |=  (1 << GPIO_PIN_H2);  // Set bit H
 8000dc2:	687b      	ldr	r3, [r7, #4]
 8000dc4:	681b      	ldr	r3, [r3, #0]
 8000dc6:	68da      	ldr	r2, [r3, #12]
 8000dc8:	2101      	movs	r1, #1
 8000dca:	69fb      	ldr	r3, [r7, #28]
 8000dcc:	fa01 f303 	lsl.w	r3, r1, r3
 8000dd0:	4619      	mov	r1, r3
 8000dd2:	687b      	ldr	r3, [r7, #4]
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	430a      	orrs	r2, r1
 8000dd8:	60da      	str	r2, [r3, #12]
	    		break;
 8000dda:	e000      	b.n	8000dde <__LNH_GPIO_Init+0x34e>

	    	default:
	    		// Xử lí trường hợp không hợp lệ (nếu cần)
	    		break;
 8000ddc:	bf00      	nop

	    }
	    // Cấu hình AF cho từng chế độ
	    if(pGPIOConfig_t->GPIO_PIN <=7)
 8000dde:	687b      	ldr	r3, [r7, #4]
 8000de0:	791b      	ldrb	r3, [r3, #4]
 8000de2:	2b07      	cmp	r3, #7
 8000de4:	f200 8363 	bhi.w	80014ae <__LNH_GPIO_Init+0xa1e>
	    {
		    switch (pGPIOConfig_t->GPIO_AF)
 8000de8:	687b      	ldr	r3, [r7, #4]
 8000dea:	7a5b      	ldrb	r3, [r3, #9]
 8000dec:	2b0f      	cmp	r3, #15
 8000dee:	f200 86b6 	bhi.w	8001b5e <__LNH_GPIO_Init+0x10ce>
 8000df2:	a201      	add	r2, pc, #4	@ (adr r2, 8000df8 <__LNH_GPIO_Init+0x368>)
 8000df4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000df8:	08000e39 	.word	0x08000e39
 8000dfc:	08000ea5 	.word	0x08000ea5
 8000e00:	08000f0f 	.word	0x08000f0f
 8000e04:	08000f79 	.word	0x08000f79
 8000e08:	08000fe1 	.word	0x08000fe1
 8000e0c:	0800104b 	.word	0x0800104b
 8000e10:	080010b3 	.word	0x080010b3
 8000e14:	0800111b 	.word	0x0800111b
 8000e18:	08001181 	.word	0x08001181
 8000e1c:	080011eb 	.word	0x080011eb
 8000e20:	08001253 	.word	0x08001253
 8000e24:	080012bb 	.word	0x080012bb
 8000e28:	08001321 	.word	0x08001321
 8000e2c:	08001387 	.word	0x08001387
 8000e30:	080013eb 	.word	0x080013eb
 8000e34:	0800144d 	.word	0x0800144d
		    {
		    	case GPIO_AF_0:
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMA3);
 8000e38:	687b      	ldr	r3, [r7, #4]
 8000e3a:	681b      	ldr	r3, [r3, #0]
 8000e3c:	6a1a      	ldr	r2, [r3, #32]
 8000e3e:	2101      	movs	r1, #1
 8000e40:	69bb      	ldr	r3, [r7, #24]
 8000e42:	fa01 f303 	lsl.w	r3, r1, r3
 8000e46:	43db      	mvns	r3, r3
 8000e48:	4619      	mov	r1, r3
 8000e4a:	687b      	ldr	r3, [r7, #4]
 8000e4c:	681b      	ldr	r3, [r3, #0]
 8000e4e:	400a      	ands	r2, r1
 8000e50:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 8000e52:	687b      	ldr	r3, [r7, #4]
 8000e54:	681b      	ldr	r3, [r3, #0]
 8000e56:	6a1a      	ldr	r2, [r3, #32]
 8000e58:	2101      	movs	r1, #1
 8000e5a:	697b      	ldr	r3, [r7, #20]
 8000e5c:	fa01 f303 	lsl.w	r3, r1, r3
 8000e60:	43db      	mvns	r3, r3
 8000e62:	4619      	mov	r1, r3
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	681b      	ldr	r3, [r3, #0]
 8000e68:	400a      	ands	r2, r1
 8000e6a:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 8000e6c:	687b      	ldr	r3, [r7, #4]
 8000e6e:	681b      	ldr	r3, [r3, #0]
 8000e70:	6a1a      	ldr	r2, [r3, #32]
 8000e72:	2101      	movs	r1, #1
 8000e74:	693b      	ldr	r3, [r7, #16]
 8000e76:	fa01 f303 	lsl.w	r3, r1, r3
 8000e7a:	43db      	mvns	r3, r3
 8000e7c:	4619      	mov	r1, r3
 8000e7e:	687b      	ldr	r3, [r7, #4]
 8000e80:	681b      	ldr	r3, [r3, #0]
 8000e82:	400a      	ands	r2, r1
 8000e84:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	681b      	ldr	r3, [r3, #0]
 8000e8a:	6a1a      	ldr	r2, [r3, #32]
 8000e8c:	2101      	movs	r1, #1
 8000e8e:	68fb      	ldr	r3, [r7, #12]
 8000e90:	fa01 f303 	lsl.w	r3, r1, r3
 8000e94:	43db      	mvns	r3, r3
 8000e96:	4619      	mov	r1, r3
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	400a      	ands	r2, r1
 8000e9e:	621a      	str	r2, [r3, #32]
		    		break;
 8000ea0:	f000 be60 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_1:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	6a1a      	ldr	r2, [r3, #32]
 8000eaa:	2101      	movs	r1, #1
 8000eac:	69bb      	ldr	r3, [r7, #24]
 8000eae:	fa01 f303 	lsl.w	r3, r1, r3
 8000eb2:	4619      	mov	r1, r3
 8000eb4:	687b      	ldr	r3, [r7, #4]
 8000eb6:	681b      	ldr	r3, [r3, #0]
 8000eb8:	430a      	orrs	r2, r1
 8000eba:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	681b      	ldr	r3, [r3, #0]
 8000ec0:	6a1a      	ldr	r2, [r3, #32]
 8000ec2:	2101      	movs	r1, #1
 8000ec4:	697b      	ldr	r3, [r7, #20]
 8000ec6:	fa01 f303 	lsl.w	r3, r1, r3
 8000eca:	43db      	mvns	r3, r3
 8000ecc:	4619      	mov	r1, r3
 8000ece:	687b      	ldr	r3, [r7, #4]
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	400a      	ands	r2, r1
 8000ed4:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 8000ed6:	687b      	ldr	r3, [r7, #4]
 8000ed8:	681b      	ldr	r3, [r3, #0]
 8000eda:	6a1a      	ldr	r2, [r3, #32]
 8000edc:	2101      	movs	r1, #1
 8000ede:	693b      	ldr	r3, [r7, #16]
 8000ee0:	fa01 f303 	lsl.w	r3, r1, r3
 8000ee4:	43db      	mvns	r3, r3
 8000ee6:	4619      	mov	r1, r3
 8000ee8:	687b      	ldr	r3, [r7, #4]
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	400a      	ands	r2, r1
 8000eee:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 8000ef0:	687b      	ldr	r3, [r7, #4]
 8000ef2:	681b      	ldr	r3, [r3, #0]
 8000ef4:	6a1a      	ldr	r2, [r3, #32]
 8000ef6:	2101      	movs	r1, #1
 8000ef8:	68fb      	ldr	r3, [r7, #12]
 8000efa:	fa01 f303 	lsl.w	r3, r1, r3
 8000efe:	43db      	mvns	r3, r3
 8000f00:	4619      	mov	r1, r3
 8000f02:	687b      	ldr	r3, [r7, #4]
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	400a      	ands	r2, r1
 8000f08:	621a      	str	r2, [r3, #32]
		    		break;
 8000f0a:	f000 be2b 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_2:
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMA3);
 8000f0e:	687b      	ldr	r3, [r7, #4]
 8000f10:	681b      	ldr	r3, [r3, #0]
 8000f12:	6a1a      	ldr	r2, [r3, #32]
 8000f14:	2101      	movs	r1, #1
 8000f16:	69bb      	ldr	r3, [r7, #24]
 8000f18:	fa01 f303 	lsl.w	r3, r1, r3
 8000f1c:	43db      	mvns	r3, r3
 8000f1e:	4619      	mov	r1, r3
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	400a      	ands	r2, r1
 8000f26:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 8000f28:	687b      	ldr	r3, [r7, #4]
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	6a1a      	ldr	r2, [r3, #32]
 8000f2e:	2101      	movs	r1, #1
 8000f30:	697b      	ldr	r3, [r7, #20]
 8000f32:	fa01 f303 	lsl.w	r3, r1, r3
 8000f36:	4619      	mov	r1, r3
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	681b      	ldr	r3, [r3, #0]
 8000f3c:	430a      	orrs	r2, r1
 8000f3e:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 8000f40:	687b      	ldr	r3, [r7, #4]
 8000f42:	681b      	ldr	r3, [r3, #0]
 8000f44:	6a1a      	ldr	r2, [r3, #32]
 8000f46:	2101      	movs	r1, #1
 8000f48:	693b      	ldr	r3, [r7, #16]
 8000f4a:	fa01 f303 	lsl.w	r3, r1, r3
 8000f4e:	43db      	mvns	r3, r3
 8000f50:	4619      	mov	r1, r3
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	681b      	ldr	r3, [r3, #0]
 8000f56:	400a      	ands	r2, r1
 8000f58:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 8000f5a:	687b      	ldr	r3, [r7, #4]
 8000f5c:	681b      	ldr	r3, [r3, #0]
 8000f5e:	6a1a      	ldr	r2, [r3, #32]
 8000f60:	2101      	movs	r1, #1
 8000f62:	68fb      	ldr	r3, [r7, #12]
 8000f64:	fa01 f303 	lsl.w	r3, r1, r3
 8000f68:	43db      	mvns	r3, r3
 8000f6a:	4619      	mov	r1, r3
 8000f6c:	687b      	ldr	r3, [r7, #4]
 8000f6e:	681b      	ldr	r3, [r3, #0]
 8000f70:	400a      	ands	r2, r1
 8000f72:	621a      	str	r2, [r3, #32]
		    		break;
 8000f74:	f000 bdf6 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_3:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	6a1a      	ldr	r2, [r3, #32]
 8000f7e:	2101      	movs	r1, #1
 8000f80:	69bb      	ldr	r3, [r7, #24]
 8000f82:	fa01 f303 	lsl.w	r3, r1, r3
 8000f86:	4619      	mov	r1, r3
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	430a      	orrs	r2, r1
 8000f8e:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 8000f90:	687b      	ldr	r3, [r7, #4]
 8000f92:	681b      	ldr	r3, [r3, #0]
 8000f94:	6a1a      	ldr	r2, [r3, #32]
 8000f96:	2101      	movs	r1, #1
 8000f98:	697b      	ldr	r3, [r7, #20]
 8000f9a:	fa01 f303 	lsl.w	r3, r1, r3
 8000f9e:	4619      	mov	r1, r3
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	681b      	ldr	r3, [r3, #0]
 8000fa4:	430a      	orrs	r2, r1
 8000fa6:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	681b      	ldr	r3, [r3, #0]
 8000fac:	6a1a      	ldr	r2, [r3, #32]
 8000fae:	2101      	movs	r1, #1
 8000fb0:	693b      	ldr	r3, [r7, #16]
 8000fb2:	fa01 f303 	lsl.w	r3, r1, r3
 8000fb6:	43db      	mvns	r3, r3
 8000fb8:	4619      	mov	r1, r3
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	400a      	ands	r2, r1
 8000fc0:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 8000fc2:	687b      	ldr	r3, [r7, #4]
 8000fc4:	681b      	ldr	r3, [r3, #0]
 8000fc6:	6a1a      	ldr	r2, [r3, #32]
 8000fc8:	2101      	movs	r1, #1
 8000fca:	68fb      	ldr	r3, [r7, #12]
 8000fcc:	fa01 f303 	lsl.w	r3, r1, r3
 8000fd0:	43db      	mvns	r3, r3
 8000fd2:	4619      	mov	r1, r3
 8000fd4:	687b      	ldr	r3, [r7, #4]
 8000fd6:	681b      	ldr	r3, [r3, #0]
 8000fd8:	400a      	ands	r2, r1
 8000fda:	621a      	str	r2, [r3, #32]
		    		break;
 8000fdc:	f000 bdc2 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_4:
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMA3);
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	681b      	ldr	r3, [r3, #0]
 8000fe4:	6a1a      	ldr	r2, [r3, #32]
 8000fe6:	2101      	movs	r1, #1
 8000fe8:	69bb      	ldr	r3, [r7, #24]
 8000fea:	fa01 f303 	lsl.w	r3, r1, r3
 8000fee:	43db      	mvns	r3, r3
 8000ff0:	4619      	mov	r1, r3
 8000ff2:	687b      	ldr	r3, [r7, #4]
 8000ff4:	681b      	ldr	r3, [r3, #0]
 8000ff6:	400a      	ands	r2, r1
 8000ff8:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 8000ffa:	687b      	ldr	r3, [r7, #4]
 8000ffc:	681b      	ldr	r3, [r3, #0]
 8000ffe:	6a1a      	ldr	r2, [r3, #32]
 8001000:	2101      	movs	r1, #1
 8001002:	697b      	ldr	r3, [r7, #20]
 8001004:	fa01 f303 	lsl.w	r3, r1, r3
 8001008:	43db      	mvns	r3, r3
 800100a:	4619      	mov	r1, r3
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	400a      	ands	r2, r1
 8001012:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &=  (1 << GPIO_PIN_HMI3);
 8001014:	687b      	ldr	r3, [r7, #4]
 8001016:	681b      	ldr	r3, [r3, #0]
 8001018:	6a1a      	ldr	r2, [r3, #32]
 800101a:	2101      	movs	r1, #1
 800101c:	693b      	ldr	r3, [r7, #16]
 800101e:	fa01 f303 	lsl.w	r3, r1, r3
 8001022:	4619      	mov	r1, r3
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	681b      	ldr	r3, [r3, #0]
 8001028:	400a      	ands	r2, r1
 800102a:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	681b      	ldr	r3, [r3, #0]
 8001030:	6a1a      	ldr	r2, [r3, #32]
 8001032:	2101      	movs	r1, #1
 8001034:	68fb      	ldr	r3, [r7, #12]
 8001036:	fa01 f303 	lsl.w	r3, r1, r3
 800103a:	43db      	mvns	r3, r3
 800103c:	4619      	mov	r1, r3
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	400a      	ands	r2, r1
 8001044:	621a      	str	r2, [r3, #32]
		    		break;
 8001046:	f000 bd8d 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_5:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	6a1a      	ldr	r2, [r3, #32]
 8001050:	2101      	movs	r1, #1
 8001052:	69bb      	ldr	r3, [r7, #24]
 8001054:	fa01 f303 	lsl.w	r3, r1, r3
 8001058:	4619      	mov	r1, r3
 800105a:	687b      	ldr	r3, [r7, #4]
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	430a      	orrs	r2, r1
 8001060:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 8001062:	687b      	ldr	r3, [r7, #4]
 8001064:	681b      	ldr	r3, [r3, #0]
 8001066:	6a1a      	ldr	r2, [r3, #32]
 8001068:	2101      	movs	r1, #1
 800106a:	697b      	ldr	r3, [r7, #20]
 800106c:	fa01 f303 	lsl.w	r3, r1, r3
 8001070:	43db      	mvns	r3, r3
 8001072:	4619      	mov	r1, r3
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	400a      	ands	r2, r1
 800107a:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMI3);
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	6a1a      	ldr	r2, [r3, #32]
 8001082:	2101      	movs	r1, #1
 8001084:	693b      	ldr	r3, [r7, #16]
 8001086:	fa01 f303 	lsl.w	r3, r1, r3
 800108a:	4619      	mov	r1, r3
 800108c:	687b      	ldr	r3, [r7, #4]
 800108e:	681b      	ldr	r3, [r3, #0]
 8001090:	430a      	orrs	r2, r1
 8001092:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 8001094:	687b      	ldr	r3, [r7, #4]
 8001096:	681b      	ldr	r3, [r3, #0]
 8001098:	6a1a      	ldr	r2, [r3, #32]
 800109a:	2101      	movs	r1, #1
 800109c:	68fb      	ldr	r3, [r7, #12]
 800109e:	fa01 f303 	lsl.w	r3, r1, r3
 80010a2:	43db      	mvns	r3, r3
 80010a4:	4619      	mov	r1, r3
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	681b      	ldr	r3, [r3, #0]
 80010aa:	400a      	ands	r2, r1
 80010ac:	621a      	str	r2, [r3, #32]
		    		break;
 80010ae:	f000 bd59 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_6:
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMA3);
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	681b      	ldr	r3, [r3, #0]
 80010b6:	6a1a      	ldr	r2, [r3, #32]
 80010b8:	2101      	movs	r1, #1
 80010ba:	69bb      	ldr	r3, [r7, #24]
 80010bc:	fa01 f303 	lsl.w	r3, r1, r3
 80010c0:	43db      	mvns	r3, r3
 80010c2:	4619      	mov	r1, r3
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	681b      	ldr	r3, [r3, #0]
 80010c8:	400a      	ands	r2, r1
 80010ca:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 80010cc:	687b      	ldr	r3, [r7, #4]
 80010ce:	681b      	ldr	r3, [r3, #0]
 80010d0:	6a1a      	ldr	r2, [r3, #32]
 80010d2:	2101      	movs	r1, #1
 80010d4:	697b      	ldr	r3, [r7, #20]
 80010d6:	fa01 f303 	lsl.w	r3, r1, r3
 80010da:	4619      	mov	r1, r3
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	430a      	orrs	r2, r1
 80010e2:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMI3);
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	681b      	ldr	r3, [r3, #0]
 80010e8:	6a1a      	ldr	r2, [r3, #32]
 80010ea:	2101      	movs	r1, #1
 80010ec:	693b      	ldr	r3, [r7, #16]
 80010ee:	fa01 f303 	lsl.w	r3, r1, r3
 80010f2:	4619      	mov	r1, r3
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	430a      	orrs	r2, r1
 80010fa:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 80010fc:	687b      	ldr	r3, [r7, #4]
 80010fe:	681b      	ldr	r3, [r3, #0]
 8001100:	6a1a      	ldr	r2, [r3, #32]
 8001102:	2101      	movs	r1, #1
 8001104:	68fb      	ldr	r3, [r7, #12]
 8001106:	fa01 f303 	lsl.w	r3, r1, r3
 800110a:	43db      	mvns	r3, r3
 800110c:	4619      	mov	r1, r3
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	681b      	ldr	r3, [r3, #0]
 8001112:	400a      	ands	r2, r1
 8001114:	621a      	str	r2, [r3, #32]
		    		break;
 8001116:	f000 bd25 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_7:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 800111a:	687b      	ldr	r3, [r7, #4]
 800111c:	681b      	ldr	r3, [r3, #0]
 800111e:	6a1a      	ldr	r2, [r3, #32]
 8001120:	2101      	movs	r1, #1
 8001122:	69bb      	ldr	r3, [r7, #24]
 8001124:	fa01 f303 	lsl.w	r3, r1, r3
 8001128:	4619      	mov	r1, r3
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	681b      	ldr	r3, [r3, #0]
 800112e:	430a      	orrs	r2, r1
 8001130:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	681b      	ldr	r3, [r3, #0]
 8001136:	6a1a      	ldr	r2, [r3, #32]
 8001138:	2101      	movs	r1, #1
 800113a:	697b      	ldr	r3, [r7, #20]
 800113c:	fa01 f303 	lsl.w	r3, r1, r3
 8001140:	4619      	mov	r1, r3
 8001142:	687b      	ldr	r3, [r7, #4]
 8001144:	681b      	ldr	r3, [r3, #0]
 8001146:	430a      	orrs	r2, r1
 8001148:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMI3);
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	681b      	ldr	r3, [r3, #0]
 800114e:	6a1a      	ldr	r2, [r3, #32]
 8001150:	2101      	movs	r1, #1
 8001152:	693b      	ldr	r3, [r7, #16]
 8001154:	fa01 f303 	lsl.w	r3, r1, r3
 8001158:	4619      	mov	r1, r3
 800115a:	687b      	ldr	r3, [r7, #4]
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	430a      	orrs	r2, r1
 8001160:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMA3);
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	6a1a      	ldr	r2, [r3, #32]
 8001168:	2101      	movs	r1, #1
 800116a:	68fb      	ldr	r3, [r7, #12]
 800116c:	fa01 f303 	lsl.w	r3, r1, r3
 8001170:	43db      	mvns	r3, r3
 8001172:	4619      	mov	r1, r3
 8001174:	687b      	ldr	r3, [r7, #4]
 8001176:	681b      	ldr	r3, [r3, #0]
 8001178:	400a      	ands	r2, r1
 800117a:	621a      	str	r2, [r3, #32]
		    		break;
 800117c:	f000 bcf2 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_8:
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMA3);
 8001180:	687b      	ldr	r3, [r7, #4]
 8001182:	681b      	ldr	r3, [r3, #0]
 8001184:	6a1a      	ldr	r2, [r3, #32]
 8001186:	2101      	movs	r1, #1
 8001188:	69bb      	ldr	r3, [r7, #24]
 800118a:	fa01 f303 	lsl.w	r3, r1, r3
 800118e:	43db      	mvns	r3, r3
 8001190:	4619      	mov	r1, r3
 8001192:	687b      	ldr	r3, [r7, #4]
 8001194:	681b      	ldr	r3, [r3, #0]
 8001196:	400a      	ands	r2, r1
 8001198:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	6a1a      	ldr	r2, [r3, #32]
 80011a0:	2101      	movs	r1, #1
 80011a2:	697b      	ldr	r3, [r7, #20]
 80011a4:	fa01 f303 	lsl.w	r3, r1, r3
 80011a8:	43db      	mvns	r3, r3
 80011aa:	4619      	mov	r1, r3
 80011ac:	687b      	ldr	r3, [r7, #4]
 80011ae:	681b      	ldr	r3, [r3, #0]
 80011b0:	400a      	ands	r2, r1
 80011b2:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 80011b4:	687b      	ldr	r3, [r7, #4]
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	6a1a      	ldr	r2, [r3, #32]
 80011ba:	2101      	movs	r1, #1
 80011bc:	693b      	ldr	r3, [r7, #16]
 80011be:	fa01 f303 	lsl.w	r3, r1, r3
 80011c2:	43db      	mvns	r3, r3
 80011c4:	4619      	mov	r1, r3
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	681b      	ldr	r3, [r3, #0]
 80011ca:	400a      	ands	r2, r1
 80011cc:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	6a1a      	ldr	r2, [r3, #32]
 80011d4:	2101      	movs	r1, #1
 80011d6:	68fb      	ldr	r3, [r7, #12]
 80011d8:	fa01 f303 	lsl.w	r3, r1, r3
 80011dc:	4619      	mov	r1, r3
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	681b      	ldr	r3, [r3, #0]
 80011e2:	430a      	orrs	r2, r1
 80011e4:	621a      	str	r2, [r3, #32]
		    		break;
 80011e6:	f000 bcbd 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_9:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	681b      	ldr	r3, [r3, #0]
 80011ee:	6a1a      	ldr	r2, [r3, #32]
 80011f0:	2101      	movs	r1, #1
 80011f2:	69bb      	ldr	r3, [r7, #24]
 80011f4:	fa01 f303 	lsl.w	r3, r1, r3
 80011f8:	4619      	mov	r1, r3
 80011fa:	687b      	ldr	r3, [r7, #4]
 80011fc:	681b      	ldr	r3, [r3, #0]
 80011fe:	430a      	orrs	r2, r1
 8001200:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 8001202:	687b      	ldr	r3, [r7, #4]
 8001204:	681b      	ldr	r3, [r3, #0]
 8001206:	6a1a      	ldr	r2, [r3, #32]
 8001208:	2101      	movs	r1, #1
 800120a:	697b      	ldr	r3, [r7, #20]
 800120c:	fa01 f303 	lsl.w	r3, r1, r3
 8001210:	43db      	mvns	r3, r3
 8001212:	4619      	mov	r1, r3
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	400a      	ands	r2, r1
 800121a:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 800121c:	687b      	ldr	r3, [r7, #4]
 800121e:	681b      	ldr	r3, [r3, #0]
 8001220:	6a1a      	ldr	r2, [r3, #32]
 8001222:	2101      	movs	r1, #1
 8001224:	693b      	ldr	r3, [r7, #16]
 8001226:	fa01 f303 	lsl.w	r3, r1, r3
 800122a:	43db      	mvns	r3, r3
 800122c:	4619      	mov	r1, r3
 800122e:	687b      	ldr	r3, [r7, #4]
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	400a      	ands	r2, r1
 8001234:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 8001236:	687b      	ldr	r3, [r7, #4]
 8001238:	681b      	ldr	r3, [r3, #0]
 800123a:	6a1a      	ldr	r2, [r3, #32]
 800123c:	2101      	movs	r1, #1
 800123e:	68fb      	ldr	r3, [r7, #12]
 8001240:	fa01 f303 	lsl.w	r3, r1, r3
 8001244:	4619      	mov	r1, r3
 8001246:	687b      	ldr	r3, [r7, #4]
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	430a      	orrs	r2, r1
 800124c:	621a      	str	r2, [r3, #32]
		    		break;
 800124e:	f000 bc89 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_10:
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMA3);
 8001252:	687b      	ldr	r3, [r7, #4]
 8001254:	681b      	ldr	r3, [r3, #0]
 8001256:	6a1a      	ldr	r2, [r3, #32]
 8001258:	2101      	movs	r1, #1
 800125a:	69bb      	ldr	r3, [r7, #24]
 800125c:	fa01 f303 	lsl.w	r3, r1, r3
 8001260:	43db      	mvns	r3, r3
 8001262:	4619      	mov	r1, r3
 8001264:	687b      	ldr	r3, [r7, #4]
 8001266:	681b      	ldr	r3, [r3, #0]
 8001268:	400a      	ands	r2, r1
 800126a:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 800126c:	687b      	ldr	r3, [r7, #4]
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	6a1a      	ldr	r2, [r3, #32]
 8001272:	2101      	movs	r1, #1
 8001274:	697b      	ldr	r3, [r7, #20]
 8001276:	fa01 f303 	lsl.w	r3, r1, r3
 800127a:	4619      	mov	r1, r3
 800127c:	687b      	ldr	r3, [r7, #4]
 800127e:	681b      	ldr	r3, [r3, #0]
 8001280:	430a      	orrs	r2, r1
 8001282:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	681b      	ldr	r3, [r3, #0]
 8001288:	6a1a      	ldr	r2, [r3, #32]
 800128a:	2101      	movs	r1, #1
 800128c:	693b      	ldr	r3, [r7, #16]
 800128e:	fa01 f303 	lsl.w	r3, r1, r3
 8001292:	43db      	mvns	r3, r3
 8001294:	4619      	mov	r1, r3
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	681b      	ldr	r3, [r3, #0]
 800129a:	400a      	ands	r2, r1
 800129c:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	681b      	ldr	r3, [r3, #0]
 80012a2:	6a1a      	ldr	r2, [r3, #32]
 80012a4:	2101      	movs	r1, #1
 80012a6:	68fb      	ldr	r3, [r7, #12]
 80012a8:	fa01 f303 	lsl.w	r3, r1, r3
 80012ac:	4619      	mov	r1, r3
 80012ae:	687b      	ldr	r3, [r7, #4]
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	430a      	orrs	r2, r1
 80012b4:	621a      	str	r2, [r3, #32]
		    		break;
 80012b6:	f000 bc55 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_11:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	681b      	ldr	r3, [r3, #0]
 80012be:	6a1a      	ldr	r2, [r3, #32]
 80012c0:	2101      	movs	r1, #1
 80012c2:	69bb      	ldr	r3, [r7, #24]
 80012c4:	fa01 f303 	lsl.w	r3, r1, r3
 80012c8:	4619      	mov	r1, r3
 80012ca:	687b      	ldr	r3, [r7, #4]
 80012cc:	681b      	ldr	r3, [r3, #0]
 80012ce:	430a      	orrs	r2, r1
 80012d0:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	681b      	ldr	r3, [r3, #0]
 80012d6:	6a1a      	ldr	r2, [r3, #32]
 80012d8:	2101      	movs	r1, #1
 80012da:	697b      	ldr	r3, [r7, #20]
 80012dc:	fa01 f303 	lsl.w	r3, r1, r3
 80012e0:	4619      	mov	r1, r3
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	681b      	ldr	r3, [r3, #0]
 80012e6:	430a      	orrs	r2, r1
 80012e8:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_HMI3);
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	6a1a      	ldr	r2, [r3, #32]
 80012f0:	2101      	movs	r1, #1
 80012f2:	693b      	ldr	r3, [r7, #16]
 80012f4:	fa01 f303 	lsl.w	r3, r1, r3
 80012f8:	43db      	mvns	r3, r3
 80012fa:	4619      	mov	r1, r3
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	681b      	ldr	r3, [r3, #0]
 8001300:	400a      	ands	r2, r1
 8001302:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	681b      	ldr	r3, [r3, #0]
 8001308:	6a1a      	ldr	r2, [r3, #32]
 800130a:	2101      	movs	r1, #1
 800130c:	68fb      	ldr	r3, [r7, #12]
 800130e:	fa01 f303 	lsl.w	r3, r1, r3
 8001312:	4619      	mov	r1, r3
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	430a      	orrs	r2, r1
 800131a:	621a      	str	r2, [r3, #32]
		    		break;
 800131c:	f000 bc22 	b.w	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_12:
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMA3);
 8001320:	687b      	ldr	r3, [r7, #4]
 8001322:	681b      	ldr	r3, [r3, #0]
 8001324:	6a1a      	ldr	r2, [r3, #32]
 8001326:	2101      	movs	r1, #1
 8001328:	69bb      	ldr	r3, [r7, #24]
 800132a:	fa01 f303 	lsl.w	r3, r1, r3
 800132e:	43db      	mvns	r3, r3
 8001330:	4619      	mov	r1, r3
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	681b      	ldr	r3, [r3, #0]
 8001336:	400a      	ands	r2, r1
 8001338:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 800133a:	687b      	ldr	r3, [r7, #4]
 800133c:	681b      	ldr	r3, [r3, #0]
 800133e:	6a1a      	ldr	r2, [r3, #32]
 8001340:	2101      	movs	r1, #1
 8001342:	697b      	ldr	r3, [r7, #20]
 8001344:	fa01 f303 	lsl.w	r3, r1, r3
 8001348:	43db      	mvns	r3, r3
 800134a:	4619      	mov	r1, r3
 800134c:	687b      	ldr	r3, [r7, #4]
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	400a      	ands	r2, r1
 8001352:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMI3);
 8001354:	687b      	ldr	r3, [r7, #4]
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	6a1a      	ldr	r2, [r3, #32]
 800135a:	2101      	movs	r1, #1
 800135c:	693b      	ldr	r3, [r7, #16]
 800135e:	fa01 f303 	lsl.w	r3, r1, r3
 8001362:	4619      	mov	r1, r3
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	681b      	ldr	r3, [r3, #0]
 8001368:	430a      	orrs	r2, r1
 800136a:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	681b      	ldr	r3, [r3, #0]
 8001370:	6a1a      	ldr	r2, [r3, #32]
 8001372:	2101      	movs	r1, #1
 8001374:	68fb      	ldr	r3, [r7, #12]
 8001376:	fa01 f303 	lsl.w	r3, r1, r3
 800137a:	4619      	mov	r1, r3
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	681b      	ldr	r3, [r3, #0]
 8001380:	430a      	orrs	r2, r1
 8001382:	621a      	str	r2, [r3, #32]
		    		break;
 8001384:	e3ee      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_13:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 8001386:	687b      	ldr	r3, [r7, #4]
 8001388:	681b      	ldr	r3, [r3, #0]
 800138a:	6a1a      	ldr	r2, [r3, #32]
 800138c:	2101      	movs	r1, #1
 800138e:	69bb      	ldr	r3, [r7, #24]
 8001390:	fa01 f303 	lsl.w	r3, r1, r3
 8001394:	4619      	mov	r1, r3
 8001396:	687b      	ldr	r3, [r7, #4]
 8001398:	681b      	ldr	r3, [r3, #0]
 800139a:	430a      	orrs	r2, r1
 800139c:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL &= ~(1 << GPIO_PIN_LMI3);
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	681b      	ldr	r3, [r3, #0]
 80013a2:	6a1a      	ldr	r2, [r3, #32]
 80013a4:	2101      	movs	r1, #1
 80013a6:	697b      	ldr	r3, [r7, #20]
 80013a8:	fa01 f303 	lsl.w	r3, r1, r3
 80013ac:	43db      	mvns	r3, r3
 80013ae:	4619      	mov	r1, r3
 80013b0:	687b      	ldr	r3, [r7, #4]
 80013b2:	681b      	ldr	r3, [r3, #0]
 80013b4:	400a      	ands	r2, r1
 80013b6:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMI3);
 80013b8:	687b      	ldr	r3, [r7, #4]
 80013ba:	681b      	ldr	r3, [r3, #0]
 80013bc:	6a1a      	ldr	r2, [r3, #32]
 80013be:	2101      	movs	r1, #1
 80013c0:	693b      	ldr	r3, [r7, #16]
 80013c2:	fa01 f303 	lsl.w	r3, r1, r3
 80013c6:	4619      	mov	r1, r3
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	681b      	ldr	r3, [r3, #0]
 80013cc:	430a      	orrs	r2, r1
 80013ce:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 80013d0:	687b      	ldr	r3, [r7, #4]
 80013d2:	681b      	ldr	r3, [r3, #0]
 80013d4:	6a1a      	ldr	r2, [r3, #32]
 80013d6:	2101      	movs	r1, #1
 80013d8:	68fb      	ldr	r3, [r7, #12]
 80013da:	fa01 f303 	lsl.w	r3, r1, r3
 80013de:	4619      	mov	r1, r3
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	681b      	ldr	r3, [r3, #0]
 80013e4:	430a      	orrs	r2, r1
 80013e6:	621a      	str	r2, [r3, #32]
		    		break;
 80013e8:	e3bc      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_14:
		    		pGPIOConfig_t->pGPIOx->AFRL &=  (1 << GPIO_PIN_LMA3);
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	681b      	ldr	r3, [r3, #0]
 80013ee:	6a1a      	ldr	r2, [r3, #32]
 80013f0:	2101      	movs	r1, #1
 80013f2:	69bb      	ldr	r3, [r7, #24]
 80013f4:	fa01 f303 	lsl.w	r3, r1, r3
 80013f8:	4619      	mov	r1, r3
 80013fa:	687b      	ldr	r3, [r7, #4]
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	400a      	ands	r2, r1
 8001400:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	681b      	ldr	r3, [r3, #0]
 8001406:	6a1a      	ldr	r2, [r3, #32]
 8001408:	2101      	movs	r1, #1
 800140a:	697b      	ldr	r3, [r7, #20]
 800140c:	fa01 f303 	lsl.w	r3, r1, r3
 8001410:	4619      	mov	r1, r3
 8001412:	687b      	ldr	r3, [r7, #4]
 8001414:	681b      	ldr	r3, [r3, #0]
 8001416:	430a      	orrs	r2, r1
 8001418:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMI3);
 800141a:	687b      	ldr	r3, [r7, #4]
 800141c:	681b      	ldr	r3, [r3, #0]
 800141e:	6a1a      	ldr	r2, [r3, #32]
 8001420:	2101      	movs	r1, #1
 8001422:	693b      	ldr	r3, [r7, #16]
 8001424:	fa01 f303 	lsl.w	r3, r1, r3
 8001428:	4619      	mov	r1, r3
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	681b      	ldr	r3, [r3, #0]
 800142e:	430a      	orrs	r2, r1
 8001430:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	681b      	ldr	r3, [r3, #0]
 8001436:	6a1a      	ldr	r2, [r3, #32]
 8001438:	2101      	movs	r1, #1
 800143a:	68fb      	ldr	r3, [r7, #12]
 800143c:	fa01 f303 	lsl.w	r3, r1, r3
 8001440:	4619      	mov	r1, r3
 8001442:	687b      	ldr	r3, [r7, #4]
 8001444:	681b      	ldr	r3, [r3, #0]
 8001446:	430a      	orrs	r2, r1
 8001448:	621a      	str	r2, [r3, #32]
		    		break;
 800144a:	e38b      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_15:
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMA3);
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	681b      	ldr	r3, [r3, #0]
 8001450:	6a1a      	ldr	r2, [r3, #32]
 8001452:	2101      	movs	r1, #1
 8001454:	69bb      	ldr	r3, [r7, #24]
 8001456:	fa01 f303 	lsl.w	r3, r1, r3
 800145a:	4619      	mov	r1, r3
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	681b      	ldr	r3, [r3, #0]
 8001460:	430a      	orrs	r2, r1
 8001462:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_LMI3);
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	681b      	ldr	r3, [r3, #0]
 8001468:	6a1a      	ldr	r2, [r3, #32]
 800146a:	2101      	movs	r1, #1
 800146c:	697b      	ldr	r3, [r7, #20]
 800146e:	fa01 f303 	lsl.w	r3, r1, r3
 8001472:	4619      	mov	r1, r3
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	681b      	ldr	r3, [r3, #0]
 8001478:	430a      	orrs	r2, r1
 800147a:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMI3);
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	681b      	ldr	r3, [r3, #0]
 8001480:	6a1a      	ldr	r2, [r3, #32]
 8001482:	2101      	movs	r1, #1
 8001484:	693b      	ldr	r3, [r7, #16]
 8001486:	fa01 f303 	lsl.w	r3, r1, r3
 800148a:	4619      	mov	r1, r3
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	681b      	ldr	r3, [r3, #0]
 8001490:	430a      	orrs	r2, r1
 8001492:	621a      	str	r2, [r3, #32]
		    		pGPIOConfig_t->pGPIOx->AFRL |=  (1 << GPIO_PIN_HMA3);
 8001494:	687b      	ldr	r3, [r7, #4]
 8001496:	681b      	ldr	r3, [r3, #0]
 8001498:	6a1a      	ldr	r2, [r3, #32]
 800149a:	2101      	movs	r1, #1
 800149c:	68fb      	ldr	r3, [r7, #12]
 800149e:	fa01 f303 	lsl.w	r3, r1, r3
 80014a2:	4619      	mov	r1, r3
 80014a4:	687b      	ldr	r3, [r7, #4]
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	430a      	orrs	r2, r1
 80014aa:	621a      	str	r2, [r3, #32]
		    		break;
 80014ac:	e35a      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    }
	    }
	    else
	    {
		    switch (pGPIOConfig_t->GPIO_AF)
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	7a5b      	ldrb	r3, [r3, #9]
 80014b2:	2b0f      	cmp	r3, #15
 80014b4:	f200 8355 	bhi.w	8001b62 <__LNH_GPIO_Init+0x10d2>
 80014b8:	a201      	add	r2, pc, #4	@ (adr r2, 80014c0 <__LNH_GPIO_Init+0xa30>)
 80014ba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80014be:	bf00      	nop
 80014c0:	08001501 	.word	0x08001501
 80014c4:	0800156b 	.word	0x0800156b
 80014c8:	080015d3 	.word	0x080015d3
 80014cc:	0800163b 	.word	0x0800163b
 80014d0:	080016a1 	.word	0x080016a1
 80014d4:	08001709 	.word	0x08001709
 80014d8:	0800176f 	.word	0x0800176f
 80014dc:	080017d5 	.word	0x080017d5
 80014e0:	08001839 	.word	0x08001839
 80014e4:	080018a1 	.word	0x080018a1
 80014e8:	08001907 	.word	0x08001907
 80014ec:	0800196d 	.word	0x0800196d
 80014f0:	080019d1 	.word	0x080019d1
 80014f4:	08001a37 	.word	0x08001a37
 80014f8:	08001a9b 	.word	0x08001a9b
 80014fc:	08001afd 	.word	0x08001afd
		    {
		    	case GPIO_AF_0:
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMA3);
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001506:	2101      	movs	r1, #1
 8001508:	69bb      	ldr	r3, [r7, #24]
 800150a:	fa01 f303 	lsl.w	r3, r1, r3
 800150e:	43db      	mvns	r3, r3
 8001510:	4619      	mov	r1, r3
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	681b      	ldr	r3, [r3, #0]
 8001516:	400a      	ands	r2, r1
 8001518:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 800151a:	687b      	ldr	r3, [r7, #4]
 800151c:	681b      	ldr	r3, [r3, #0]
 800151e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001520:	2101      	movs	r1, #1
 8001522:	697b      	ldr	r3, [r7, #20]
 8001524:	fa01 f303 	lsl.w	r3, r1, r3
 8001528:	43db      	mvns	r3, r3
 800152a:	4619      	mov	r1, r3
 800152c:	687b      	ldr	r3, [r7, #4]
 800152e:	681b      	ldr	r3, [r3, #0]
 8001530:	400a      	ands	r2, r1
 8001532:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 8001534:	687b      	ldr	r3, [r7, #4]
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800153a:	2101      	movs	r1, #1
 800153c:	693b      	ldr	r3, [r7, #16]
 800153e:	fa01 f303 	lsl.w	r3, r1, r3
 8001542:	43db      	mvns	r3, r3
 8001544:	4619      	mov	r1, r3
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	681b      	ldr	r3, [r3, #0]
 800154a:	400a      	ands	r2, r1
 800154c:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	681b      	ldr	r3, [r3, #0]
 8001552:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001554:	2101      	movs	r1, #1
 8001556:	68fb      	ldr	r3, [r7, #12]
 8001558:	fa01 f303 	lsl.w	r3, r1, r3
 800155c:	43db      	mvns	r3, r3
 800155e:	4619      	mov	r1, r3
 8001560:	687b      	ldr	r3, [r7, #4]
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	400a      	ands	r2, r1
 8001566:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001568:	e2fc      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_1:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001570:	2101      	movs	r1, #1
 8001572:	69bb      	ldr	r3, [r7, #24]
 8001574:	fa01 f303 	lsl.w	r3, r1, r3
 8001578:	4619      	mov	r1, r3
 800157a:	687b      	ldr	r3, [r7, #4]
 800157c:	681b      	ldr	r3, [r3, #0]
 800157e:	430a      	orrs	r2, r1
 8001580:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 8001582:	687b      	ldr	r3, [r7, #4]
 8001584:	681b      	ldr	r3, [r3, #0]
 8001586:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001588:	2101      	movs	r1, #1
 800158a:	697b      	ldr	r3, [r7, #20]
 800158c:	fa01 f303 	lsl.w	r3, r1, r3
 8001590:	43db      	mvns	r3, r3
 8001592:	4619      	mov	r1, r3
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	400a      	ands	r2, r1
 800159a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80015a2:	2101      	movs	r1, #1
 80015a4:	693b      	ldr	r3, [r7, #16]
 80015a6:	fa01 f303 	lsl.w	r3, r1, r3
 80015aa:	43db      	mvns	r3, r3
 80015ac:	4619      	mov	r1, r3
 80015ae:	687b      	ldr	r3, [r7, #4]
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	400a      	ands	r2, r1
 80015b4:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 80015b6:	687b      	ldr	r3, [r7, #4]
 80015b8:	681b      	ldr	r3, [r3, #0]
 80015ba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80015bc:	2101      	movs	r1, #1
 80015be:	68fb      	ldr	r3, [r7, #12]
 80015c0:	fa01 f303 	lsl.w	r3, r1, r3
 80015c4:	43db      	mvns	r3, r3
 80015c6:	4619      	mov	r1, r3
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	400a      	ands	r2, r1
 80015ce:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 80015d0:	e2c8      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_2:
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMA3);
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80015d8:	2101      	movs	r1, #1
 80015da:	69bb      	ldr	r3, [r7, #24]
 80015dc:	fa01 f303 	lsl.w	r3, r1, r3
 80015e0:	43db      	mvns	r3, r3
 80015e2:	4619      	mov	r1, r3
 80015e4:	687b      	ldr	r3, [r7, #4]
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	400a      	ands	r2, r1
 80015ea:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80015f2:	2101      	movs	r1, #1
 80015f4:	697b      	ldr	r3, [r7, #20]
 80015f6:	fa01 f303 	lsl.w	r3, r1, r3
 80015fa:	4619      	mov	r1, r3
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	430a      	orrs	r2, r1
 8001602:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	681b      	ldr	r3, [r3, #0]
 8001608:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800160a:	2101      	movs	r1, #1
 800160c:	693b      	ldr	r3, [r7, #16]
 800160e:	fa01 f303 	lsl.w	r3, r1, r3
 8001612:	43db      	mvns	r3, r3
 8001614:	4619      	mov	r1, r3
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	400a      	ands	r2, r1
 800161c:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	681b      	ldr	r3, [r3, #0]
 8001622:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001624:	2101      	movs	r1, #1
 8001626:	68fb      	ldr	r3, [r7, #12]
 8001628:	fa01 f303 	lsl.w	r3, r1, r3
 800162c:	43db      	mvns	r3, r3
 800162e:	4619      	mov	r1, r3
 8001630:	687b      	ldr	r3, [r7, #4]
 8001632:	681b      	ldr	r3, [r3, #0]
 8001634:	400a      	ands	r2, r1
 8001636:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001638:	e294      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_3:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001640:	2101      	movs	r1, #1
 8001642:	69bb      	ldr	r3, [r7, #24]
 8001644:	fa01 f303 	lsl.w	r3, r1, r3
 8001648:	4619      	mov	r1, r3
 800164a:	687b      	ldr	r3, [r7, #4]
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	430a      	orrs	r2, r1
 8001650:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001658:	2101      	movs	r1, #1
 800165a:	697b      	ldr	r3, [r7, #20]
 800165c:	fa01 f303 	lsl.w	r3, r1, r3
 8001660:	4619      	mov	r1, r3
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	681b      	ldr	r3, [r3, #0]
 8001666:	430a      	orrs	r2, r1
 8001668:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001670:	2101      	movs	r1, #1
 8001672:	693b      	ldr	r3, [r7, #16]
 8001674:	fa01 f303 	lsl.w	r3, r1, r3
 8001678:	43db      	mvns	r3, r3
 800167a:	4619      	mov	r1, r3
 800167c:	687b      	ldr	r3, [r7, #4]
 800167e:	681b      	ldr	r3, [r3, #0]
 8001680:	400a      	ands	r2, r1
 8001682:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 8001684:	687b      	ldr	r3, [r7, #4]
 8001686:	681b      	ldr	r3, [r3, #0]
 8001688:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800168a:	2101      	movs	r1, #1
 800168c:	68fb      	ldr	r3, [r7, #12]
 800168e:	fa01 f303 	lsl.w	r3, r1, r3
 8001692:	43db      	mvns	r3, r3
 8001694:	4619      	mov	r1, r3
 8001696:	687b      	ldr	r3, [r7, #4]
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	400a      	ands	r2, r1
 800169c:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 800169e:	e261      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_4:
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMA3);
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80016a6:	2101      	movs	r1, #1
 80016a8:	69bb      	ldr	r3, [r7, #24]
 80016aa:	fa01 f303 	lsl.w	r3, r1, r3
 80016ae:	43db      	mvns	r3, r3
 80016b0:	4619      	mov	r1, r3
 80016b2:	687b      	ldr	r3, [r7, #4]
 80016b4:	681b      	ldr	r3, [r3, #0]
 80016b6:	400a      	ands	r2, r1
 80016b8:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80016c0:	2101      	movs	r1, #1
 80016c2:	697b      	ldr	r3, [r7, #20]
 80016c4:	fa01 f303 	lsl.w	r3, r1, r3
 80016c8:	43db      	mvns	r3, r3
 80016ca:	4619      	mov	r1, r3
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	400a      	ands	r2, r1
 80016d2:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &=  (1 << GPIO_PIN_HMI3);
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80016da:	2101      	movs	r1, #1
 80016dc:	693b      	ldr	r3, [r7, #16]
 80016de:	fa01 f303 	lsl.w	r3, r1, r3
 80016e2:	4619      	mov	r1, r3
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	681b      	ldr	r3, [r3, #0]
 80016e8:	400a      	ands	r2, r1
 80016ea:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 80016ec:	687b      	ldr	r3, [r7, #4]
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80016f2:	2101      	movs	r1, #1
 80016f4:	68fb      	ldr	r3, [r7, #12]
 80016f6:	fa01 f303 	lsl.w	r3, r1, r3
 80016fa:	43db      	mvns	r3, r3
 80016fc:	4619      	mov	r1, r3
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	681b      	ldr	r3, [r3, #0]
 8001702:	400a      	ands	r2, r1
 8001704:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001706:	e22d      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_5:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 8001708:	687b      	ldr	r3, [r7, #4]
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800170e:	2101      	movs	r1, #1
 8001710:	69bb      	ldr	r3, [r7, #24]
 8001712:	fa01 f303 	lsl.w	r3, r1, r3
 8001716:	4619      	mov	r1, r3
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	430a      	orrs	r2, r1
 800171e:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001726:	2101      	movs	r1, #1
 8001728:	697b      	ldr	r3, [r7, #20]
 800172a:	fa01 f303 	lsl.w	r3, r1, r3
 800172e:	43db      	mvns	r3, r3
 8001730:	4619      	mov	r1, r3
 8001732:	687b      	ldr	r3, [r7, #4]
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	400a      	ands	r2, r1
 8001738:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMI3);
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001740:	2101      	movs	r1, #1
 8001742:	693b      	ldr	r3, [r7, #16]
 8001744:	fa01 f303 	lsl.w	r3, r1, r3
 8001748:	4619      	mov	r1, r3
 800174a:	687b      	ldr	r3, [r7, #4]
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	430a      	orrs	r2, r1
 8001750:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 8001752:	687b      	ldr	r3, [r7, #4]
 8001754:	681b      	ldr	r3, [r3, #0]
 8001756:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001758:	2101      	movs	r1, #1
 800175a:	68fb      	ldr	r3, [r7, #12]
 800175c:	fa01 f303 	lsl.w	r3, r1, r3
 8001760:	43db      	mvns	r3, r3
 8001762:	4619      	mov	r1, r3
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	681b      	ldr	r3, [r3, #0]
 8001768:	400a      	ands	r2, r1
 800176a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 800176c:	e1fa      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_6:
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMA3);
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	681b      	ldr	r3, [r3, #0]
 8001772:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001774:	2101      	movs	r1, #1
 8001776:	69bb      	ldr	r3, [r7, #24]
 8001778:	fa01 f303 	lsl.w	r3, r1, r3
 800177c:	43db      	mvns	r3, r3
 800177e:	4619      	mov	r1, r3
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	681b      	ldr	r3, [r3, #0]
 8001784:	400a      	ands	r2, r1
 8001786:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 8001788:	687b      	ldr	r3, [r7, #4]
 800178a:	681b      	ldr	r3, [r3, #0]
 800178c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800178e:	2101      	movs	r1, #1
 8001790:	697b      	ldr	r3, [r7, #20]
 8001792:	fa01 f303 	lsl.w	r3, r1, r3
 8001796:	4619      	mov	r1, r3
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	430a      	orrs	r2, r1
 800179e:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMI3);
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80017a6:	2101      	movs	r1, #1
 80017a8:	693b      	ldr	r3, [r7, #16]
 80017aa:	fa01 f303 	lsl.w	r3, r1, r3
 80017ae:	4619      	mov	r1, r3
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	430a      	orrs	r2, r1
 80017b6:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80017be:	2101      	movs	r1, #1
 80017c0:	68fb      	ldr	r3, [r7, #12]
 80017c2:	fa01 f303 	lsl.w	r3, r1, r3
 80017c6:	43db      	mvns	r3, r3
 80017c8:	4619      	mov	r1, r3
 80017ca:	687b      	ldr	r3, [r7, #4]
 80017cc:	681b      	ldr	r3, [r3, #0]
 80017ce:	400a      	ands	r2, r1
 80017d0:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 80017d2:	e1c7      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_7:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	681b      	ldr	r3, [r3, #0]
 80017d8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80017da:	2101      	movs	r1, #1
 80017dc:	69bb      	ldr	r3, [r7, #24]
 80017de:	fa01 f303 	lsl.w	r3, r1, r3
 80017e2:	4619      	mov	r1, r3
 80017e4:	687b      	ldr	r3, [r7, #4]
 80017e6:	681b      	ldr	r3, [r3, #0]
 80017e8:	430a      	orrs	r2, r1
 80017ea:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 80017ec:	687b      	ldr	r3, [r7, #4]
 80017ee:	681b      	ldr	r3, [r3, #0]
 80017f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80017f2:	2101      	movs	r1, #1
 80017f4:	697b      	ldr	r3, [r7, #20]
 80017f6:	fa01 f303 	lsl.w	r3, r1, r3
 80017fa:	4619      	mov	r1, r3
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	430a      	orrs	r2, r1
 8001802:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMI3);
 8001804:	687b      	ldr	r3, [r7, #4]
 8001806:	681b      	ldr	r3, [r3, #0]
 8001808:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800180a:	2101      	movs	r1, #1
 800180c:	693b      	ldr	r3, [r7, #16]
 800180e:	fa01 f303 	lsl.w	r3, r1, r3
 8001812:	4619      	mov	r1, r3
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	681b      	ldr	r3, [r3, #0]
 8001818:	430a      	orrs	r2, r1
 800181a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMA3);
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001822:	2101      	movs	r1, #1
 8001824:	68fb      	ldr	r3, [r7, #12]
 8001826:	fa01 f303 	lsl.w	r3, r1, r3
 800182a:	43db      	mvns	r3, r3
 800182c:	4619      	mov	r1, r3
 800182e:	687b      	ldr	r3, [r7, #4]
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	400a      	ands	r2, r1
 8001834:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001836:	e195      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_8:
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMA3);
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	681b      	ldr	r3, [r3, #0]
 800183c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800183e:	2101      	movs	r1, #1
 8001840:	69bb      	ldr	r3, [r7, #24]
 8001842:	fa01 f303 	lsl.w	r3, r1, r3
 8001846:	43db      	mvns	r3, r3
 8001848:	4619      	mov	r1, r3
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	681b      	ldr	r3, [r3, #0]
 800184e:	400a      	ands	r2, r1
 8001850:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	681b      	ldr	r3, [r3, #0]
 8001856:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001858:	2101      	movs	r1, #1
 800185a:	697b      	ldr	r3, [r7, #20]
 800185c:	fa01 f303 	lsl.w	r3, r1, r3
 8001860:	43db      	mvns	r3, r3
 8001862:	4619      	mov	r1, r3
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	681b      	ldr	r3, [r3, #0]
 8001868:	400a      	ands	r2, r1
 800186a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001872:	2101      	movs	r1, #1
 8001874:	693b      	ldr	r3, [r7, #16]
 8001876:	fa01 f303 	lsl.w	r3, r1, r3
 800187a:	43db      	mvns	r3, r3
 800187c:	4619      	mov	r1, r3
 800187e:	687b      	ldr	r3, [r7, #4]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	400a      	ands	r2, r1
 8001884:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	681b      	ldr	r3, [r3, #0]
 800188a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800188c:	2101      	movs	r1, #1
 800188e:	68fb      	ldr	r3, [r7, #12]
 8001890:	fa01 f303 	lsl.w	r3, r1, r3
 8001894:	4619      	mov	r1, r3
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	430a      	orrs	r2, r1
 800189c:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 800189e:	e161      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_9:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	681b      	ldr	r3, [r3, #0]
 80018a4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80018a6:	2101      	movs	r1, #1
 80018a8:	69bb      	ldr	r3, [r7, #24]
 80018aa:	fa01 f303 	lsl.w	r3, r1, r3
 80018ae:	4619      	mov	r1, r3
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	681b      	ldr	r3, [r3, #0]
 80018b4:	430a      	orrs	r2, r1
 80018b6:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80018be:	2101      	movs	r1, #1
 80018c0:	697b      	ldr	r3, [r7, #20]
 80018c2:	fa01 f303 	lsl.w	r3, r1, r3
 80018c6:	43db      	mvns	r3, r3
 80018c8:	4619      	mov	r1, r3
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	681b      	ldr	r3, [r3, #0]
 80018ce:	400a      	ands	r2, r1
 80018d0:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 80018d2:	687b      	ldr	r3, [r7, #4]
 80018d4:	681b      	ldr	r3, [r3, #0]
 80018d6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80018d8:	2101      	movs	r1, #1
 80018da:	693b      	ldr	r3, [r7, #16]
 80018dc:	fa01 f303 	lsl.w	r3, r1, r3
 80018e0:	43db      	mvns	r3, r3
 80018e2:	4619      	mov	r1, r3
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	400a      	ands	r2, r1
 80018ea:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80018f2:	2101      	movs	r1, #1
 80018f4:	68fb      	ldr	r3, [r7, #12]
 80018f6:	fa01 f303 	lsl.w	r3, r1, r3
 80018fa:	4619      	mov	r1, r3
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	430a      	orrs	r2, r1
 8001902:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001904:	e12e      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_10:
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMA3);
 8001906:	687b      	ldr	r3, [r7, #4]
 8001908:	681b      	ldr	r3, [r3, #0]
 800190a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800190c:	2101      	movs	r1, #1
 800190e:	69bb      	ldr	r3, [r7, #24]
 8001910:	fa01 f303 	lsl.w	r3, r1, r3
 8001914:	43db      	mvns	r3, r3
 8001916:	4619      	mov	r1, r3
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	400a      	ands	r2, r1
 800191e:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001926:	2101      	movs	r1, #1
 8001928:	697b      	ldr	r3, [r7, #20]
 800192a:	fa01 f303 	lsl.w	r3, r1, r3
 800192e:	4619      	mov	r1, r3
 8001930:	687b      	ldr	r3, [r7, #4]
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	430a      	orrs	r2, r1
 8001936:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	681b      	ldr	r3, [r3, #0]
 800193c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800193e:	2101      	movs	r1, #1
 8001940:	693b      	ldr	r3, [r7, #16]
 8001942:	fa01 f303 	lsl.w	r3, r1, r3
 8001946:	43db      	mvns	r3, r3
 8001948:	4619      	mov	r1, r3
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	681b      	ldr	r3, [r3, #0]
 800194e:	400a      	ands	r2, r1
 8001950:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	681b      	ldr	r3, [r3, #0]
 8001956:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001958:	2101      	movs	r1, #1
 800195a:	68fb      	ldr	r3, [r7, #12]
 800195c:	fa01 f303 	lsl.w	r3, r1, r3
 8001960:	4619      	mov	r1, r3
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	681b      	ldr	r3, [r3, #0]
 8001966:	430a      	orrs	r2, r1
 8001968:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 800196a:	e0fb      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_11:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	681b      	ldr	r3, [r3, #0]
 8001970:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001972:	2101      	movs	r1, #1
 8001974:	69bb      	ldr	r3, [r7, #24]
 8001976:	fa01 f303 	lsl.w	r3, r1, r3
 800197a:	4619      	mov	r1, r3
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	681b      	ldr	r3, [r3, #0]
 8001980:	430a      	orrs	r2, r1
 8001982:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800198a:	2101      	movs	r1, #1
 800198c:	697b      	ldr	r3, [r7, #20]
 800198e:	fa01 f303 	lsl.w	r3, r1, r3
 8001992:	4619      	mov	r1, r3
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	681b      	ldr	r3, [r3, #0]
 8001998:	430a      	orrs	r2, r1
 800199a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_HMI3);
 800199c:	687b      	ldr	r3, [r7, #4]
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80019a2:	2101      	movs	r1, #1
 80019a4:	693b      	ldr	r3, [r7, #16]
 80019a6:	fa01 f303 	lsl.w	r3, r1, r3
 80019aa:	43db      	mvns	r3, r3
 80019ac:	4619      	mov	r1, r3
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	681b      	ldr	r3, [r3, #0]
 80019b2:	400a      	ands	r2, r1
 80019b4:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 80019b6:	687b      	ldr	r3, [r7, #4]
 80019b8:	681b      	ldr	r3, [r3, #0]
 80019ba:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80019bc:	2101      	movs	r1, #1
 80019be:	68fb      	ldr	r3, [r7, #12]
 80019c0:	fa01 f303 	lsl.w	r3, r1, r3
 80019c4:	4619      	mov	r1, r3
 80019c6:	687b      	ldr	r3, [r7, #4]
 80019c8:	681b      	ldr	r3, [r3, #0]
 80019ca:	430a      	orrs	r2, r1
 80019cc:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 80019ce:	e0c9      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_12:
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMA3);
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80019d6:	2101      	movs	r1, #1
 80019d8:	69bb      	ldr	r3, [r7, #24]
 80019da:	fa01 f303 	lsl.w	r3, r1, r3
 80019de:	43db      	mvns	r3, r3
 80019e0:	4619      	mov	r1, r3
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	681b      	ldr	r3, [r3, #0]
 80019e6:	400a      	ands	r2, r1
 80019e8:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	681b      	ldr	r3, [r3, #0]
 80019ee:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80019f0:	2101      	movs	r1, #1
 80019f2:	697b      	ldr	r3, [r7, #20]
 80019f4:	fa01 f303 	lsl.w	r3, r1, r3
 80019f8:	43db      	mvns	r3, r3
 80019fa:	4619      	mov	r1, r3
 80019fc:	687b      	ldr	r3, [r7, #4]
 80019fe:	681b      	ldr	r3, [r3, #0]
 8001a00:	400a      	ands	r2, r1
 8001a02:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMI3);
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	681b      	ldr	r3, [r3, #0]
 8001a08:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001a0a:	2101      	movs	r1, #1
 8001a0c:	693b      	ldr	r3, [r7, #16]
 8001a0e:	fa01 f303 	lsl.w	r3, r1, r3
 8001a12:	4619      	mov	r1, r3
 8001a14:	687b      	ldr	r3, [r7, #4]
 8001a16:	681b      	ldr	r3, [r3, #0]
 8001a18:	430a      	orrs	r2, r1
 8001a1a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	681b      	ldr	r3, [r3, #0]
 8001a20:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001a22:	2101      	movs	r1, #1
 8001a24:	68fb      	ldr	r3, [r7, #12]
 8001a26:	fa01 f303 	lsl.w	r3, r1, r3
 8001a2a:	4619      	mov	r1, r3
 8001a2c:	687b      	ldr	r3, [r7, #4]
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	430a      	orrs	r2, r1
 8001a32:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001a34:	e096      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_13:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 8001a36:	687b      	ldr	r3, [r7, #4]
 8001a38:	681b      	ldr	r3, [r3, #0]
 8001a3a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001a3c:	2101      	movs	r1, #1
 8001a3e:	69bb      	ldr	r3, [r7, #24]
 8001a40:	fa01 f303 	lsl.w	r3, r1, r3
 8001a44:	4619      	mov	r1, r3
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	430a      	orrs	r2, r1
 8001a4c:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH &= ~(1 << GPIO_PIN_LMI3);
 8001a4e:	687b      	ldr	r3, [r7, #4]
 8001a50:	681b      	ldr	r3, [r3, #0]
 8001a52:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001a54:	2101      	movs	r1, #1
 8001a56:	697b      	ldr	r3, [r7, #20]
 8001a58:	fa01 f303 	lsl.w	r3, r1, r3
 8001a5c:	43db      	mvns	r3, r3
 8001a5e:	4619      	mov	r1, r3
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	400a      	ands	r2, r1
 8001a66:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMI3);
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001a6e:	2101      	movs	r1, #1
 8001a70:	693b      	ldr	r3, [r7, #16]
 8001a72:	fa01 f303 	lsl.w	r3, r1, r3
 8001a76:	4619      	mov	r1, r3
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	681b      	ldr	r3, [r3, #0]
 8001a7c:	430a      	orrs	r2, r1
 8001a7e:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001a86:	2101      	movs	r1, #1
 8001a88:	68fb      	ldr	r3, [r7, #12]
 8001a8a:	fa01 f303 	lsl.w	r3, r1, r3
 8001a8e:	4619      	mov	r1, r3
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	681b      	ldr	r3, [r3, #0]
 8001a94:	430a      	orrs	r2, r1
 8001a96:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001a98:	e064      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_14:
		    		pGPIOConfig_t->pGPIOx->AFRH &=  (1 << GPIO_PIN_LMA3);
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001aa0:	2101      	movs	r1, #1
 8001aa2:	69bb      	ldr	r3, [r7, #24]
 8001aa4:	fa01 f303 	lsl.w	r3, r1, r3
 8001aa8:	4619      	mov	r1, r3
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	400a      	ands	r2, r1
 8001ab0:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 8001ab2:	687b      	ldr	r3, [r7, #4]
 8001ab4:	681b      	ldr	r3, [r3, #0]
 8001ab6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001ab8:	2101      	movs	r1, #1
 8001aba:	697b      	ldr	r3, [r7, #20]
 8001abc:	fa01 f303 	lsl.w	r3, r1, r3
 8001ac0:	4619      	mov	r1, r3
 8001ac2:	687b      	ldr	r3, [r7, #4]
 8001ac4:	681b      	ldr	r3, [r3, #0]
 8001ac6:	430a      	orrs	r2, r1
 8001ac8:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMI3);
 8001aca:	687b      	ldr	r3, [r7, #4]
 8001acc:	681b      	ldr	r3, [r3, #0]
 8001ace:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001ad0:	2101      	movs	r1, #1
 8001ad2:	693b      	ldr	r3, [r7, #16]
 8001ad4:	fa01 f303 	lsl.w	r3, r1, r3
 8001ad8:	4619      	mov	r1, r3
 8001ada:	687b      	ldr	r3, [r7, #4]
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	430a      	orrs	r2, r1
 8001ae0:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	681b      	ldr	r3, [r3, #0]
 8001ae6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001ae8:	2101      	movs	r1, #1
 8001aea:	68fb      	ldr	r3, [r7, #12]
 8001aec:	fa01 f303 	lsl.w	r3, r1, r3
 8001af0:	4619      	mov	r1, r3
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	681b      	ldr	r3, [r3, #0]
 8001af6:	430a      	orrs	r2, r1
 8001af8:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001afa:	e033      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	case GPIO_AF_15:
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMA3);
 8001afc:	687b      	ldr	r3, [r7, #4]
 8001afe:	681b      	ldr	r3, [r3, #0]
 8001b00:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001b02:	2101      	movs	r1, #1
 8001b04:	69bb      	ldr	r3, [r7, #24]
 8001b06:	fa01 f303 	lsl.w	r3, r1, r3
 8001b0a:	4619      	mov	r1, r3
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	430a      	orrs	r2, r1
 8001b12:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_LMI3);
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001b1a:	2101      	movs	r1, #1
 8001b1c:	697b      	ldr	r3, [r7, #20]
 8001b1e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b22:	4619      	mov	r1, r3
 8001b24:	687b      	ldr	r3, [r7, #4]
 8001b26:	681b      	ldr	r3, [r3, #0]
 8001b28:	430a      	orrs	r2, r1
 8001b2a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMI3);
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001b32:	2101      	movs	r1, #1
 8001b34:	693b      	ldr	r3, [r7, #16]
 8001b36:	fa01 f303 	lsl.w	r3, r1, r3
 8001b3a:	4619      	mov	r1, r3
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	430a      	orrs	r2, r1
 8001b42:	625a      	str	r2, [r3, #36]	@ 0x24
		    		pGPIOConfig_t->pGPIOx->AFRH |=  (1 << GPIO_PIN_HMA3);
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	681b      	ldr	r3, [r3, #0]
 8001b48:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001b4a:	2101      	movs	r1, #1
 8001b4c:	68fb      	ldr	r3, [r7, #12]
 8001b4e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b52:	4619      	mov	r1, r3
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	430a      	orrs	r2, r1
 8001b5a:	625a      	str	r2, [r3, #36]	@ 0x24
		    		break;
 8001b5c:	e002      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>
		    		break;
 8001b5e:	bf00      	nop
 8001b60:	e000      	b.n	8001b64 <__LNH_GPIO_Init+0x10d4>

		    	default:
		    		// Xử lí trường hợp không hợp lệ (nếu cần)
		    		break;
 8001b62:	bf00      	nop

		    }
	    }
	    if(pGPIOConfig_t->GPIO_MODE <=3)
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	795b      	ldrb	r3, [r3, #5]
 8001b68:	2b03      	cmp	r3, #3
 8001b6a:	d81f      	bhi.n	8001bac <__LNH_GPIO_Init+0x111c>
	    {
	    	uint8_t temp;
	    	temp = (pGPIOConfig_t->GPIO_MODE) << (2*pGPIOConfig_t->GPIO_PIN);
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	795b      	ldrb	r3, [r3, #5]
 8001b70:	461a      	mov	r2, r3
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	791b      	ldrb	r3, [r3, #4]
 8001b76:	005b      	lsls	r3, r3, #1
 8001b78:	fa02 f303 	lsl.w	r3, r2, r3
 8001b7c:	723b      	strb	r3, [r7, #8]
	    	pGPIOConfig_t->pGPIOx->MODER &= ~(0x3 << (pGPIOConfig_t->GPIO_PIN));
 8001b7e:	687b      	ldr	r3, [r7, #4]
 8001b80:	681b      	ldr	r3, [r3, #0]
 8001b82:	681a      	ldr	r2, [r3, #0]
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	791b      	ldrb	r3, [r3, #4]
 8001b88:	4619      	mov	r1, r3
 8001b8a:	2303      	movs	r3, #3
 8001b8c:	408b      	lsls	r3, r1
 8001b8e:	43db      	mvns	r3, r3
 8001b90:	4619      	mov	r1, r3
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	400a      	ands	r2, r1
 8001b98:	601a      	str	r2, [r3, #0]
	    	pGPIOConfig_t->pGPIOx->MODER |= temp;
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	681b      	ldr	r3, [r3, #0]
 8001b9e:	6819      	ldr	r1, [r3, #0]
 8001ba0:	7a3a      	ldrb	r2, [r7, #8]
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	430a      	orrs	r2, r1
 8001ba8:	601a      	str	r2, [r3, #0]
			else
			{
				pGPIOConfig_t->pEXTI->IMR  &=  ~(1 << GPIO_PIN_LH1);
			}
	    }
}
 8001baa:	e0da      	b.n	8001d62 <__LNH_GPIO_Init+0x12d2>
			switch(pGPIOConfig_t->EXTI_TRIGGER)
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	7d5b      	ldrb	r3, [r3, #21]
 8001bb0:	2b03      	cmp	r3, #3
 8001bb2:	d03a      	beq.n	8001c2a <__LNH_GPIO_Init+0x119a>
 8001bb4:	2b03      	cmp	r3, #3
 8001bb6:	dc51      	bgt.n	8001c5c <__LNH_GPIO_Init+0x11cc>
 8001bb8:	2b01      	cmp	r3, #1
 8001bba:	d002      	beq.n	8001bc2 <__LNH_GPIO_Init+0x1132>
 8001bbc:	2b02      	cmp	r3, #2
 8001bbe:	d01a      	beq.n	8001bf6 <__LNH_GPIO_Init+0x1166>
						break;
 8001bc0:	e04c      	b.n	8001c5c <__LNH_GPIO_Init+0x11cc>
						pGPIOConfig_t->pEXTI->FTSR |=	(1 << GPIO_PIN_LH1);
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	68db      	ldr	r3, [r3, #12]
 8001bc6:	68da      	ldr	r2, [r3, #12]
 8001bc8:	2101      	movs	r1, #1
 8001bca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001bcc:	fa01 f303 	lsl.w	r3, r1, r3
 8001bd0:	4619      	mov	r1, r3
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	68db      	ldr	r3, [r3, #12]
 8001bd6:	430a      	orrs	r2, r1
 8001bd8:	60da      	str	r2, [r3, #12]
						pGPIOConfig_t->pEXTI->RTSR &=  ~(1 << GPIO_PIN_LH1);
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	68db      	ldr	r3, [r3, #12]
 8001bde:	689a      	ldr	r2, [r3, #8]
 8001be0:	2101      	movs	r1, #1
 8001be2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001be4:	fa01 f303 	lsl.w	r3, r1, r3
 8001be8:	43db      	mvns	r3, r3
 8001bea:	4619      	mov	r1, r3
 8001bec:	687b      	ldr	r3, [r7, #4]
 8001bee:	68db      	ldr	r3, [r3, #12]
 8001bf0:	400a      	ands	r2, r1
 8001bf2:	609a      	str	r2, [r3, #8]
						break;
 8001bf4:	e033      	b.n	8001c5e <__LNH_GPIO_Init+0x11ce>
						pGPIOConfig_t->pEXTI->RTSR |=	(1 << GPIO_PIN_LH1);
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	68db      	ldr	r3, [r3, #12]
 8001bfa:	689a      	ldr	r2, [r3, #8]
 8001bfc:	2101      	movs	r1, #1
 8001bfe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c00:	fa01 f303 	lsl.w	r3, r1, r3
 8001c04:	4619      	mov	r1, r3
 8001c06:	687b      	ldr	r3, [r7, #4]
 8001c08:	68db      	ldr	r3, [r3, #12]
 8001c0a:	430a      	orrs	r2, r1
 8001c0c:	609a      	str	r2, [r3, #8]
						pGPIOConfig_t->pEXTI->FTSR &=  ~(1 << GPIO_PIN_LH1);
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	68db      	ldr	r3, [r3, #12]
 8001c12:	68da      	ldr	r2, [r3, #12]
 8001c14:	2101      	movs	r1, #1
 8001c16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c18:	fa01 f303 	lsl.w	r3, r1, r3
 8001c1c:	43db      	mvns	r3, r3
 8001c1e:	4619      	mov	r1, r3
 8001c20:	687b      	ldr	r3, [r7, #4]
 8001c22:	68db      	ldr	r3, [r3, #12]
 8001c24:	400a      	ands	r2, r1
 8001c26:	60da      	str	r2, [r3, #12]
						break;
 8001c28:	e019      	b.n	8001c5e <__LNH_GPIO_Init+0x11ce>
						pGPIOConfig_t->pEXTI->RTSR |=	(1 << GPIO_PIN_LH1);
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	68db      	ldr	r3, [r3, #12]
 8001c2e:	689a      	ldr	r2, [r3, #8]
 8001c30:	2101      	movs	r1, #1
 8001c32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c34:	fa01 f303 	lsl.w	r3, r1, r3
 8001c38:	4619      	mov	r1, r3
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	68db      	ldr	r3, [r3, #12]
 8001c3e:	430a      	orrs	r2, r1
 8001c40:	609a      	str	r2, [r3, #8]
						pGPIOConfig_t->pEXTI->FTSR |=   (1 << GPIO_PIN_LH1);
 8001c42:	687b      	ldr	r3, [r7, #4]
 8001c44:	68db      	ldr	r3, [r3, #12]
 8001c46:	68da      	ldr	r2, [r3, #12]
 8001c48:	2101      	movs	r1, #1
 8001c4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001c4c:	fa01 f303 	lsl.w	r3, r1, r3
 8001c50:	4619      	mov	r1, r3
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	68db      	ldr	r3, [r3, #12]
 8001c56:	430a      	orrs	r2, r1
 8001c58:	60da      	str	r2, [r3, #12]
						break;
 8001c5a:	e000      	b.n	8001c5e <__LNH_GPIO_Init+0x11ce>
						break;
 8001c5c:	bf00      	nop
			uint8_t temp1 = (pGPIOConfig_t->GPIO_PIN)/4;
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	791b      	ldrb	r3, [r3, #4]
 8001c62:	089b      	lsrs	r3, r3, #2
 8001c64:	72fb      	strb	r3, [r7, #11]
			uint8_t temp2 = (pGPIOConfig_t->GPIO_PIN)%4;
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	791b      	ldrb	r3, [r3, #4]
 8001c6a:	f003 0303 	and.w	r3, r3, #3
 8001c6e:	72bb      	strb	r3, [r7, #10]
			uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOConfig_t->pGPIOx);
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	681b      	ldr	r3, [r3, #0]
 8001c74:	4a3e      	ldr	r2, [pc, #248]	@ (8001d70 <__LNH_GPIO_Init+0x12e0>)
 8001c76:	4293      	cmp	r3, r2
 8001c78:	d040      	beq.n	8001cfc <__LNH_GPIO_Init+0x126c>
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	4a3d      	ldr	r2, [pc, #244]	@ (8001d74 <__LNH_GPIO_Init+0x12e4>)
 8001c80:	4293      	cmp	r3, r2
 8001c82:	d039      	beq.n	8001cf8 <__LNH_GPIO_Init+0x1268>
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	4a3b      	ldr	r2, [pc, #236]	@ (8001d78 <__LNH_GPIO_Init+0x12e8>)
 8001c8a:	4293      	cmp	r3, r2
 8001c8c:	d032      	beq.n	8001cf4 <__LNH_GPIO_Init+0x1264>
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	681b      	ldr	r3, [r3, #0]
 8001c92:	4a3a      	ldr	r2, [pc, #232]	@ (8001d7c <__LNH_GPIO_Init+0x12ec>)
 8001c94:	4293      	cmp	r3, r2
 8001c96:	d02b      	beq.n	8001cf0 <__LNH_GPIO_Init+0x1260>
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	681b      	ldr	r3, [r3, #0]
 8001c9c:	4a38      	ldr	r2, [pc, #224]	@ (8001d80 <__LNH_GPIO_Init+0x12f0>)
 8001c9e:	4293      	cmp	r3, r2
 8001ca0:	d024      	beq.n	8001cec <__LNH_GPIO_Init+0x125c>
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	4a37      	ldr	r2, [pc, #220]	@ (8001d84 <__LNH_GPIO_Init+0x12f4>)
 8001ca8:	4293      	cmp	r3, r2
 8001caa:	d01d      	beq.n	8001ce8 <__LNH_GPIO_Init+0x1258>
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	4a35      	ldr	r2, [pc, #212]	@ (8001d88 <__LNH_GPIO_Init+0x12f8>)
 8001cb2:	4293      	cmp	r3, r2
 8001cb4:	d016      	beq.n	8001ce4 <__LNH_GPIO_Init+0x1254>
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	681b      	ldr	r3, [r3, #0]
 8001cba:	4a34      	ldr	r2, [pc, #208]	@ (8001d8c <__LNH_GPIO_Init+0x12fc>)
 8001cbc:	4293      	cmp	r3, r2
 8001cbe:	d00f      	beq.n	8001ce0 <__LNH_GPIO_Init+0x1250>
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	4a32      	ldr	r2, [pc, #200]	@ (8001d90 <__LNH_GPIO_Init+0x1300>)
 8001cc6:	4293      	cmp	r3, r2
 8001cc8:	d008      	beq.n	8001cdc <__LNH_GPIO_Init+0x124c>
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	4a31      	ldr	r2, [pc, #196]	@ (8001d94 <__LNH_GPIO_Init+0x1304>)
 8001cd0:	4293      	cmp	r3, r2
 8001cd2:	d101      	bne.n	8001cd8 <__LNH_GPIO_Init+0x1248>
 8001cd4:	2309      	movs	r3, #9
 8001cd6:	e012      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001cd8:	2300      	movs	r3, #0
 8001cda:	e010      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001cdc:	2308      	movs	r3, #8
 8001cde:	e00e      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001ce0:	2307      	movs	r3, #7
 8001ce2:	e00c      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001ce4:	2306      	movs	r3, #6
 8001ce6:	e00a      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001ce8:	2305      	movs	r3, #5
 8001cea:	e008      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001cec:	2304      	movs	r3, #4
 8001cee:	e006      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001cf0:	2303      	movs	r3, #3
 8001cf2:	e004      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001cf4:	2302      	movs	r3, #2
 8001cf6:	e002      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001cf8:	2301      	movs	r3, #1
 8001cfa:	e000      	b.n	8001cfe <__LNH_GPIO_Init+0x126e>
 8001cfc:	2300      	movs	r3, #0
 8001cfe:	727b      	strb	r3, [r7, #9]
			SYSCFG_PCLK_EN();
 8001d00:	4b25      	ldr	r3, [pc, #148]	@ (8001d98 <__LNH_GPIO_Init+0x1308>)
 8001d02:	681b      	ldr	r3, [r3, #0]
 8001d04:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001d06:	4b24      	ldr	r3, [pc, #144]	@ (8001d98 <__LNH_GPIO_Init+0x1308>)
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8001d0e:	645a      	str	r2, [r3, #68]	@ 0x44
			pGPIOConfig_t->pSYSCFG->EXTICR[temp1] = portcode << (temp2 *4);
 8001d10:	7a7a      	ldrb	r2, [r7, #9]
 8001d12:	7abb      	ldrb	r3, [r7, #10]
 8001d14:	009b      	lsls	r3, r3, #2
 8001d16:	fa02 f103 	lsl.w	r1, r2, r3
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	691b      	ldr	r3, [r3, #16]
 8001d1e:	7afa      	ldrb	r2, [r7, #11]
 8001d20:	3202      	adds	r2, #2
 8001d22:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			if (pGPIOConfig_t->EXTI_ENDI == EXTI_EN)
 8001d26:	687b      	ldr	r3, [r7, #4]
 8001d28:	7d1b      	ldrb	r3, [r3, #20]
 8001d2a:	2b01      	cmp	r3, #1
 8001d2c:	d10c      	bne.n	8001d48 <__LNH_GPIO_Init+0x12b8>
				pGPIOConfig_t->pEXTI->IMR  |=  (1 << GPIO_PIN_LH1);
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	68db      	ldr	r3, [r3, #12]
 8001d32:	681a      	ldr	r2, [r3, #0]
 8001d34:	2101      	movs	r1, #1
 8001d36:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d38:	fa01 f303 	lsl.w	r3, r1, r3
 8001d3c:	4619      	mov	r1, r3
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	68db      	ldr	r3, [r3, #12]
 8001d42:	430a      	orrs	r2, r1
 8001d44:	601a      	str	r2, [r3, #0]
}
 8001d46:	e00c      	b.n	8001d62 <__LNH_GPIO_Init+0x12d2>
				pGPIOConfig_t->pEXTI->IMR  &=  ~(1 << GPIO_PIN_LH1);
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	68db      	ldr	r3, [r3, #12]
 8001d4c:	681a      	ldr	r2, [r3, #0]
 8001d4e:	2101      	movs	r1, #1
 8001d50:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001d52:	fa01 f303 	lsl.w	r3, r1, r3
 8001d56:	43db      	mvns	r3, r3
 8001d58:	4619      	mov	r1, r3
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	68db      	ldr	r3, [r3, #12]
 8001d5e:	400a      	ands	r2, r1
 8001d60:	601a      	str	r2, [r3, #0]
}
 8001d62:	bf00      	nop
 8001d64:	372c      	adds	r7, #44	@ 0x2c
 8001d66:	46bd      	mov	sp, r7
 8001d68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d6c:	4770      	bx	lr
 8001d6e:	bf00      	nop
 8001d70:	40020000 	.word	0x40020000
 8001d74:	40020400 	.word	0x40020400
 8001d78:	40020800 	.word	0x40020800
 8001d7c:	40020c00 	.word	0x40020c00
 8001d80:	40021000 	.word	0x40021000
 8001d84:	40021400 	.word	0x40021400
 8001d88:	40021800 	.word	0x40021800
 8001d8c:	40021c00 	.word	0x40021c00
 8001d90:	40022000 	.word	0x40022000
 8001d94:	40022400 	.word	0x40022400
 8001d98:	20000000 	.word	0x20000000

08001d9c <__LNH_GPIO_IRQ_ITConfig>:
{
	pGPIOx->ODR ^= (1 << GPIO_PIN_NUMBER );
}

void __LNH_GPIO_IRQ_ITConfig(uint8_t IRQNumber ,uint8_t EN_DI)
{
 8001d9c:	b480      	push	{r7}
 8001d9e:	b083      	sub	sp, #12
 8001da0:	af00      	add	r7, sp, #0
 8001da2:	4603      	mov	r3, r0
 8001da4:	460a      	mov	r2, r1
 8001da6:	71fb      	strb	r3, [r7, #7]
 8001da8:	4613      	mov	r3, r2
 8001daa:	71bb      	strb	r3, [r7, #6]
	if(EN_DI == EN)
 8001dac:	79bb      	ldrb	r3, [r7, #6]
 8001dae:	2b01      	cmp	r3, #1
 8001db0:	d133      	bne.n	8001e1a <__LNH_GPIO_IRQ_ITConfig+0x7e>
	{
		if (IRQNumber <= 31)
 8001db2:	79fb      	ldrb	r3, [r7, #7]
 8001db4:	2b1f      	cmp	r3, #31
 8001db6:	d80a      	bhi.n	8001dce <__LNH_GPIO_IRQ_ITConfig+0x32>
		{
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 8001db8:	4b35      	ldr	r3, [pc, #212]	@ (8001e90 <__LNH_GPIO_IRQ_ITConfig+0xf4>)
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	79fa      	ldrb	r2, [r7, #7]
 8001dbe:	2101      	movs	r1, #1
 8001dc0:	fa01 f202 	lsl.w	r2, r1, r2
 8001dc4:	4611      	mov	r1, r2
 8001dc6:	4a32      	ldr	r2, [pc, #200]	@ (8001e90 <__LNH_GPIO_IRQ_ITConfig+0xf4>)
 8001dc8:	430b      	orrs	r3, r1
 8001dca:	6013      	str	r3, [r2, #0]
		}else if (IRQNumber >= 64 && IRQNumber < 96)
		{
			*NVIC_ICER3 |= ( 1 << (IRQNumber%64) );
		}
	}
}
 8001dcc:	e059      	b.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64)
 8001dce:	79fb      	ldrb	r3, [r7, #7]
 8001dd0:	2b1f      	cmp	r3, #31
 8001dd2:	d90f      	bls.n	8001df4 <__LNH_GPIO_IRQ_ITConfig+0x58>
 8001dd4:	79fb      	ldrb	r3, [r7, #7]
 8001dd6:	2b3f      	cmp	r3, #63	@ 0x3f
 8001dd8:	d80c      	bhi.n	8001df4 <__LNH_GPIO_IRQ_ITConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber%32) );
 8001dda:	4b2e      	ldr	r3, [pc, #184]	@ (8001e94 <__LNH_GPIO_IRQ_ITConfig+0xf8>)
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	79fa      	ldrb	r2, [r7, #7]
 8001de0:	f002 021f 	and.w	r2, r2, #31
 8001de4:	2101      	movs	r1, #1
 8001de6:	fa01 f202 	lsl.w	r2, r1, r2
 8001dea:	4611      	mov	r1, r2
 8001dec:	4a29      	ldr	r2, [pc, #164]	@ (8001e94 <__LNH_GPIO_IRQ_ITConfig+0xf8>)
 8001dee:	430b      	orrs	r3, r1
 8001df0:	6013      	str	r3, [r2, #0]
 8001df2:	e046      	b.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
		}else if (IRQNumber >= 64 && IRQNumber < 96)
 8001df4:	79fb      	ldrb	r3, [r7, #7]
 8001df6:	2b3f      	cmp	r3, #63	@ 0x3f
 8001df8:	d943      	bls.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
 8001dfa:	79fb      	ldrb	r3, [r7, #7]
 8001dfc:	2b5f      	cmp	r3, #95	@ 0x5f
 8001dfe:	d840      	bhi.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
			*NVIC_ISER3 |= ( 1 << (IRQNumber%64) );
 8001e00:	4b25      	ldr	r3, [pc, #148]	@ (8001e98 <__LNH_GPIO_IRQ_ITConfig+0xfc>)
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	79fa      	ldrb	r2, [r7, #7]
 8001e06:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8001e0a:	2101      	movs	r1, #1
 8001e0c:	fa01 f202 	lsl.w	r2, r1, r2
 8001e10:	4611      	mov	r1, r2
 8001e12:	4a21      	ldr	r2, [pc, #132]	@ (8001e98 <__LNH_GPIO_IRQ_ITConfig+0xfc>)
 8001e14:	430b      	orrs	r3, r1
 8001e16:	6013      	str	r3, [r2, #0]
}
 8001e18:	e033      	b.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
		if (IRQNumber <= 31)
 8001e1a:	79fb      	ldrb	r3, [r7, #7]
 8001e1c:	2b1f      	cmp	r3, #31
 8001e1e:	d80a      	bhi.n	8001e36 <__LNH_GPIO_IRQ_ITConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 8001e20:	4b1e      	ldr	r3, [pc, #120]	@ (8001e9c <__LNH_GPIO_IRQ_ITConfig+0x100>)
 8001e22:	681b      	ldr	r3, [r3, #0]
 8001e24:	79fa      	ldrb	r2, [r7, #7]
 8001e26:	2101      	movs	r1, #1
 8001e28:	fa01 f202 	lsl.w	r2, r1, r2
 8001e2c:	4611      	mov	r1, r2
 8001e2e:	4a1b      	ldr	r2, [pc, #108]	@ (8001e9c <__LNH_GPIO_IRQ_ITConfig+0x100>)
 8001e30:	430b      	orrs	r3, r1
 8001e32:	6013      	str	r3, [r2, #0]
}
 8001e34:	e025      	b.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64)
 8001e36:	79fb      	ldrb	r3, [r7, #7]
 8001e38:	2b1f      	cmp	r3, #31
 8001e3a:	d90f      	bls.n	8001e5c <__LNH_GPIO_IRQ_ITConfig+0xc0>
 8001e3c:	79fb      	ldrb	r3, [r7, #7]
 8001e3e:	2b3f      	cmp	r3, #63	@ 0x3f
 8001e40:	d80c      	bhi.n	8001e5c <__LNH_GPIO_IRQ_ITConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber%32) );
 8001e42:	4b17      	ldr	r3, [pc, #92]	@ (8001ea0 <__LNH_GPIO_IRQ_ITConfig+0x104>)
 8001e44:	681b      	ldr	r3, [r3, #0]
 8001e46:	79fa      	ldrb	r2, [r7, #7]
 8001e48:	f002 021f 	and.w	r2, r2, #31
 8001e4c:	2101      	movs	r1, #1
 8001e4e:	fa01 f202 	lsl.w	r2, r1, r2
 8001e52:	4611      	mov	r1, r2
 8001e54:	4a12      	ldr	r2, [pc, #72]	@ (8001ea0 <__LNH_GPIO_IRQ_ITConfig+0x104>)
 8001e56:	430b      	orrs	r3, r1
 8001e58:	6013      	str	r3, [r2, #0]
 8001e5a:	e012      	b.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
		}else if (IRQNumber >= 64 && IRQNumber < 96)
 8001e5c:	79fb      	ldrb	r3, [r7, #7]
 8001e5e:	2b3f      	cmp	r3, #63	@ 0x3f
 8001e60:	d90f      	bls.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
 8001e62:	79fb      	ldrb	r3, [r7, #7]
 8001e64:	2b5f      	cmp	r3, #95	@ 0x5f
 8001e66:	d80c      	bhi.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
			*NVIC_ICER3 |= ( 1 << (IRQNumber%64) );
 8001e68:	4b0e      	ldr	r3, [pc, #56]	@ (8001ea4 <__LNH_GPIO_IRQ_ITConfig+0x108>)
 8001e6a:	681b      	ldr	r3, [r3, #0]
 8001e6c:	79fa      	ldrb	r2, [r7, #7]
 8001e6e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8001e72:	2101      	movs	r1, #1
 8001e74:	fa01 f202 	lsl.w	r2, r1, r2
 8001e78:	4611      	mov	r1, r2
 8001e7a:	4a0a      	ldr	r2, [pc, #40]	@ (8001ea4 <__LNH_GPIO_IRQ_ITConfig+0x108>)
 8001e7c:	430b      	orrs	r3, r1
 8001e7e:	6013      	str	r3, [r2, #0]
}
 8001e80:	e7ff      	b.n	8001e82 <__LNH_GPIO_IRQ_ITConfig+0xe6>
 8001e82:	bf00      	nop
 8001e84:	370c      	adds	r7, #12
 8001e86:	46bd      	mov	sp, r7
 8001e88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8c:	4770      	bx	lr
 8001e8e:	bf00      	nop
 8001e90:	e000e100 	.word	0xe000e100
 8001e94:	e000e104 	.word	0xe000e104
 8001e98:	e000e10c 	.word	0xe000e10c
 8001e9c:	e000e180 	.word	0xe000e180
 8001ea0:	e000e184 	.word	0xe000e184
 8001ea4:	e000e18c 	.word	0xe000e18c

08001ea8 <__LNH_GPIO_IRQHanding>:
	uint8_t iprx_section = IRQNumber%4;
	uint8_t shift_amount = (8*iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENT);
	*(NVIC_PR_BASE_ADDR+(iprx*4)) |= (IRQPriority << shift_amount );
}
void __LNH_GPIO_IRQHanding(uint8_t GPIO_PIN_NUMBER)
{
 8001ea8:	b480      	push	{r7}
 8001eaa:	b085      	sub	sp, #20
 8001eac:	af00      	add	r7, sp, #0
 8001eae:	4603      	mov	r3, r0
 8001eb0:	71fb      	strb	r3, [r7, #7]
	EXTI_RegDef_t* pEXTI = EXTI;
 8001eb2:	4b0d      	ldr	r3, [pc, #52]	@ (8001ee8 <__LNH_GPIO_IRQHanding+0x40>)
 8001eb4:	60fb      	str	r3, [r7, #12]
	//Clear the EXTI bit PR to pending to waiting for I
	if (pEXTI->PR & (1 << GPIO_PIN_NUMBER))
 8001eb6:	68fb      	ldr	r3, [r7, #12]
 8001eb8:	695b      	ldr	r3, [r3, #20]
 8001eba:	79fa      	ldrb	r2, [r7, #7]
 8001ebc:	2101      	movs	r1, #1
 8001ebe:	fa01 f202 	lsl.w	r2, r1, r2
 8001ec2:	4013      	ands	r3, r2
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d008      	beq.n	8001eda <__LNH_GPIO_IRQHanding+0x32>
	{
		pEXTI->PR |= (1 << GPIO_PIN_NUMBER);
 8001ec8:	68fb      	ldr	r3, [r7, #12]
 8001eca:	695b      	ldr	r3, [r3, #20]
 8001ecc:	79fa      	ldrb	r2, [r7, #7]
 8001ece:	2101      	movs	r1, #1
 8001ed0:	fa01 f202 	lsl.w	r2, r1, r2
 8001ed4:	431a      	orrs	r2, r3
 8001ed6:	68fb      	ldr	r3, [r7, #12]
 8001ed8:	615a      	str	r2, [r3, #20]
	}
}
 8001eda:	bf00      	nop
 8001edc:	3714      	adds	r7, #20
 8001ede:	46bd      	mov	sp, r7
 8001ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee4:	4770      	bx	lr
 8001ee6:	bf00      	nop
 8001ee8:	40013c00 	.word	0x40013c00

08001eec <__LNH_SPI_PeriClockControl>:

static void SPI_TXE_IT_HANDLE(SPI_Config_t* pSPIConfig);
static void SPI_RXE_IT_HANDLE(SPI_Config_t* pSPIConfig);
static void SPI_OVR_ERR_IT_HANDLE(SPI_Config_t* pSPIConfig);
void __LNH_SPI_PeriClockControl(SPI_RegDef_t* pSPIx, uint8_t EN_DI)
{
 8001eec:	b480      	push	{r7}
 8001eee:	b083      	sub	sp, #12
 8001ef0:	af00      	add	r7, sp, #0
 8001ef2:	6078      	str	r0, [r7, #4]
 8001ef4:	460b      	mov	r3, r1
 8001ef6:	70fb      	strb	r3, [r7, #3]
	if (EN_DI == EN)
 8001ef8:	78fb      	ldrb	r3, [r7, #3]
 8001efa:	2b01      	cmp	r3, #1
 8001efc:	d14d      	bne.n	8001f9a <__LNH_SPI_PeriClockControl+0xae>
			{
				if (pSPIx == SPI1)
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	4a4f      	ldr	r2, [pc, #316]	@ (8002040 <__LNH_SPI_PeriClockControl+0x154>)
 8001f02:	4293      	cmp	r3, r2
 8001f04:	d108      	bne.n	8001f18 <__LNH_SPI_PeriClockControl+0x2c>
				{
					SPI1_PCLK_EN();
 8001f06:	4b4f      	ldr	r3, [pc, #316]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f08:	681b      	ldr	r3, [r3, #0]
 8001f0a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001f0c:	4b4d      	ldr	r3, [pc, #308]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8001f14:	645a      	str	r2, [r3, #68]	@ 0x44
				}else if (pSPIx == SPI6)
				{
					SPI6_PCLK_DI();
				}
			}
}
 8001f16:	e08d      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI2)
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	4a4b      	ldr	r2, [pc, #300]	@ (8002048 <__LNH_SPI_PeriClockControl+0x15c>)
 8001f1c:	4293      	cmp	r3, r2
 8001f1e:	d108      	bne.n	8001f32 <__LNH_SPI_PeriClockControl+0x46>
					SPI2_PCLK_EN();
 8001f20:	4b48      	ldr	r3, [pc, #288]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001f26:	4b47      	ldr	r3, [pc, #284]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8001f2e:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001f30:	e080      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI3)
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	4a45      	ldr	r2, [pc, #276]	@ (800204c <__LNH_SPI_PeriClockControl+0x160>)
 8001f36:	4293      	cmp	r3, r2
 8001f38:	d108      	bne.n	8001f4c <__LNH_SPI_PeriClockControl+0x60>
					SPI3_PCLK_EN();
 8001f3a:	4b42      	ldr	r3, [pc, #264]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001f40:	4b40      	ldr	r3, [pc, #256]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8001f48:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001f4a:	e073      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI4)
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	4a40      	ldr	r2, [pc, #256]	@ (8002050 <__LNH_SPI_PeriClockControl+0x164>)
 8001f50:	4293      	cmp	r3, r2
 8001f52:	d108      	bne.n	8001f66 <__LNH_SPI_PeriClockControl+0x7a>
					SPI4_PCLK_EN();
 8001f54:	4b3b      	ldr	r3, [pc, #236]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001f5a:	4b3a      	ldr	r3, [pc, #232]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8001f62:	645a      	str	r2, [r3, #68]	@ 0x44
}
 8001f64:	e066      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI5)
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	4a3a      	ldr	r2, [pc, #232]	@ (8002054 <__LNH_SPI_PeriClockControl+0x168>)
 8001f6a:	4293      	cmp	r3, r2
 8001f6c:	d108      	bne.n	8001f80 <__LNH_SPI_PeriClockControl+0x94>
					SPI5_PCLK_EN();
 8001f6e:	4b35      	ldr	r3, [pc, #212]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001f74:	4b33      	ldr	r3, [pc, #204]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8001f7c:	645a      	str	r2, [r3, #68]	@ 0x44
}
 8001f7e:	e059      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI6)
 8001f80:	687b      	ldr	r3, [r7, #4]
 8001f82:	4a35      	ldr	r2, [pc, #212]	@ (8002058 <__LNH_SPI_PeriClockControl+0x16c>)
 8001f84:	4293      	cmp	r3, r2
 8001f86:	d155      	bne.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
					SPI6_PCLK_EN();
 8001f88:	4b2e      	ldr	r3, [pc, #184]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001f8e:	4b2d      	ldr	r3, [pc, #180]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	f442 1200 	orr.w	r2, r2, #2097152	@ 0x200000
 8001f96:	645a      	str	r2, [r3, #68]	@ 0x44
}
 8001f98:	e04c      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				if (pSPIx == SPI1)
 8001f9a:	687b      	ldr	r3, [r7, #4]
 8001f9c:	4a28      	ldr	r2, [pc, #160]	@ (8002040 <__LNH_SPI_PeriClockControl+0x154>)
 8001f9e:	4293      	cmp	r3, r2
 8001fa0:	d108      	bne.n	8001fb4 <__LNH_SPI_PeriClockControl+0xc8>
					SPI1_PCLK_DI();
 8001fa2:	4b28      	ldr	r3, [pc, #160]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001fa8:	4b26      	ldr	r3, [pc, #152]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8001fb0:	645a      	str	r2, [r3, #68]	@ 0x44
}
 8001fb2:	e03f      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI2)
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	4a24      	ldr	r2, [pc, #144]	@ (8002048 <__LNH_SPI_PeriClockControl+0x15c>)
 8001fb8:	4293      	cmp	r3, r2
 8001fba:	d108      	bne.n	8001fce <__LNH_SPI_PeriClockControl+0xe2>
					SPI2_PCLK_DI();
 8001fbc:	4b21      	ldr	r3, [pc, #132]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001fc2:	4b20      	ldr	r3, [pc, #128]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001fc4:	681b      	ldr	r3, [r3, #0]
 8001fc6:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8001fca:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001fcc:	e032      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI3)
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	4a1e      	ldr	r2, [pc, #120]	@ (800204c <__LNH_SPI_PeriClockControl+0x160>)
 8001fd2:	4293      	cmp	r3, r2
 8001fd4:	d108      	bne.n	8001fe8 <__LNH_SPI_PeriClockControl+0xfc>
					SPI3_PCLK_DI();
 8001fd6:	4b1b      	ldr	r3, [pc, #108]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001fdc:	4b19      	ldr	r3, [pc, #100]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8001fe4:	641a      	str	r2, [r3, #64]	@ 0x40
}
 8001fe6:	e025      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI4)
 8001fe8:	687b      	ldr	r3, [r7, #4]
 8001fea:	4a19      	ldr	r2, [pc, #100]	@ (8002050 <__LNH_SPI_PeriClockControl+0x164>)
 8001fec:	4293      	cmp	r3, r2
 8001fee:	d108      	bne.n	8002002 <__LNH_SPI_PeriClockControl+0x116>
					SPI4_PCLK_DI();
 8001ff0:	4b14      	ldr	r3, [pc, #80]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001ff6:	4b13      	ldr	r3, [pc, #76]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8001ffe:	645a      	str	r2, [r3, #68]	@ 0x44
}
 8002000:	e018      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI5)
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	4a13      	ldr	r2, [pc, #76]	@ (8002054 <__LNH_SPI_PeriClockControl+0x168>)
 8002006:	4293      	cmp	r3, r2
 8002008:	d108      	bne.n	800201c <__LNH_SPI_PeriClockControl+0x130>
					SPI5_PCLK_DI();
 800200a:	4b0e      	ldr	r3, [pc, #56]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002010:	4b0c      	ldr	r3, [pc, #48]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
 8002018:	645a      	str	r2, [r3, #68]	@ 0x44
}
 800201a:	e00b      	b.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
				}else if (pSPIx == SPI6)
 800201c:	687b      	ldr	r3, [r7, #4]
 800201e:	4a0e      	ldr	r2, [pc, #56]	@ (8002058 <__LNH_SPI_PeriClockControl+0x16c>)
 8002020:	4293      	cmp	r3, r2
 8002022:	d107      	bne.n	8002034 <__LNH_SPI_PeriClockControl+0x148>
					SPI6_PCLK_DI();
 8002024:	4b07      	ldr	r3, [pc, #28]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800202a:	4b06      	ldr	r3, [pc, #24]	@ (8002044 <__LNH_SPI_PeriClockControl+0x158>)
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	f422 1200 	bic.w	r2, r2, #2097152	@ 0x200000
 8002032:	645a      	str	r2, [r3, #68]	@ 0x44
}
 8002034:	bf00      	nop
 8002036:	370c      	adds	r7, #12
 8002038:	46bd      	mov	sp, r7
 800203a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203e:	4770      	bx	lr
 8002040:	40013000 	.word	0x40013000
 8002044:	20000000 	.word	0x20000000
 8002048:	40003800 	.word	0x40003800
 800204c:	40003c00 	.word	0x40003c00
 8002050:	40013400 	.word	0x40013400
 8002054:	40015000 	.word	0x40015000
 8002058:	40015400 	.word	0x40015400

0800205c <__LNH_SPI_Init>:

void __LNH_SPI_Init(SPI_Config_t* pSPIConfig)
{
 800205c:	b480      	push	{r7}
 800205e:	b083      	sub	sp, #12
 8002060:	af00      	add	r7, sp, #0
 8002062:	6078      	str	r0, [r7, #4]
	//	I. Configure the device mode
	if (pSPIConfig->SPI_DeviceMode == SPI_DEVICE_MODE_MASTER)
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	791b      	ldrb	r3, [r3, #4]
 8002068:	2b01      	cmp	r3, #1
 800206a:	d108      	bne.n	800207e <__LNH_SPI_Init+0x22>
	{
		pSPIConfig->pSPIx->CR1 |=  (1 << 2);
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	681a      	ldr	r2, [r3, #0]
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	f042 0204 	orr.w	r2, r2, #4
 800207a:	601a      	str	r2, [r3, #0]
 800207c:	e007      	b.n	800208e <__LNH_SPI_Init+0x32>
	}
	else
	{
		pSPIConfig->pSPIx->CR1 &= ~(1 << 2);
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	681a      	ldr	r2, [r3, #0]
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	f022 0204 	bic.w	r2, r2, #4
 800208c:	601a      	str	r2, [r3, #0]
	}
	//	II. Configure the bus configure
	switch (pSPIConfig->SPI_BusConfig)
 800208e:	687b      	ldr	r3, [r7, #4]
 8002090:	795b      	ldrb	r3, [r3, #5]
 8002092:	3b01      	subs	r3, #1
 8002094:	2b03      	cmp	r3, #3
 8002096:	d83f      	bhi.n	8002118 <__LNH_SPI_Init+0xbc>
 8002098:	a201      	add	r2, pc, #4	@ (adr r2, 80020a0 <__LNH_SPI_Init+0x44>)
 800209a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800209e:	bf00      	nop
 80020a0:	080020b1 	.word	0x080020b1
 80020a4:	080020c3 	.word	0x080020c3
 80020a8:	080020d5 	.word	0x080020d5
 80020ac:	080020f7 	.word	0x080020f7
	{
		case SPI_BUS_CONFIG_FD: //Full Duplex Mode
			pSPIConfig->pSPIx->CR1 &= ~(1<<15);
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	681a      	ldr	r2, [r3, #0]
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80020be:	601a      	str	r2, [r3, #0]
			break;
 80020c0:	e02a      	b.n	8002118 <__LNH_SPI_Init+0xbc>
		case SPI_BUS_CONFIG_HD: //Half Duplex Mode
			pSPIConfig->pSPIx->CR1 |=  (1<<15);
 80020c2:	687b      	ldr	r3, [r7, #4]
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	681a      	ldr	r2, [r3, #0]
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80020d0:	601a      	str	r2, [r3, #0]
			break;
 80020d2:	e021      	b.n	8002118 <__LNH_SPI_Init+0xbc>

		case SPI_BUS_CONFIG_SIMPLEX_TXONLY: //Only TX
			pSPIConfig->pSPIx->CR1 &= ~(1<<15);
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	681a      	ldr	r2, [r3, #0]
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80020e2:	601a      	str	r2, [r3, #0]
			pSPIConfig->pSPIx->CR1 &= ~(1<<10);
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	681a      	ldr	r2, [r3, #0]
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80020f2:	601a      	str	r2, [r3, #0]
			break;
 80020f4:	e010      	b.n	8002118 <__LNH_SPI_Init+0xbc>
		case SPI_BUS_CONFIG_SIMPLEX_RXONLY: //Only RX
			pSPIConfig->pSPIx->CR1 &= ~(1<<15);
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	681b      	ldr	r3, [r3, #0]
 80020fa:	681a      	ldr	r2, [r3, #0]
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8002104:	601a      	str	r2, [r3, #0]
			pSPIConfig->pSPIx->CR1 |=  (1<<10);
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	681a      	ldr	r2, [r3, #0]
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8002114:	601a      	str	r2, [r3, #0]
			break;
 8002116:	bf00      	nop
	 * Nhưng viết 1 nhóm bit vào mà ta chỉ sử dụng 1 phép OR (kĩ thuật truyền bit 1)
	 * Thì bit 0 sẽ không đúng, do vậy ta cần clear bit hết thanh ghi trước khi truyền
	 * vào.
	 */
	//	III. Configure the SPI Speed
	pSPIConfig->pSPIx->CR1 &= ~(7<<3);
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	681a      	ldr	r2, [r3, #0]
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	681b      	ldr	r3, [r3, #0]
 8002122:	f022 0238 	bic.w	r2, r2, #56	@ 0x38
 8002126:	601a      	str	r2, [r3, #0]
	pSPIConfig->pSPIx->CR1 |= ((pSPIConfig->SPI_SCLKSpeed)<<3);
 8002128:	687b      	ldr	r3, [r7, #4]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	6819      	ldr	r1, [r3, #0]
 800212e:	687b      	ldr	r3, [r7, #4]
 8002130:	799b      	ldrb	r3, [r3, #6]
 8002132:	00da      	lsls	r2, r3, #3
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	430a      	orrs	r2, r1
 800213a:	601a      	str	r2, [r3, #0]

	//	IV. Configure the DFF
	pSPIConfig->pSPIx->CR1 &= ~(1<<11);
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	681b      	ldr	r3, [r3, #0]
 8002140:	681a      	ldr	r2, [r3, #0]
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800214a:	601a      	str	r2, [r3, #0]
	pSPIConfig->pSPIx->CR1 |= ((pSPIConfig->SPI_SCLKSpeed)<<11);
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	681b      	ldr	r3, [r3, #0]
 8002150:	6819      	ldr	r1, [r3, #0]
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	799b      	ldrb	r3, [r3, #6]
 8002156:	02da      	lsls	r2, r3, #11
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	681b      	ldr	r3, [r3, #0]
 800215c:	430a      	orrs	r2, r1
 800215e:	601a      	str	r2, [r3, #0]

	//	V. Configure the CPOL
	pSPIConfig->pSPIx->CR1 &= ~(1<<1);
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	681a      	ldr	r2, [r3, #0]
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	f022 0202 	bic.w	r2, r2, #2
 800216e:	601a      	str	r2, [r3, #0]
	pSPIConfig->pSPIx->CR1 |= ((pSPIConfig->SPI_CPOL)<<1);
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	6819      	ldr	r1, [r3, #0]
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	7a1b      	ldrb	r3, [r3, #8]
 800217a:	005a      	lsls	r2, r3, #1
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	430a      	orrs	r2, r1
 8002182:	601a      	str	r2, [r3, #0]

	// 	VI. Configure the CPHA

	pSPIConfig->pSPIx->CR1 &= ~(1<<0);
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	681b      	ldr	r3, [r3, #0]
 8002188:	681a      	ldr	r2, [r3, #0]
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	f022 0201 	bic.w	r2, r2, #1
 8002192:	601a      	str	r2, [r3, #0]
	pSPIConfig->pSPIx->CR1 |= ((pSPIConfig->SPI_CPHA)<<0);
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	681b      	ldr	r3, [r3, #0]
 8002198:	681a      	ldr	r2, [r3, #0]
 800219a:	687b      	ldr	r3, [r7, #4]
 800219c:	7a5b      	ldrb	r3, [r3, #9]
 800219e:	4619      	mov	r1, r3
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	430a      	orrs	r2, r1
 80021a6:	601a      	str	r2, [r3, #0]

	//	VII. Configure the SSM
	if (pSPIConfig->SPI_SSM == SPI_SSM_SW)
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	7a9b      	ldrb	r3, [r3, #10]
 80021ac:	2b01      	cmp	r3, #1
 80021ae:	d108      	bne.n	80021c2 <__LNH_SPI_Init+0x166>
	{
		pSPIConfig->pSPIx->CR1 |= (1<<9);
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	681a      	ldr	r2, [r3, #0]
 80021b6:	687b      	ldr	r3, [r7, #4]
 80021b8:	681b      	ldr	r3, [r3, #0]
 80021ba:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80021be:	601a      	str	r2, [r3, #0]
 80021c0:	e007      	b.n	80021d2 <__LNH_SPI_Init+0x176>
	}
	else
	{
		pSPIConfig->pSPIx->CR1 &= ~(1<<9);
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	681a      	ldr	r2, [r3, #0]
 80021c8:	687b      	ldr	r3, [r7, #4]
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80021d0:	601a      	str	r2, [r3, #0]
	}
	//	VII. Configure the NSS

	if (pSPIConfig->SPI_SSM == SPI_SSM_SW)
 80021d2:	687b      	ldr	r3, [r7, #4]
 80021d4:	7a9b      	ldrb	r3, [r3, #10]
 80021d6:	2b01      	cmp	r3, #1
 80021d8:	d115      	bne.n	8002206 <__LNH_SPI_Init+0x1aa>
	{
		if (pSPIConfig->SPI_FUNC == SPI_FUNC_MT)
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	7adb      	ldrb	r3, [r3, #11]
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d108      	bne.n	80021f4 <__LNH_SPI_Init+0x198>
		{
			pSPIConfig->pSPIx->CR1 |= (1<<8);
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	681a      	ldr	r2, [r3, #0]
 80021e8:	687b      	ldr	r3, [r7, #4]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80021f0:	601a      	str	r2, [r3, #0]
		/* Cả 2 cách đều có cấu hình thanh ghi như nhau.
		 * Với cách dùng NSS, thì nối chân NSS vào CS của slave, SPI tự đưa xuống thấp
		 * Với cách dùng GPIO, thì nối chân NSS lên nguồn rồi dùng GPIO điều khiển.
		 */
	}
}
 80021f2:	e01d      	b.n	8002230 <__LNH_SPI_Init+0x1d4>
			pSPIConfig->pSPIx->CR1 &= ~(1<<8);
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	681b      	ldr	r3, [r3, #0]
 80021f8:	681a      	ldr	r2, [r3, #0]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002202:	601a      	str	r2, [r3, #0]
}
 8002204:	e014      	b.n	8002230 <__LNH_SPI_Init+0x1d4>
		if (pSPIConfig->SPI_FUNC == SPI_FUNC_MT)
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	7adb      	ldrb	r3, [r3, #11]
 800220a:	2b00      	cmp	r3, #0
 800220c:	d108      	bne.n	8002220 <__LNH_SPI_Init+0x1c4>
			pSPIConfig->pSPIx->CR2 |=  (1<<2);
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	685a      	ldr	r2, [r3, #4]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	f042 0204 	orr.w	r2, r2, #4
 800221c:	605a      	str	r2, [r3, #4]
}
 800221e:	e007      	b.n	8002230 <__LNH_SPI_Init+0x1d4>
			pSPIConfig->pSPIx->CR2 &= ~(1<<2);
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	685a      	ldr	r2, [r3, #4]
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	681b      	ldr	r3, [r3, #0]
 800222a:	f022 0204 	bic.w	r2, r2, #4
 800222e:	605a      	str	r2, [r3, #4]
}
 8002230:	bf00      	nop
 8002232:	370c      	adds	r7, #12
 8002234:	46bd      	mov	sp, r7
 8002236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800223a:	4770      	bx	lr

0800223c <__LNH_SPI_GetFlagStatus>:
		{
			SPI6_REG_RESET();
		}
}
uint8_t __LNH_SPI_GetFlagStatus(SPI_RegDef_t *pSPIx,uint32_t FlagName)
{
 800223c:	b480      	push	{r7}
 800223e:	b083      	sub	sp, #12
 8002240:	af00      	add	r7, sp, #0
 8002242:	6078      	str	r0, [r7, #4]
 8002244:	6039      	str	r1, [r7, #0]
	if(pSPIx->SR & FlagName)
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	689a      	ldr	r2, [r3, #8]
 800224a:	683b      	ldr	r3, [r7, #0]
 800224c:	4013      	ands	r3, r2
 800224e:	2b00      	cmp	r3, #0
 8002250:	d001      	beq.n	8002256 <__LNH_SPI_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 8002252:	2301      	movs	r3, #1
 8002254:	e000      	b.n	8002258 <__LNH_SPI_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 8002256:	2300      	movs	r3, #0
}
 8002258:	4618      	mov	r0, r3
 800225a:	370c      	adds	r7, #12
 800225c:	46bd      	mov	sp, r7
 800225e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002262:	4770      	bx	lr

08002264 <__LNH_SPI_PeripheralENDI>:
			pRxBuffer++;
		}
	}
}
void __LNH_SPI_PeripheralENDI(SPI_RegDef_t* pSPIx, uint8_t EN_DI)
{
 8002264:	b480      	push	{r7}
 8002266:	b083      	sub	sp, #12
 8002268:	af00      	add	r7, sp, #0
 800226a:	6078      	str	r0, [r7, #4]
 800226c:	460b      	mov	r3, r1
 800226e:	70fb      	strb	r3, [r7, #3]
	if (EN_DI == EN)
 8002270:	78fb      	ldrb	r3, [r7, #3]
 8002272:	2b01      	cmp	r3, #1
 8002274:	d106      	bne.n	8002284 <__LNH_SPI_PeripheralENDI+0x20>
	{
		pSPIx->CR1 |=  (1<<6);
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	681b      	ldr	r3, [r3, #0]
 800227a:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pSPIx->CR1 &= ~(1<<6);
	}
}
 8002282:	e005      	b.n	8002290 <__LNH_SPI_PeripheralENDI+0x2c>
		pSPIx->CR1 &= ~(1<<6);
 8002284:	687b      	ldr	r3, [r7, #4]
 8002286:	681b      	ldr	r3, [r3, #0]
 8002288:	f023 0240 	bic.w	r2, r3, #64	@ 0x40
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	601a      	str	r2, [r3, #0]
}
 8002290:	bf00      	nop
 8002292:	370c      	adds	r7, #12
 8002294:	46bd      	mov	sp, r7
 8002296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800229a:	4770      	bx	lr

0800229c <__LNH_SPI_IRQ_ITConfig>:
void __LNH_SPI_IRQ_ITConfig(uint8_t IRQNumber ,uint8_t EN_DI)
{
 800229c:	b480      	push	{r7}
 800229e:	b083      	sub	sp, #12
 80022a0:	af00      	add	r7, sp, #0
 80022a2:	4603      	mov	r3, r0
 80022a4:	460a      	mov	r2, r1
 80022a6:	71fb      	strb	r3, [r7, #7]
 80022a8:	4613      	mov	r3, r2
 80022aa:	71bb      	strb	r3, [r7, #6]
	if(EN_DI == EN)
 80022ac:	79bb      	ldrb	r3, [r7, #6]
 80022ae:	2b01      	cmp	r3, #1
 80022b0:	d133      	bne.n	800231a <__LNH_SPI_IRQ_ITConfig+0x7e>
	{
		if (IRQNumber <= 31)
 80022b2:	79fb      	ldrb	r3, [r7, #7]
 80022b4:	2b1f      	cmp	r3, #31
 80022b6:	d80a      	bhi.n	80022ce <__LNH_SPI_IRQ_ITConfig+0x32>
		{
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 80022b8:	4b35      	ldr	r3, [pc, #212]	@ (8002390 <__LNH_SPI_IRQ_ITConfig+0xf4>)
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	79fa      	ldrb	r2, [r7, #7]
 80022be:	2101      	movs	r1, #1
 80022c0:	fa01 f202 	lsl.w	r2, r1, r2
 80022c4:	4611      	mov	r1, r2
 80022c6:	4a32      	ldr	r2, [pc, #200]	@ (8002390 <__LNH_SPI_IRQ_ITConfig+0xf4>)
 80022c8:	430b      	orrs	r3, r1
 80022ca:	6013      	str	r3, [r2, #0]
		}else if (IRQNumber >= 64 && IRQNumber < 96)
		{
			*NVIC_ICER3 |= ( 1 << (IRQNumber%64) );
		}
	}
}
 80022cc:	e059      	b.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64)
 80022ce:	79fb      	ldrb	r3, [r7, #7]
 80022d0:	2b1f      	cmp	r3, #31
 80022d2:	d90f      	bls.n	80022f4 <__LNH_SPI_IRQ_ITConfig+0x58>
 80022d4:	79fb      	ldrb	r3, [r7, #7]
 80022d6:	2b3f      	cmp	r3, #63	@ 0x3f
 80022d8:	d80c      	bhi.n	80022f4 <__LNH_SPI_IRQ_ITConfig+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber%32) );
 80022da:	4b2e      	ldr	r3, [pc, #184]	@ (8002394 <__LNH_SPI_IRQ_ITConfig+0xf8>)
 80022dc:	681b      	ldr	r3, [r3, #0]
 80022de:	79fa      	ldrb	r2, [r7, #7]
 80022e0:	f002 021f 	and.w	r2, r2, #31
 80022e4:	2101      	movs	r1, #1
 80022e6:	fa01 f202 	lsl.w	r2, r1, r2
 80022ea:	4611      	mov	r1, r2
 80022ec:	4a29      	ldr	r2, [pc, #164]	@ (8002394 <__LNH_SPI_IRQ_ITConfig+0xf8>)
 80022ee:	430b      	orrs	r3, r1
 80022f0:	6013      	str	r3, [r2, #0]
 80022f2:	e046      	b.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
		}else if (IRQNumber >= 64 && IRQNumber < 96)
 80022f4:	79fb      	ldrb	r3, [r7, #7]
 80022f6:	2b3f      	cmp	r3, #63	@ 0x3f
 80022f8:	d943      	bls.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
 80022fa:	79fb      	ldrb	r3, [r7, #7]
 80022fc:	2b5f      	cmp	r3, #95	@ 0x5f
 80022fe:	d840      	bhi.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
			*NVIC_ISER3 |= ( 1 << (IRQNumber%64) );
 8002300:	4b25      	ldr	r3, [pc, #148]	@ (8002398 <__LNH_SPI_IRQ_ITConfig+0xfc>)
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	79fa      	ldrb	r2, [r7, #7]
 8002306:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800230a:	2101      	movs	r1, #1
 800230c:	fa01 f202 	lsl.w	r2, r1, r2
 8002310:	4611      	mov	r1, r2
 8002312:	4a21      	ldr	r2, [pc, #132]	@ (8002398 <__LNH_SPI_IRQ_ITConfig+0xfc>)
 8002314:	430b      	orrs	r3, r1
 8002316:	6013      	str	r3, [r2, #0]
}
 8002318:	e033      	b.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
		if (IRQNumber <= 31)
 800231a:	79fb      	ldrb	r3, [r7, #7]
 800231c:	2b1f      	cmp	r3, #31
 800231e:	d80a      	bhi.n	8002336 <__LNH_SPI_IRQ_ITConfig+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 8002320:	4b1e      	ldr	r3, [pc, #120]	@ (800239c <__LNH_SPI_IRQ_ITConfig+0x100>)
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	79fa      	ldrb	r2, [r7, #7]
 8002326:	2101      	movs	r1, #1
 8002328:	fa01 f202 	lsl.w	r2, r1, r2
 800232c:	4611      	mov	r1, r2
 800232e:	4a1b      	ldr	r2, [pc, #108]	@ (800239c <__LNH_SPI_IRQ_ITConfig+0x100>)
 8002330:	430b      	orrs	r3, r1
 8002332:	6013      	str	r3, [r2, #0]
}
 8002334:	e025      	b.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
		}else if (IRQNumber > 31 && IRQNumber < 64)
 8002336:	79fb      	ldrb	r3, [r7, #7]
 8002338:	2b1f      	cmp	r3, #31
 800233a:	d90f      	bls.n	800235c <__LNH_SPI_IRQ_ITConfig+0xc0>
 800233c:	79fb      	ldrb	r3, [r7, #7]
 800233e:	2b3f      	cmp	r3, #63	@ 0x3f
 8002340:	d80c      	bhi.n	800235c <__LNH_SPI_IRQ_ITConfig+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber%32) );
 8002342:	4b17      	ldr	r3, [pc, #92]	@ (80023a0 <__LNH_SPI_IRQ_ITConfig+0x104>)
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	79fa      	ldrb	r2, [r7, #7]
 8002348:	f002 021f 	and.w	r2, r2, #31
 800234c:	2101      	movs	r1, #1
 800234e:	fa01 f202 	lsl.w	r2, r1, r2
 8002352:	4611      	mov	r1, r2
 8002354:	4a12      	ldr	r2, [pc, #72]	@ (80023a0 <__LNH_SPI_IRQ_ITConfig+0x104>)
 8002356:	430b      	orrs	r3, r1
 8002358:	6013      	str	r3, [r2, #0]
 800235a:	e012      	b.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
		}else if (IRQNumber >= 64 && IRQNumber < 96)
 800235c:	79fb      	ldrb	r3, [r7, #7]
 800235e:	2b3f      	cmp	r3, #63	@ 0x3f
 8002360:	d90f      	bls.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
 8002362:	79fb      	ldrb	r3, [r7, #7]
 8002364:	2b5f      	cmp	r3, #95	@ 0x5f
 8002366:	d80c      	bhi.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
			*NVIC_ICER3 |= ( 1 << (IRQNumber%64) );
 8002368:	4b0e      	ldr	r3, [pc, #56]	@ (80023a4 <__LNH_SPI_IRQ_ITConfig+0x108>)
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	79fa      	ldrb	r2, [r7, #7]
 800236e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8002372:	2101      	movs	r1, #1
 8002374:	fa01 f202 	lsl.w	r2, r1, r2
 8002378:	4611      	mov	r1, r2
 800237a:	4a0a      	ldr	r2, [pc, #40]	@ (80023a4 <__LNH_SPI_IRQ_ITConfig+0x108>)
 800237c:	430b      	orrs	r3, r1
 800237e:	6013      	str	r3, [r2, #0]
}
 8002380:	e7ff      	b.n	8002382 <__LNH_SPI_IRQ_ITConfig+0xe6>
 8002382:	bf00      	nop
 8002384:	370c      	adds	r7, #12
 8002386:	46bd      	mov	sp, r7
 8002388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800238c:	4770      	bx	lr
 800238e:	bf00      	nop
 8002390:	e000e100 	.word	0xe000e100
 8002394:	e000e104 	.word	0xe000e104
 8002398:	e000e10c 	.word	0xe000e10c
 800239c:	e000e180 	.word	0xe000e180
 80023a0:	e000e184 	.word	0xe000e184
 80023a4:	e000e18c 	.word	0xe000e18c

080023a8 <__LNH_SPI_SendDataIT>:
	uint8_t iprx_section = IRQNumber%4;
	uint8_t shift_amount = (8*iprx_section) + ( 8 - NO_PR_BITS_IMPLEMENT);
	*(NVIC_PR_BASE_ADDR+(iprx*4)) |= (IRQPriority << shift_amount );
}
uint8_t __LNH_SPI_SendDataIT(SPI_Config_t* pSPIConfig,uint8_t* pTxBuffer, uint32_t Length)
{
 80023a8:	b480      	push	{r7}
 80023aa:	b087      	sub	sp, #28
 80023ac:	af00      	add	r7, sp, #0
 80023ae:	60f8      	str	r0, [r7, #12]
 80023b0:	60b9      	str	r1, [r7, #8]
 80023b2:	607a      	str	r2, [r7, #4]

	uint8_t state = pSPIConfig->TxState;
 80023b4:	68fb      	ldr	r3, [r7, #12]
 80023b6:	7f1b      	ldrb	r3, [r3, #28]
 80023b8:	75fb      	strb	r3, [r7, #23]
	if (state != SPI_BUSY_IN_TX)
 80023ba:	7dfb      	ldrb	r3, [r7, #23]
 80023bc:	2b02      	cmp	r3, #2
 80023be:	d010      	beq.n	80023e2 <__LNH_SPI_SendDataIT+0x3a>
	{
	//1. Save the TxBuffer address and Len information in some global var
		pSPIConfig->pTxBuffer = pTxBuffer;
 80023c0:	68fb      	ldr	r3, [r7, #12]
 80023c2:	68ba      	ldr	r2, [r7, #8]
 80023c4:	60da      	str	r2, [r3, #12]
		pSPIConfig->TxLen = Length;
 80023c6:	68fb      	ldr	r3, [r7, #12]
 80023c8:	687a      	ldr	r2, [r7, #4]
 80023ca:	615a      	str	r2, [r3, #20]
	/*2. Mark the SPI state as busy in transmission so that no other code can take over
	 * same SPI peripherals until transmission is over */
		pSPIConfig->TxState = SPI_BUSY_IN_TX;
 80023cc:	68fb      	ldr	r3, [r7, #12]
 80023ce:	2202      	movs	r2, #2
 80023d0:	771a      	strb	r2, [r3, #28]

	/*3. Enable the TXEIE control bit to get interrupt whenever TXE flag is set in SR*/
		pSPIConfig->pSPIx->CR2 |= (1 << 7);
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	685a      	ldr	r2, [r3, #4]
 80023d8:	68fb      	ldr	r3, [r7, #12]
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80023e0:	605a      	str	r2, [r3, #4]
	}
	return state;
 80023e2:	7dfb      	ldrb	r3, [r7, #23]

}
 80023e4:	4618      	mov	r0, r3
 80023e6:	371c      	adds	r7, #28
 80023e8:	46bd      	mov	sp, r7
 80023ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ee:	4770      	bx	lr

080023f0 <__LNH_SPI_ReceiveDataIT>:
uint8_t __LNH_SPI_ReceiveDataIT(SPI_Config_t* pSPIConfig,uint8_t* pRxBuffer, uint32_t Length)
{
 80023f0:	b480      	push	{r7}
 80023f2:	b087      	sub	sp, #28
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	60f8      	str	r0, [r7, #12]
 80023f8:	60b9      	str	r1, [r7, #8]
 80023fa:	607a      	str	r2, [r7, #4]
	uint8_t state = pSPIConfig->RxState;
 80023fc:	68fb      	ldr	r3, [r7, #12]
 80023fe:	7f5b      	ldrb	r3, [r3, #29]
 8002400:	75fb      	strb	r3, [r7, #23]
	if (state != SPI_BUSY_IN_RX)
 8002402:	7dfb      	ldrb	r3, [r7, #23]
 8002404:	2b01      	cmp	r3, #1
 8002406:	d010      	beq.n	800242a <__LNH_SPI_ReceiveDataIT+0x3a>
	{
	//1. Save the TxBuffer address and Len information in some global var
		pSPIConfig->pRxBuffer = pRxBuffer;
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	68ba      	ldr	r2, [r7, #8]
 800240c:	611a      	str	r2, [r3, #16]
		pSPIConfig->RxLen = Length;
 800240e:	68fb      	ldr	r3, [r7, #12]
 8002410:	687a      	ldr	r2, [r7, #4]
 8002412:	619a      	str	r2, [r3, #24]
	/*2. Mark the SPI state as busy in transmission so that no other code can take over
	 * same SPI peripherals until transmission is over */
		pSPIConfig->RxState = SPI_BUSY_IN_RX;
 8002414:	68fb      	ldr	r3, [r7, #12]
 8002416:	2201      	movs	r2, #1
 8002418:	775a      	strb	r2, [r3, #29]

	/*3. Enable the TXEIE control bit to get interrupt whenever TXE flag is set in SR*/
	pSPIConfig->pSPIx->CR2 |= (1 << 6);
 800241a:	68fb      	ldr	r3, [r7, #12]
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	685a      	ldr	r2, [r3, #4]
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8002428:	605a      	str	r2, [r3, #4]
	}
	return state;
 800242a:	7dfb      	ldrb	r3, [r7, #23]
}
 800242c:	4618      	mov	r0, r3
 800242e:	371c      	adds	r7, #28
 8002430:	46bd      	mov	sp, r7
 8002432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002436:	4770      	bx	lr

08002438 <__LNH_SPI_IRQHanding>:

void __LNH_SPI_IRQHanding(SPI_Config_t* pSPIConfig)
{
 8002438:	b580      	push	{r7, lr}
 800243a:	b084      	sub	sp, #16
 800243c:	af00      	add	r7, sp, #0
 800243e:	6078      	str	r0, [r7, #4]
	uint8_t temp1, temp2 ;
	// First lets check for TXE
	temp1 = pSPIConfig->pSPIx->SR & (1 << 1);
 8002440:	687b      	ldr	r3, [r7, #4]
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	689b      	ldr	r3, [r3, #8]
 8002446:	b2db      	uxtb	r3, r3
 8002448:	f003 0302 	and.w	r3, r3, #2
 800244c:	73fb      	strb	r3, [r7, #15]
	temp2 = pSPIConfig->pSPIx->CR2 & (1 << 7);
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	685b      	ldr	r3, [r3, #4]
 8002454:	b2db      	uxtb	r3, r3
 8002456:	f023 037f 	bic.w	r3, r3, #127	@ 0x7f
 800245a:	73bb      	strb	r3, [r7, #14]
	if (temp1 && temp2)
 800245c:	7bfb      	ldrb	r3, [r7, #15]
 800245e:	2b00      	cmp	r3, #0
 8002460:	d005      	beq.n	800246e <__LNH_SPI_IRQHanding+0x36>
 8002462:	7bbb      	ldrb	r3, [r7, #14]
 8002464:	2b00      	cmp	r3, #0
 8002466:	d002      	beq.n	800246e <__LNH_SPI_IRQHanding+0x36>
	{
		//Handle TXE
		SPI_TXE_IT_HANDLE(pSPIConfig);
 8002468:	6878      	ldr	r0, [r7, #4]
 800246a:	f000 f832 	bl	80024d2 <SPI_TXE_IT_HANDLE>

	}
	// Second lets check for RXNE
	temp1 = pSPIConfig->pSPIx->SR & (1 << 0);
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	689b      	ldr	r3, [r3, #8]
 8002474:	b2db      	uxtb	r3, r3
 8002476:	f003 0301 	and.w	r3, r3, #1
 800247a:	73fb      	strb	r3, [r7, #15]
	temp2 = pSPIConfig->pSPIx->CR2 & (1 << 6);
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	681b      	ldr	r3, [r3, #0]
 8002480:	685b      	ldr	r3, [r3, #4]
 8002482:	b2db      	uxtb	r3, r3
 8002484:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002488:	73bb      	strb	r3, [r7, #14]
	if (temp1 && temp2)
 800248a:	7bfb      	ldrb	r3, [r7, #15]
 800248c:	2b00      	cmp	r3, #0
 800248e:	d005      	beq.n	800249c <__LNH_SPI_IRQHanding+0x64>
 8002490:	7bbb      	ldrb	r3, [r7, #14]
 8002492:	2b00      	cmp	r3, #0
 8002494:	d002      	beq.n	800249c <__LNH_SPI_IRQHanding+0x64>
	{
		//Handle RXNE
		SPI_RXE_IT_HANDLE(pSPIConfig);
 8002496:	6878      	ldr	r0, [r7, #4]
 8002498:	f000 f85b 	bl	8002552 <SPI_RXE_IT_HANDLE>

	}
	// Third lets check for OVR Flag
	temp1 = pSPIConfig->pSPIx->SR & (1 << 6);
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	689b      	ldr	r3, [r3, #8]
 80024a2:	b2db      	uxtb	r3, r3
 80024a4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80024a8:	73fb      	strb	r3, [r7, #15]
	temp2 = pSPIConfig->pSPIx->CR2 & (1 << 5);
 80024aa:	687b      	ldr	r3, [r7, #4]
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	685b      	ldr	r3, [r3, #4]
 80024b0:	b2db      	uxtb	r3, r3
 80024b2:	f003 0320 	and.w	r3, r3, #32
 80024b6:	73bb      	strb	r3, [r7, #14]
	if (temp1 && temp2)
 80024b8:	7bfb      	ldrb	r3, [r7, #15]
 80024ba:	2b00      	cmp	r3, #0
 80024bc:	d005      	beq.n	80024ca <__LNH_SPI_IRQHanding+0x92>
 80024be:	7bbb      	ldrb	r3, [r7, #14]
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d002      	beq.n	80024ca <__LNH_SPI_IRQHanding+0x92>
	{
		//Handle OVR Error
		SPI_OVR_ERR_IT_HANDLE(pSPIConfig);
 80024c4:	6878      	ldr	r0, [r7, #4]
 80024c6:	f000 f886 	bl	80025d6 <SPI_OVR_ERR_IT_HANDLE>

	}

}
 80024ca:	bf00      	nop
 80024cc:	3710      	adds	r7, #16
 80024ce:	46bd      	mov	sp, r7
 80024d0:	bd80      	pop	{r7, pc}

080024d2 <SPI_TXE_IT_HANDLE>:



// Some helper function implementations
static void SPI_TXE_IT_HANDLE(SPI_Config_t* pSPIConfig)
{
 80024d2:	b580      	push	{r7, lr}
 80024d4:	b082      	sub	sp, #8
 80024d6:	af00      	add	r7, sp, #0
 80024d8:	6078      	str	r0, [r7, #4]
	// Check the DFF bit in CR1
			if (pSPIConfig->pSPIx->CR1 &(1<<11))
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	681b      	ldr	r3, [r3, #0]
 80024de:	681b      	ldr	r3, [r3, #0]
 80024e0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80024e4:	2b00      	cmp	r3, #0
 80024e6:	d015      	beq.n	8002514 <SPI_TXE_IT_HANDLE+0x42>
			{
				// 16 bit
				pSPIConfig ->pSPIx->DR = *((uint16_t*)pSPIConfig->pTxBuffer);
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	68db      	ldr	r3, [r3, #12]
 80024ec:	881a      	ldrh	r2, [r3, #0]
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	681b      	ldr	r3, [r3, #0]
 80024f2:	60da      	str	r2, [r3, #12]
				pSPIConfig->TxLen--;
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	695b      	ldr	r3, [r3, #20]
 80024f8:	1e5a      	subs	r2, r3, #1
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	615a      	str	r2, [r3, #20]
				pSPIConfig->TxLen--;
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	695b      	ldr	r3, [r3, #20]
 8002502:	1e5a      	subs	r2, r3, #1
 8002504:	687b      	ldr	r3, [r7, #4]
 8002506:	615a      	str	r2, [r3, #20]
				(uint16_t*)pSPIConfig->pTxBuffer ++;
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	68db      	ldr	r3, [r3, #12]
 800250c:	1c5a      	adds	r2, r3, #1
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	60da      	str	r2, [r3, #12]
 8002512:	e00f      	b.n	8002534 <SPI_TXE_IT_HANDLE+0x62>

			}
			else
			{
				// 8 bit
				pSPIConfig->pSPIx->DR = *pSPIConfig-> pTxBuffer;
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	68db      	ldr	r3, [r3, #12]
 8002518:	781a      	ldrb	r2, [r3, #0]
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	60da      	str	r2, [r3, #12]
				pSPIConfig->TxLen--;
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	695b      	ldr	r3, [r3, #20]
 8002524:	1e5a      	subs	r2, r3, #1
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	615a      	str	r2, [r3, #20]
				pSPIConfig->pTxBuffer++;
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	68db      	ldr	r3, [r3, #12]
 800252e:	1c5a      	adds	r2, r3, #1
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	60da      	str	r2, [r3, #12]
			}
			if(! pSPIConfig->TxLen)
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	695b      	ldr	r3, [r3, #20]
 8002538:	2b00      	cmp	r3, #0
 800253a:	d106      	bne.n	800254a <SPI_TXE_IT_HANDLE+0x78>
			{
				/*TxLen is zero, so close the SPI transmission and inform the application
				 * that Tx is over*/
				/*This prevent interrupt more than 2 interrupt*/
				SPI_CloseTransmisson(pSPIConfig);
 800253c:	6878      	ldr	r0, [r7, #4]
 800253e:	f000 f862 	bl	8002606 <SPI_CloseTransmisson>
				__LNH_ApplicationEventCallback(pSPIConfig,SPI_EVENT_TX_CMPLT);
 8002542:	2101      	movs	r1, #1
 8002544:	6878      	ldr	r0, [r7, #4]
 8002546:	f7fe f847 	bl	80005d8 <__LNH_ApplicationEventCallback>
			}
}
 800254a:	bf00      	nop
 800254c:	3708      	adds	r7, #8
 800254e:	46bd      	mov	sp, r7
 8002550:	bd80      	pop	{r7, pc}

08002552 <SPI_RXE_IT_HANDLE>:


static void SPI_RXE_IT_HANDLE(SPI_Config_t* pSPIConfig)
{
 8002552:	b580      	push	{r7, lr}
 8002554:	b082      	sub	sp, #8
 8002556:	af00      	add	r7, sp, #0
 8002558:	6078      	str	r0, [r7, #4]
	// Check the DFF bit in CR1
			if (pSPIConfig->pSPIx->CR1 &(1<<11))
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	681b      	ldr	r3, [r3, #0]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8002564:	2b00      	cmp	r3, #0
 8002566:	d016      	beq.n	8002596 <SPI_RXE_IT_HANDLE+0x44>
			{
				// 16 bit
				*((uint16_t*)pSPIConfig->pRxBuffer) = (uint16_t)pSPIConfig->pSPIx->DR;
 8002568:	687b      	ldr	r3, [r7, #4]
 800256a:	681b      	ldr	r3, [r3, #0]
 800256c:	68da      	ldr	r2, [r3, #12]
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	691b      	ldr	r3, [r3, #16]
 8002572:	b292      	uxth	r2, r2
 8002574:	801a      	strh	r2, [r3, #0]
				pSPIConfig->RxLen-=2;
 8002576:	687b      	ldr	r3, [r7, #4]
 8002578:	699b      	ldr	r3, [r3, #24]
 800257a:	1e9a      	subs	r2, r3, #2
 800257c:	687b      	ldr	r3, [r7, #4]
 800257e:	619a      	str	r2, [r3, #24]
				pSPIConfig->pRxBuffer--;
 8002580:	687b      	ldr	r3, [r7, #4]
 8002582:	691b      	ldr	r3, [r3, #16]
 8002584:	1e5a      	subs	r2, r3, #1
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	611a      	str	r2, [r3, #16]
				pSPIConfig->pRxBuffer--;
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	691b      	ldr	r3, [r3, #16]
 800258e:	1e5a      	subs	r2, r3, #1
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	611a      	str	r2, [r3, #16]
 8002594:	e010      	b.n	80025b8 <SPI_RXE_IT_HANDLE+0x66>

			}
			else
			{
				// 8 bit
				*(pSPIConfig->pRxBuffer) = (uint8_t)pSPIConfig->pSPIx->DR;
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	68da      	ldr	r2, [r3, #12]
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	691b      	ldr	r3, [r3, #16]
 80025a0:	b2d2      	uxtb	r2, r2
 80025a2:	701a      	strb	r2, [r3, #0]
				pSPIConfig->RxLen--;
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	699b      	ldr	r3, [r3, #24]
 80025a8:	1e5a      	subs	r2, r3, #1
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	619a      	str	r2, [r3, #24]
				pSPIConfig->pRxBuffer--;
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	691b      	ldr	r3, [r3, #16]
 80025b2:	1e5a      	subs	r2, r3, #1
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	611a      	str	r2, [r3, #16]
			}
			if(!pSPIConfig->RxLen)
 80025b8:	687b      	ldr	r3, [r7, #4]
 80025ba:	699b      	ldr	r3, [r3, #24]
 80025bc:	2b00      	cmp	r3, #0
 80025be:	d106      	bne.n	80025ce <SPI_RXE_IT_HANDLE+0x7c>
			{
				/*TxLen is zero, so close the SPI transmission and inform the application
				 * that Tx is over*/
				/*This prevent interrupt more than 2 interrupt*/
				SPI_CloseReception(pSPIConfig);
 80025c0:	6878      	ldr	r0, [r7, #4]
 80025c2:	f000 f83b 	bl	800263c <SPI_CloseReception>
				__LNH_ApplicationEventCallback(pSPIConfig,SPI_EVENT_RX_CMPLT);
 80025c6:	2102      	movs	r1, #2
 80025c8:	6878      	ldr	r0, [r7, #4]
 80025ca:	f7fe f805 	bl	80005d8 <__LNH_ApplicationEventCallback>
			}
}
 80025ce:	bf00      	nop
 80025d0:	3708      	adds	r7, #8
 80025d2:	46bd      	mov	sp, r7
 80025d4:	bd80      	pop	{r7, pc}

080025d6 <SPI_OVR_ERR_IT_HANDLE>:

static void SPI_OVR_ERR_IT_HANDLE(SPI_Config_t* pSPIConfig)
{
 80025d6:	b580      	push	{r7, lr}
 80025d8:	b084      	sub	sp, #16
 80025da:	af00      	add	r7, sp, #0
 80025dc:	6078      	str	r0, [r7, #4]

	uint8_t temp;
	//1. Clear the OVR Flag
	if (pSPIConfig->TxState != SPI_BUSY_IN_TX)
 80025de:	687b      	ldr	r3, [r7, #4]
 80025e0:	7f1b      	ldrb	r3, [r3, #28]
 80025e2:	2b02      	cmp	r3, #2
 80025e4:	d007      	beq.n	80025f6 <SPI_OVR_ERR_IT_HANDLE+0x20>
	{
		temp = pSPIConfig->pSPIx->DR;
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	68db      	ldr	r3, [r3, #12]
 80025ec:	73fb      	strb	r3, [r7, #15]
		temp = pSPIConfig->pSPIx->SR;
 80025ee:	687b      	ldr	r3, [r7, #4]
 80025f0:	681b      	ldr	r3, [r3, #0]
 80025f2:	689b      	ldr	r3, [r3, #8]
 80025f4:	73fb      	strb	r3, [r7, #15]
	}
	(void)temp;
	//2. Inform the application
	__LNH_ApplicationEventCallback(pSPIConfig,SPI_EVENT_OVR_ERR);
 80025f6:	2103      	movs	r1, #3
 80025f8:	6878      	ldr	r0, [r7, #4]
 80025fa:	f7fd ffed 	bl	80005d8 <__LNH_ApplicationEventCallback>



}
 80025fe:	bf00      	nop
 8002600:	3710      	adds	r7, #16
 8002602:	46bd      	mov	sp, r7
 8002604:	bd80      	pop	{r7, pc}

08002606 <SPI_CloseTransmisson>:

void SPI_CloseTransmisson(SPI_Config_t* pSPIConfig)
{
 8002606:	b480      	push	{r7}
 8002608:	b083      	sub	sp, #12
 800260a:	af00      	add	r7, sp, #0
 800260c:	6078      	str	r0, [r7, #4]
	pSPIConfig->pSPIx->CR2 &= ~(1<<7);
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	681b      	ldr	r3, [r3, #0]
 8002612:	685a      	ldr	r2, [r3, #4]
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 800261c:	605a      	str	r2, [r3, #4]
	pSPIConfig->pTxBuffer = NULL;
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	2200      	movs	r2, #0
 8002622:	60da      	str	r2, [r3, #12]
	pSPIConfig->TxLen = 0;
 8002624:	687b      	ldr	r3, [r7, #4]
 8002626:	2200      	movs	r2, #0
 8002628:	615a      	str	r2, [r3, #20]
	pSPIConfig->TxState = SPI_READY;
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	2200      	movs	r2, #0
 800262e:	771a      	strb	r2, [r3, #28]
}
 8002630:	bf00      	nop
 8002632:	370c      	adds	r7, #12
 8002634:	46bd      	mov	sp, r7
 8002636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800263a:	4770      	bx	lr

0800263c <SPI_CloseReception>:
void SPI_CloseReception(SPI_Config_t* pSPIConfig)
{
 800263c:	b480      	push	{r7}
 800263e:	b083      	sub	sp, #12
 8002640:	af00      	add	r7, sp, #0
 8002642:	6078      	str	r0, [r7, #4]
	pSPIConfig->pSPIx->CR2 &= ~(1<<6);
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	681b      	ldr	r3, [r3, #0]
 8002648:	685a      	ldr	r2, [r3, #4]
 800264a:	687b      	ldr	r3, [r7, #4]
 800264c:	681b      	ldr	r3, [r3, #0]
 800264e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8002652:	605a      	str	r2, [r3, #4]
	pSPIConfig->pRxBuffer = NULL;
 8002654:	687b      	ldr	r3, [r7, #4]
 8002656:	2200      	movs	r2, #0
 8002658:	611a      	str	r2, [r3, #16]
	pSPIConfig->RxLen = 0;
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	2200      	movs	r2, #0
 800265e:	619a      	str	r2, [r3, #24]
	pSPIConfig->RxState = SPI_READY;
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	2200      	movs	r2, #0
 8002664:	775a      	strb	r2, [r3, #29]
}
 8002666:	bf00      	nop
 8002668:	370c      	adds	r7, #12
 800266a:	46bd      	mov	sp, r7
 800266c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002670:	4770      	bx	lr
	...

08002674 <std>:
 8002674:	2300      	movs	r3, #0
 8002676:	b510      	push	{r4, lr}
 8002678:	4604      	mov	r4, r0
 800267a:	e9c0 3300 	strd	r3, r3, [r0]
 800267e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002682:	6083      	str	r3, [r0, #8]
 8002684:	8181      	strh	r1, [r0, #12]
 8002686:	6643      	str	r3, [r0, #100]	@ 0x64
 8002688:	81c2      	strh	r2, [r0, #14]
 800268a:	6183      	str	r3, [r0, #24]
 800268c:	4619      	mov	r1, r3
 800268e:	2208      	movs	r2, #8
 8002690:	305c      	adds	r0, #92	@ 0x5c
 8002692:	f000 f906 	bl	80028a2 <memset>
 8002696:	4b0d      	ldr	r3, [pc, #52]	@ (80026cc <std+0x58>)
 8002698:	6263      	str	r3, [r4, #36]	@ 0x24
 800269a:	4b0d      	ldr	r3, [pc, #52]	@ (80026d0 <std+0x5c>)
 800269c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800269e:	4b0d      	ldr	r3, [pc, #52]	@ (80026d4 <std+0x60>)
 80026a0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80026a2:	4b0d      	ldr	r3, [pc, #52]	@ (80026d8 <std+0x64>)
 80026a4:	6323      	str	r3, [r4, #48]	@ 0x30
 80026a6:	4b0d      	ldr	r3, [pc, #52]	@ (80026dc <std+0x68>)
 80026a8:	6224      	str	r4, [r4, #32]
 80026aa:	429c      	cmp	r4, r3
 80026ac:	d006      	beq.n	80026bc <std+0x48>
 80026ae:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80026b2:	4294      	cmp	r4, r2
 80026b4:	d002      	beq.n	80026bc <std+0x48>
 80026b6:	33d0      	adds	r3, #208	@ 0xd0
 80026b8:	429c      	cmp	r4, r3
 80026ba:	d105      	bne.n	80026c8 <std+0x54>
 80026bc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80026c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80026c4:	f000 b966 	b.w	8002994 <__retarget_lock_init_recursive>
 80026c8:	bd10      	pop	{r4, pc}
 80026ca:	bf00      	nop
 80026cc:	0800281d 	.word	0x0800281d
 80026d0:	0800283f 	.word	0x0800283f
 80026d4:	08002877 	.word	0x08002877
 80026d8:	0800289b 	.word	0x0800289b
 80026dc:	2000029c 	.word	0x2000029c

080026e0 <stdio_exit_handler>:
 80026e0:	4a02      	ldr	r2, [pc, #8]	@ (80026ec <stdio_exit_handler+0xc>)
 80026e2:	4903      	ldr	r1, [pc, #12]	@ (80026f0 <stdio_exit_handler+0x10>)
 80026e4:	4803      	ldr	r0, [pc, #12]	@ (80026f4 <stdio_exit_handler+0x14>)
 80026e6:	f000 b869 	b.w	80027bc <_fwalk_sglue>
 80026ea:	bf00      	nop
 80026ec:	20000004 	.word	0x20000004
 80026f0:	08003235 	.word	0x08003235
 80026f4:	20000014 	.word	0x20000014

080026f8 <cleanup_stdio>:
 80026f8:	6841      	ldr	r1, [r0, #4]
 80026fa:	4b0c      	ldr	r3, [pc, #48]	@ (800272c <cleanup_stdio+0x34>)
 80026fc:	4299      	cmp	r1, r3
 80026fe:	b510      	push	{r4, lr}
 8002700:	4604      	mov	r4, r0
 8002702:	d001      	beq.n	8002708 <cleanup_stdio+0x10>
 8002704:	f000 fd96 	bl	8003234 <_fflush_r>
 8002708:	68a1      	ldr	r1, [r4, #8]
 800270a:	4b09      	ldr	r3, [pc, #36]	@ (8002730 <cleanup_stdio+0x38>)
 800270c:	4299      	cmp	r1, r3
 800270e:	d002      	beq.n	8002716 <cleanup_stdio+0x1e>
 8002710:	4620      	mov	r0, r4
 8002712:	f000 fd8f 	bl	8003234 <_fflush_r>
 8002716:	68e1      	ldr	r1, [r4, #12]
 8002718:	4b06      	ldr	r3, [pc, #24]	@ (8002734 <cleanup_stdio+0x3c>)
 800271a:	4299      	cmp	r1, r3
 800271c:	d004      	beq.n	8002728 <cleanup_stdio+0x30>
 800271e:	4620      	mov	r0, r4
 8002720:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002724:	f000 bd86 	b.w	8003234 <_fflush_r>
 8002728:	bd10      	pop	{r4, pc}
 800272a:	bf00      	nop
 800272c:	2000029c 	.word	0x2000029c
 8002730:	20000304 	.word	0x20000304
 8002734:	2000036c 	.word	0x2000036c

08002738 <global_stdio_init.part.0>:
 8002738:	b510      	push	{r4, lr}
 800273a:	4b0b      	ldr	r3, [pc, #44]	@ (8002768 <global_stdio_init.part.0+0x30>)
 800273c:	4c0b      	ldr	r4, [pc, #44]	@ (800276c <global_stdio_init.part.0+0x34>)
 800273e:	4a0c      	ldr	r2, [pc, #48]	@ (8002770 <global_stdio_init.part.0+0x38>)
 8002740:	601a      	str	r2, [r3, #0]
 8002742:	4620      	mov	r0, r4
 8002744:	2200      	movs	r2, #0
 8002746:	2104      	movs	r1, #4
 8002748:	f7ff ff94 	bl	8002674 <std>
 800274c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002750:	2201      	movs	r2, #1
 8002752:	2109      	movs	r1, #9
 8002754:	f7ff ff8e 	bl	8002674 <std>
 8002758:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800275c:	2202      	movs	r2, #2
 800275e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002762:	2112      	movs	r1, #18
 8002764:	f7ff bf86 	b.w	8002674 <std>
 8002768:	200003d4 	.word	0x200003d4
 800276c:	2000029c 	.word	0x2000029c
 8002770:	080026e1 	.word	0x080026e1

08002774 <__sfp_lock_acquire>:
 8002774:	4801      	ldr	r0, [pc, #4]	@ (800277c <__sfp_lock_acquire+0x8>)
 8002776:	f000 b90e 	b.w	8002996 <__retarget_lock_acquire_recursive>
 800277a:	bf00      	nop
 800277c:	200003dd 	.word	0x200003dd

08002780 <__sfp_lock_release>:
 8002780:	4801      	ldr	r0, [pc, #4]	@ (8002788 <__sfp_lock_release+0x8>)
 8002782:	f000 b909 	b.w	8002998 <__retarget_lock_release_recursive>
 8002786:	bf00      	nop
 8002788:	200003dd 	.word	0x200003dd

0800278c <__sinit>:
 800278c:	b510      	push	{r4, lr}
 800278e:	4604      	mov	r4, r0
 8002790:	f7ff fff0 	bl	8002774 <__sfp_lock_acquire>
 8002794:	6a23      	ldr	r3, [r4, #32]
 8002796:	b11b      	cbz	r3, 80027a0 <__sinit+0x14>
 8002798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800279c:	f7ff bff0 	b.w	8002780 <__sfp_lock_release>
 80027a0:	4b04      	ldr	r3, [pc, #16]	@ (80027b4 <__sinit+0x28>)
 80027a2:	6223      	str	r3, [r4, #32]
 80027a4:	4b04      	ldr	r3, [pc, #16]	@ (80027b8 <__sinit+0x2c>)
 80027a6:	681b      	ldr	r3, [r3, #0]
 80027a8:	2b00      	cmp	r3, #0
 80027aa:	d1f5      	bne.n	8002798 <__sinit+0xc>
 80027ac:	f7ff ffc4 	bl	8002738 <global_stdio_init.part.0>
 80027b0:	e7f2      	b.n	8002798 <__sinit+0xc>
 80027b2:	bf00      	nop
 80027b4:	080026f9 	.word	0x080026f9
 80027b8:	200003d4 	.word	0x200003d4

080027bc <_fwalk_sglue>:
 80027bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80027c0:	4607      	mov	r7, r0
 80027c2:	4688      	mov	r8, r1
 80027c4:	4614      	mov	r4, r2
 80027c6:	2600      	movs	r6, #0
 80027c8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80027cc:	f1b9 0901 	subs.w	r9, r9, #1
 80027d0:	d505      	bpl.n	80027de <_fwalk_sglue+0x22>
 80027d2:	6824      	ldr	r4, [r4, #0]
 80027d4:	2c00      	cmp	r4, #0
 80027d6:	d1f7      	bne.n	80027c8 <_fwalk_sglue+0xc>
 80027d8:	4630      	mov	r0, r6
 80027da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80027de:	89ab      	ldrh	r3, [r5, #12]
 80027e0:	2b01      	cmp	r3, #1
 80027e2:	d907      	bls.n	80027f4 <_fwalk_sglue+0x38>
 80027e4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80027e8:	3301      	adds	r3, #1
 80027ea:	d003      	beq.n	80027f4 <_fwalk_sglue+0x38>
 80027ec:	4629      	mov	r1, r5
 80027ee:	4638      	mov	r0, r7
 80027f0:	47c0      	blx	r8
 80027f2:	4306      	orrs	r6, r0
 80027f4:	3568      	adds	r5, #104	@ 0x68
 80027f6:	e7e9      	b.n	80027cc <_fwalk_sglue+0x10>

080027f8 <iprintf>:
 80027f8:	b40f      	push	{r0, r1, r2, r3}
 80027fa:	b507      	push	{r0, r1, r2, lr}
 80027fc:	4906      	ldr	r1, [pc, #24]	@ (8002818 <iprintf+0x20>)
 80027fe:	ab04      	add	r3, sp, #16
 8002800:	6808      	ldr	r0, [r1, #0]
 8002802:	f853 2b04 	ldr.w	r2, [r3], #4
 8002806:	6881      	ldr	r1, [r0, #8]
 8002808:	9301      	str	r3, [sp, #4]
 800280a:	f000 f9e9 	bl	8002be0 <_vfiprintf_r>
 800280e:	b003      	add	sp, #12
 8002810:	f85d eb04 	ldr.w	lr, [sp], #4
 8002814:	b004      	add	sp, #16
 8002816:	4770      	bx	lr
 8002818:	20000010 	.word	0x20000010

0800281c <__sread>:
 800281c:	b510      	push	{r4, lr}
 800281e:	460c      	mov	r4, r1
 8002820:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002824:	f000 f868 	bl	80028f8 <_read_r>
 8002828:	2800      	cmp	r0, #0
 800282a:	bfab      	itete	ge
 800282c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800282e:	89a3      	ldrhlt	r3, [r4, #12]
 8002830:	181b      	addge	r3, r3, r0
 8002832:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002836:	bfac      	ite	ge
 8002838:	6563      	strge	r3, [r4, #84]	@ 0x54
 800283a:	81a3      	strhlt	r3, [r4, #12]
 800283c:	bd10      	pop	{r4, pc}

0800283e <__swrite>:
 800283e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002842:	461f      	mov	r7, r3
 8002844:	898b      	ldrh	r3, [r1, #12]
 8002846:	05db      	lsls	r3, r3, #23
 8002848:	4605      	mov	r5, r0
 800284a:	460c      	mov	r4, r1
 800284c:	4616      	mov	r6, r2
 800284e:	d505      	bpl.n	800285c <__swrite+0x1e>
 8002850:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002854:	2302      	movs	r3, #2
 8002856:	2200      	movs	r2, #0
 8002858:	f000 f83c 	bl	80028d4 <_lseek_r>
 800285c:	89a3      	ldrh	r3, [r4, #12]
 800285e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002862:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002866:	81a3      	strh	r3, [r4, #12]
 8002868:	4632      	mov	r2, r6
 800286a:	463b      	mov	r3, r7
 800286c:	4628      	mov	r0, r5
 800286e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002872:	f000 b853 	b.w	800291c <_write_r>

08002876 <__sseek>:
 8002876:	b510      	push	{r4, lr}
 8002878:	460c      	mov	r4, r1
 800287a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800287e:	f000 f829 	bl	80028d4 <_lseek_r>
 8002882:	1c43      	adds	r3, r0, #1
 8002884:	89a3      	ldrh	r3, [r4, #12]
 8002886:	bf15      	itete	ne
 8002888:	6560      	strne	r0, [r4, #84]	@ 0x54
 800288a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800288e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002892:	81a3      	strheq	r3, [r4, #12]
 8002894:	bf18      	it	ne
 8002896:	81a3      	strhne	r3, [r4, #12]
 8002898:	bd10      	pop	{r4, pc}

0800289a <__sclose>:
 800289a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800289e:	f000 b809 	b.w	80028b4 <_close_r>

080028a2 <memset>:
 80028a2:	4402      	add	r2, r0
 80028a4:	4603      	mov	r3, r0
 80028a6:	4293      	cmp	r3, r2
 80028a8:	d100      	bne.n	80028ac <memset+0xa>
 80028aa:	4770      	bx	lr
 80028ac:	f803 1b01 	strb.w	r1, [r3], #1
 80028b0:	e7f9      	b.n	80028a6 <memset+0x4>
	...

080028b4 <_close_r>:
 80028b4:	b538      	push	{r3, r4, r5, lr}
 80028b6:	4d06      	ldr	r5, [pc, #24]	@ (80028d0 <_close_r+0x1c>)
 80028b8:	2300      	movs	r3, #0
 80028ba:	4604      	mov	r4, r0
 80028bc:	4608      	mov	r0, r1
 80028be:	602b      	str	r3, [r5, #0]
 80028c0:	f7fd ff07 	bl	80006d2 <_close>
 80028c4:	1c43      	adds	r3, r0, #1
 80028c6:	d102      	bne.n	80028ce <_close_r+0x1a>
 80028c8:	682b      	ldr	r3, [r5, #0]
 80028ca:	b103      	cbz	r3, 80028ce <_close_r+0x1a>
 80028cc:	6023      	str	r3, [r4, #0]
 80028ce:	bd38      	pop	{r3, r4, r5, pc}
 80028d0:	200003d8 	.word	0x200003d8

080028d4 <_lseek_r>:
 80028d4:	b538      	push	{r3, r4, r5, lr}
 80028d6:	4d07      	ldr	r5, [pc, #28]	@ (80028f4 <_lseek_r+0x20>)
 80028d8:	4604      	mov	r4, r0
 80028da:	4608      	mov	r0, r1
 80028dc:	4611      	mov	r1, r2
 80028de:	2200      	movs	r2, #0
 80028e0:	602a      	str	r2, [r5, #0]
 80028e2:	461a      	mov	r2, r3
 80028e4:	f7fd ff1c 	bl	8000720 <_lseek>
 80028e8:	1c43      	adds	r3, r0, #1
 80028ea:	d102      	bne.n	80028f2 <_lseek_r+0x1e>
 80028ec:	682b      	ldr	r3, [r5, #0]
 80028ee:	b103      	cbz	r3, 80028f2 <_lseek_r+0x1e>
 80028f0:	6023      	str	r3, [r4, #0]
 80028f2:	bd38      	pop	{r3, r4, r5, pc}
 80028f4:	200003d8 	.word	0x200003d8

080028f8 <_read_r>:
 80028f8:	b538      	push	{r3, r4, r5, lr}
 80028fa:	4d07      	ldr	r5, [pc, #28]	@ (8002918 <_read_r+0x20>)
 80028fc:	4604      	mov	r4, r0
 80028fe:	4608      	mov	r0, r1
 8002900:	4611      	mov	r1, r2
 8002902:	2200      	movs	r2, #0
 8002904:	602a      	str	r2, [r5, #0]
 8002906:	461a      	mov	r2, r3
 8002908:	f7fd feaa 	bl	8000660 <_read>
 800290c:	1c43      	adds	r3, r0, #1
 800290e:	d102      	bne.n	8002916 <_read_r+0x1e>
 8002910:	682b      	ldr	r3, [r5, #0]
 8002912:	b103      	cbz	r3, 8002916 <_read_r+0x1e>
 8002914:	6023      	str	r3, [r4, #0]
 8002916:	bd38      	pop	{r3, r4, r5, pc}
 8002918:	200003d8 	.word	0x200003d8

0800291c <_write_r>:
 800291c:	b538      	push	{r3, r4, r5, lr}
 800291e:	4d07      	ldr	r5, [pc, #28]	@ (800293c <_write_r+0x20>)
 8002920:	4604      	mov	r4, r0
 8002922:	4608      	mov	r0, r1
 8002924:	4611      	mov	r1, r2
 8002926:	2200      	movs	r2, #0
 8002928:	602a      	str	r2, [r5, #0]
 800292a:	461a      	mov	r2, r3
 800292c:	f7fd feb5 	bl	800069a <_write>
 8002930:	1c43      	adds	r3, r0, #1
 8002932:	d102      	bne.n	800293a <_write_r+0x1e>
 8002934:	682b      	ldr	r3, [r5, #0]
 8002936:	b103      	cbz	r3, 800293a <_write_r+0x1e>
 8002938:	6023      	str	r3, [r4, #0]
 800293a:	bd38      	pop	{r3, r4, r5, pc}
 800293c:	200003d8 	.word	0x200003d8

08002940 <__errno>:
 8002940:	4b01      	ldr	r3, [pc, #4]	@ (8002948 <__errno+0x8>)
 8002942:	6818      	ldr	r0, [r3, #0]
 8002944:	4770      	bx	lr
 8002946:	bf00      	nop
 8002948:	20000010 	.word	0x20000010

0800294c <__libc_init_array>:
 800294c:	b570      	push	{r4, r5, r6, lr}
 800294e:	4d0d      	ldr	r5, [pc, #52]	@ (8002984 <__libc_init_array+0x38>)
 8002950:	4c0d      	ldr	r4, [pc, #52]	@ (8002988 <__libc_init_array+0x3c>)
 8002952:	1b64      	subs	r4, r4, r5
 8002954:	10a4      	asrs	r4, r4, #2
 8002956:	2600      	movs	r6, #0
 8002958:	42a6      	cmp	r6, r4
 800295a:	d109      	bne.n	8002970 <__libc_init_array+0x24>
 800295c:	4d0b      	ldr	r5, [pc, #44]	@ (800298c <__libc_init_array+0x40>)
 800295e:	4c0c      	ldr	r4, [pc, #48]	@ (8002990 <__libc_init_array+0x44>)
 8002960:	f000 fdb8 	bl	80034d4 <_init>
 8002964:	1b64      	subs	r4, r4, r5
 8002966:	10a4      	asrs	r4, r4, #2
 8002968:	2600      	movs	r6, #0
 800296a:	42a6      	cmp	r6, r4
 800296c:	d105      	bne.n	800297a <__libc_init_array+0x2e>
 800296e:	bd70      	pop	{r4, r5, r6, pc}
 8002970:	f855 3b04 	ldr.w	r3, [r5], #4
 8002974:	4798      	blx	r3
 8002976:	3601      	adds	r6, #1
 8002978:	e7ee      	b.n	8002958 <__libc_init_array+0xc>
 800297a:	f855 3b04 	ldr.w	r3, [r5], #4
 800297e:	4798      	blx	r3
 8002980:	3601      	adds	r6, #1
 8002982:	e7f2      	b.n	800296a <__libc_init_array+0x1e>
 8002984:	08003538 	.word	0x08003538
 8002988:	08003538 	.word	0x08003538
 800298c:	08003538 	.word	0x08003538
 8002990:	0800353c 	.word	0x0800353c

08002994 <__retarget_lock_init_recursive>:
 8002994:	4770      	bx	lr

08002996 <__retarget_lock_acquire_recursive>:
 8002996:	4770      	bx	lr

08002998 <__retarget_lock_release_recursive>:
 8002998:	4770      	bx	lr
	...

0800299c <_free_r>:
 800299c:	b538      	push	{r3, r4, r5, lr}
 800299e:	4605      	mov	r5, r0
 80029a0:	2900      	cmp	r1, #0
 80029a2:	d041      	beq.n	8002a28 <_free_r+0x8c>
 80029a4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80029a8:	1f0c      	subs	r4, r1, #4
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	bfb8      	it	lt
 80029ae:	18e4      	addlt	r4, r4, r3
 80029b0:	f000 f8e0 	bl	8002b74 <__malloc_lock>
 80029b4:	4a1d      	ldr	r2, [pc, #116]	@ (8002a2c <_free_r+0x90>)
 80029b6:	6813      	ldr	r3, [r2, #0]
 80029b8:	b933      	cbnz	r3, 80029c8 <_free_r+0x2c>
 80029ba:	6063      	str	r3, [r4, #4]
 80029bc:	6014      	str	r4, [r2, #0]
 80029be:	4628      	mov	r0, r5
 80029c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80029c4:	f000 b8dc 	b.w	8002b80 <__malloc_unlock>
 80029c8:	42a3      	cmp	r3, r4
 80029ca:	d908      	bls.n	80029de <_free_r+0x42>
 80029cc:	6820      	ldr	r0, [r4, #0]
 80029ce:	1821      	adds	r1, r4, r0
 80029d0:	428b      	cmp	r3, r1
 80029d2:	bf01      	itttt	eq
 80029d4:	6819      	ldreq	r1, [r3, #0]
 80029d6:	685b      	ldreq	r3, [r3, #4]
 80029d8:	1809      	addeq	r1, r1, r0
 80029da:	6021      	streq	r1, [r4, #0]
 80029dc:	e7ed      	b.n	80029ba <_free_r+0x1e>
 80029de:	461a      	mov	r2, r3
 80029e0:	685b      	ldr	r3, [r3, #4]
 80029e2:	b10b      	cbz	r3, 80029e8 <_free_r+0x4c>
 80029e4:	42a3      	cmp	r3, r4
 80029e6:	d9fa      	bls.n	80029de <_free_r+0x42>
 80029e8:	6811      	ldr	r1, [r2, #0]
 80029ea:	1850      	adds	r0, r2, r1
 80029ec:	42a0      	cmp	r0, r4
 80029ee:	d10b      	bne.n	8002a08 <_free_r+0x6c>
 80029f0:	6820      	ldr	r0, [r4, #0]
 80029f2:	4401      	add	r1, r0
 80029f4:	1850      	adds	r0, r2, r1
 80029f6:	4283      	cmp	r3, r0
 80029f8:	6011      	str	r1, [r2, #0]
 80029fa:	d1e0      	bne.n	80029be <_free_r+0x22>
 80029fc:	6818      	ldr	r0, [r3, #0]
 80029fe:	685b      	ldr	r3, [r3, #4]
 8002a00:	6053      	str	r3, [r2, #4]
 8002a02:	4408      	add	r0, r1
 8002a04:	6010      	str	r0, [r2, #0]
 8002a06:	e7da      	b.n	80029be <_free_r+0x22>
 8002a08:	d902      	bls.n	8002a10 <_free_r+0x74>
 8002a0a:	230c      	movs	r3, #12
 8002a0c:	602b      	str	r3, [r5, #0]
 8002a0e:	e7d6      	b.n	80029be <_free_r+0x22>
 8002a10:	6820      	ldr	r0, [r4, #0]
 8002a12:	1821      	adds	r1, r4, r0
 8002a14:	428b      	cmp	r3, r1
 8002a16:	bf04      	itt	eq
 8002a18:	6819      	ldreq	r1, [r3, #0]
 8002a1a:	685b      	ldreq	r3, [r3, #4]
 8002a1c:	6063      	str	r3, [r4, #4]
 8002a1e:	bf04      	itt	eq
 8002a20:	1809      	addeq	r1, r1, r0
 8002a22:	6021      	streq	r1, [r4, #0]
 8002a24:	6054      	str	r4, [r2, #4]
 8002a26:	e7ca      	b.n	80029be <_free_r+0x22>
 8002a28:	bd38      	pop	{r3, r4, r5, pc}
 8002a2a:	bf00      	nop
 8002a2c:	200003e4 	.word	0x200003e4

08002a30 <sbrk_aligned>:
 8002a30:	b570      	push	{r4, r5, r6, lr}
 8002a32:	4e0f      	ldr	r6, [pc, #60]	@ (8002a70 <sbrk_aligned+0x40>)
 8002a34:	460c      	mov	r4, r1
 8002a36:	6831      	ldr	r1, [r6, #0]
 8002a38:	4605      	mov	r5, r0
 8002a3a:	b911      	cbnz	r1, 8002a42 <sbrk_aligned+0x12>
 8002a3c:	f000 fcb6 	bl	80033ac <_sbrk_r>
 8002a40:	6030      	str	r0, [r6, #0]
 8002a42:	4621      	mov	r1, r4
 8002a44:	4628      	mov	r0, r5
 8002a46:	f000 fcb1 	bl	80033ac <_sbrk_r>
 8002a4a:	1c43      	adds	r3, r0, #1
 8002a4c:	d103      	bne.n	8002a56 <sbrk_aligned+0x26>
 8002a4e:	f04f 34ff 	mov.w	r4, #4294967295
 8002a52:	4620      	mov	r0, r4
 8002a54:	bd70      	pop	{r4, r5, r6, pc}
 8002a56:	1cc4      	adds	r4, r0, #3
 8002a58:	f024 0403 	bic.w	r4, r4, #3
 8002a5c:	42a0      	cmp	r0, r4
 8002a5e:	d0f8      	beq.n	8002a52 <sbrk_aligned+0x22>
 8002a60:	1a21      	subs	r1, r4, r0
 8002a62:	4628      	mov	r0, r5
 8002a64:	f000 fca2 	bl	80033ac <_sbrk_r>
 8002a68:	3001      	adds	r0, #1
 8002a6a:	d1f2      	bne.n	8002a52 <sbrk_aligned+0x22>
 8002a6c:	e7ef      	b.n	8002a4e <sbrk_aligned+0x1e>
 8002a6e:	bf00      	nop
 8002a70:	200003e0 	.word	0x200003e0

08002a74 <_malloc_r>:
 8002a74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002a78:	1ccd      	adds	r5, r1, #3
 8002a7a:	f025 0503 	bic.w	r5, r5, #3
 8002a7e:	3508      	adds	r5, #8
 8002a80:	2d0c      	cmp	r5, #12
 8002a82:	bf38      	it	cc
 8002a84:	250c      	movcc	r5, #12
 8002a86:	2d00      	cmp	r5, #0
 8002a88:	4606      	mov	r6, r0
 8002a8a:	db01      	blt.n	8002a90 <_malloc_r+0x1c>
 8002a8c:	42a9      	cmp	r1, r5
 8002a8e:	d904      	bls.n	8002a9a <_malloc_r+0x26>
 8002a90:	230c      	movs	r3, #12
 8002a92:	6033      	str	r3, [r6, #0]
 8002a94:	2000      	movs	r0, #0
 8002a96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002a9a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8002b70 <_malloc_r+0xfc>
 8002a9e:	f000 f869 	bl	8002b74 <__malloc_lock>
 8002aa2:	f8d8 3000 	ldr.w	r3, [r8]
 8002aa6:	461c      	mov	r4, r3
 8002aa8:	bb44      	cbnz	r4, 8002afc <_malloc_r+0x88>
 8002aaa:	4629      	mov	r1, r5
 8002aac:	4630      	mov	r0, r6
 8002aae:	f7ff ffbf 	bl	8002a30 <sbrk_aligned>
 8002ab2:	1c43      	adds	r3, r0, #1
 8002ab4:	4604      	mov	r4, r0
 8002ab6:	d158      	bne.n	8002b6a <_malloc_r+0xf6>
 8002ab8:	f8d8 4000 	ldr.w	r4, [r8]
 8002abc:	4627      	mov	r7, r4
 8002abe:	2f00      	cmp	r7, #0
 8002ac0:	d143      	bne.n	8002b4a <_malloc_r+0xd6>
 8002ac2:	2c00      	cmp	r4, #0
 8002ac4:	d04b      	beq.n	8002b5e <_malloc_r+0xea>
 8002ac6:	6823      	ldr	r3, [r4, #0]
 8002ac8:	4639      	mov	r1, r7
 8002aca:	4630      	mov	r0, r6
 8002acc:	eb04 0903 	add.w	r9, r4, r3
 8002ad0:	f000 fc6c 	bl	80033ac <_sbrk_r>
 8002ad4:	4581      	cmp	r9, r0
 8002ad6:	d142      	bne.n	8002b5e <_malloc_r+0xea>
 8002ad8:	6821      	ldr	r1, [r4, #0]
 8002ada:	1a6d      	subs	r5, r5, r1
 8002adc:	4629      	mov	r1, r5
 8002ade:	4630      	mov	r0, r6
 8002ae0:	f7ff ffa6 	bl	8002a30 <sbrk_aligned>
 8002ae4:	3001      	adds	r0, #1
 8002ae6:	d03a      	beq.n	8002b5e <_malloc_r+0xea>
 8002ae8:	6823      	ldr	r3, [r4, #0]
 8002aea:	442b      	add	r3, r5
 8002aec:	6023      	str	r3, [r4, #0]
 8002aee:	f8d8 3000 	ldr.w	r3, [r8]
 8002af2:	685a      	ldr	r2, [r3, #4]
 8002af4:	bb62      	cbnz	r2, 8002b50 <_malloc_r+0xdc>
 8002af6:	f8c8 7000 	str.w	r7, [r8]
 8002afa:	e00f      	b.n	8002b1c <_malloc_r+0xa8>
 8002afc:	6822      	ldr	r2, [r4, #0]
 8002afe:	1b52      	subs	r2, r2, r5
 8002b00:	d420      	bmi.n	8002b44 <_malloc_r+0xd0>
 8002b02:	2a0b      	cmp	r2, #11
 8002b04:	d917      	bls.n	8002b36 <_malloc_r+0xc2>
 8002b06:	1961      	adds	r1, r4, r5
 8002b08:	42a3      	cmp	r3, r4
 8002b0a:	6025      	str	r5, [r4, #0]
 8002b0c:	bf18      	it	ne
 8002b0e:	6059      	strne	r1, [r3, #4]
 8002b10:	6863      	ldr	r3, [r4, #4]
 8002b12:	bf08      	it	eq
 8002b14:	f8c8 1000 	streq.w	r1, [r8]
 8002b18:	5162      	str	r2, [r4, r5]
 8002b1a:	604b      	str	r3, [r1, #4]
 8002b1c:	4630      	mov	r0, r6
 8002b1e:	f000 f82f 	bl	8002b80 <__malloc_unlock>
 8002b22:	f104 000b 	add.w	r0, r4, #11
 8002b26:	1d23      	adds	r3, r4, #4
 8002b28:	f020 0007 	bic.w	r0, r0, #7
 8002b2c:	1ac2      	subs	r2, r0, r3
 8002b2e:	bf1c      	itt	ne
 8002b30:	1a1b      	subne	r3, r3, r0
 8002b32:	50a3      	strne	r3, [r4, r2]
 8002b34:	e7af      	b.n	8002a96 <_malloc_r+0x22>
 8002b36:	6862      	ldr	r2, [r4, #4]
 8002b38:	42a3      	cmp	r3, r4
 8002b3a:	bf0c      	ite	eq
 8002b3c:	f8c8 2000 	streq.w	r2, [r8]
 8002b40:	605a      	strne	r2, [r3, #4]
 8002b42:	e7eb      	b.n	8002b1c <_malloc_r+0xa8>
 8002b44:	4623      	mov	r3, r4
 8002b46:	6864      	ldr	r4, [r4, #4]
 8002b48:	e7ae      	b.n	8002aa8 <_malloc_r+0x34>
 8002b4a:	463c      	mov	r4, r7
 8002b4c:	687f      	ldr	r7, [r7, #4]
 8002b4e:	e7b6      	b.n	8002abe <_malloc_r+0x4a>
 8002b50:	461a      	mov	r2, r3
 8002b52:	685b      	ldr	r3, [r3, #4]
 8002b54:	42a3      	cmp	r3, r4
 8002b56:	d1fb      	bne.n	8002b50 <_malloc_r+0xdc>
 8002b58:	2300      	movs	r3, #0
 8002b5a:	6053      	str	r3, [r2, #4]
 8002b5c:	e7de      	b.n	8002b1c <_malloc_r+0xa8>
 8002b5e:	230c      	movs	r3, #12
 8002b60:	6033      	str	r3, [r6, #0]
 8002b62:	4630      	mov	r0, r6
 8002b64:	f000 f80c 	bl	8002b80 <__malloc_unlock>
 8002b68:	e794      	b.n	8002a94 <_malloc_r+0x20>
 8002b6a:	6005      	str	r5, [r0, #0]
 8002b6c:	e7d6      	b.n	8002b1c <_malloc_r+0xa8>
 8002b6e:	bf00      	nop
 8002b70:	200003e4 	.word	0x200003e4

08002b74 <__malloc_lock>:
 8002b74:	4801      	ldr	r0, [pc, #4]	@ (8002b7c <__malloc_lock+0x8>)
 8002b76:	f7ff bf0e 	b.w	8002996 <__retarget_lock_acquire_recursive>
 8002b7a:	bf00      	nop
 8002b7c:	200003dc 	.word	0x200003dc

08002b80 <__malloc_unlock>:
 8002b80:	4801      	ldr	r0, [pc, #4]	@ (8002b88 <__malloc_unlock+0x8>)
 8002b82:	f7ff bf09 	b.w	8002998 <__retarget_lock_release_recursive>
 8002b86:	bf00      	nop
 8002b88:	200003dc 	.word	0x200003dc

08002b8c <__sfputc_r>:
 8002b8c:	6893      	ldr	r3, [r2, #8]
 8002b8e:	3b01      	subs	r3, #1
 8002b90:	2b00      	cmp	r3, #0
 8002b92:	b410      	push	{r4}
 8002b94:	6093      	str	r3, [r2, #8]
 8002b96:	da08      	bge.n	8002baa <__sfputc_r+0x1e>
 8002b98:	6994      	ldr	r4, [r2, #24]
 8002b9a:	42a3      	cmp	r3, r4
 8002b9c:	db01      	blt.n	8002ba2 <__sfputc_r+0x16>
 8002b9e:	290a      	cmp	r1, #10
 8002ba0:	d103      	bne.n	8002baa <__sfputc_r+0x1e>
 8002ba2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002ba6:	f000 bb6d 	b.w	8003284 <__swbuf_r>
 8002baa:	6813      	ldr	r3, [r2, #0]
 8002bac:	1c58      	adds	r0, r3, #1
 8002bae:	6010      	str	r0, [r2, #0]
 8002bb0:	7019      	strb	r1, [r3, #0]
 8002bb2:	4608      	mov	r0, r1
 8002bb4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002bb8:	4770      	bx	lr

08002bba <__sfputs_r>:
 8002bba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bbc:	4606      	mov	r6, r0
 8002bbe:	460f      	mov	r7, r1
 8002bc0:	4614      	mov	r4, r2
 8002bc2:	18d5      	adds	r5, r2, r3
 8002bc4:	42ac      	cmp	r4, r5
 8002bc6:	d101      	bne.n	8002bcc <__sfputs_r+0x12>
 8002bc8:	2000      	movs	r0, #0
 8002bca:	e007      	b.n	8002bdc <__sfputs_r+0x22>
 8002bcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002bd0:	463a      	mov	r2, r7
 8002bd2:	4630      	mov	r0, r6
 8002bd4:	f7ff ffda 	bl	8002b8c <__sfputc_r>
 8002bd8:	1c43      	adds	r3, r0, #1
 8002bda:	d1f3      	bne.n	8002bc4 <__sfputs_r+0xa>
 8002bdc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08002be0 <_vfiprintf_r>:
 8002be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002be4:	460d      	mov	r5, r1
 8002be6:	b09d      	sub	sp, #116	@ 0x74
 8002be8:	4614      	mov	r4, r2
 8002bea:	4698      	mov	r8, r3
 8002bec:	4606      	mov	r6, r0
 8002bee:	b118      	cbz	r0, 8002bf8 <_vfiprintf_r+0x18>
 8002bf0:	6a03      	ldr	r3, [r0, #32]
 8002bf2:	b90b      	cbnz	r3, 8002bf8 <_vfiprintf_r+0x18>
 8002bf4:	f7ff fdca 	bl	800278c <__sinit>
 8002bf8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8002bfa:	07d9      	lsls	r1, r3, #31
 8002bfc:	d405      	bmi.n	8002c0a <_vfiprintf_r+0x2a>
 8002bfe:	89ab      	ldrh	r3, [r5, #12]
 8002c00:	059a      	lsls	r2, r3, #22
 8002c02:	d402      	bmi.n	8002c0a <_vfiprintf_r+0x2a>
 8002c04:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8002c06:	f7ff fec6 	bl	8002996 <__retarget_lock_acquire_recursive>
 8002c0a:	89ab      	ldrh	r3, [r5, #12]
 8002c0c:	071b      	lsls	r3, r3, #28
 8002c0e:	d501      	bpl.n	8002c14 <_vfiprintf_r+0x34>
 8002c10:	692b      	ldr	r3, [r5, #16]
 8002c12:	b99b      	cbnz	r3, 8002c3c <_vfiprintf_r+0x5c>
 8002c14:	4629      	mov	r1, r5
 8002c16:	4630      	mov	r0, r6
 8002c18:	f000 fb72 	bl	8003300 <__swsetup_r>
 8002c1c:	b170      	cbz	r0, 8002c3c <_vfiprintf_r+0x5c>
 8002c1e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8002c20:	07dc      	lsls	r4, r3, #31
 8002c22:	d504      	bpl.n	8002c2e <_vfiprintf_r+0x4e>
 8002c24:	f04f 30ff 	mov.w	r0, #4294967295
 8002c28:	b01d      	add	sp, #116	@ 0x74
 8002c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c2e:	89ab      	ldrh	r3, [r5, #12]
 8002c30:	0598      	lsls	r0, r3, #22
 8002c32:	d4f7      	bmi.n	8002c24 <_vfiprintf_r+0x44>
 8002c34:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8002c36:	f7ff feaf 	bl	8002998 <__retarget_lock_release_recursive>
 8002c3a:	e7f3      	b.n	8002c24 <_vfiprintf_r+0x44>
 8002c3c:	2300      	movs	r3, #0
 8002c3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8002c40:	2320      	movs	r3, #32
 8002c42:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8002c46:	f8cd 800c 	str.w	r8, [sp, #12]
 8002c4a:	2330      	movs	r3, #48	@ 0x30
 8002c4c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8002dfc <_vfiprintf_r+0x21c>
 8002c50:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8002c54:	f04f 0901 	mov.w	r9, #1
 8002c58:	4623      	mov	r3, r4
 8002c5a:	469a      	mov	sl, r3
 8002c5c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002c60:	b10a      	cbz	r2, 8002c66 <_vfiprintf_r+0x86>
 8002c62:	2a25      	cmp	r2, #37	@ 0x25
 8002c64:	d1f9      	bne.n	8002c5a <_vfiprintf_r+0x7a>
 8002c66:	ebba 0b04 	subs.w	fp, sl, r4
 8002c6a:	d00b      	beq.n	8002c84 <_vfiprintf_r+0xa4>
 8002c6c:	465b      	mov	r3, fp
 8002c6e:	4622      	mov	r2, r4
 8002c70:	4629      	mov	r1, r5
 8002c72:	4630      	mov	r0, r6
 8002c74:	f7ff ffa1 	bl	8002bba <__sfputs_r>
 8002c78:	3001      	adds	r0, #1
 8002c7a:	f000 80a7 	beq.w	8002dcc <_vfiprintf_r+0x1ec>
 8002c7e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002c80:	445a      	add	r2, fp
 8002c82:	9209      	str	r2, [sp, #36]	@ 0x24
 8002c84:	f89a 3000 	ldrb.w	r3, [sl]
 8002c88:	2b00      	cmp	r3, #0
 8002c8a:	f000 809f 	beq.w	8002dcc <_vfiprintf_r+0x1ec>
 8002c8e:	2300      	movs	r3, #0
 8002c90:	f04f 32ff 	mov.w	r2, #4294967295
 8002c94:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002c98:	f10a 0a01 	add.w	sl, sl, #1
 8002c9c:	9304      	str	r3, [sp, #16]
 8002c9e:	9307      	str	r3, [sp, #28]
 8002ca0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8002ca4:	931a      	str	r3, [sp, #104]	@ 0x68
 8002ca6:	4654      	mov	r4, sl
 8002ca8:	2205      	movs	r2, #5
 8002caa:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002cae:	4853      	ldr	r0, [pc, #332]	@ (8002dfc <_vfiprintf_r+0x21c>)
 8002cb0:	f7fd fa9e 	bl	80001f0 <memchr>
 8002cb4:	9a04      	ldr	r2, [sp, #16]
 8002cb6:	b9d8      	cbnz	r0, 8002cf0 <_vfiprintf_r+0x110>
 8002cb8:	06d1      	lsls	r1, r2, #27
 8002cba:	bf44      	itt	mi
 8002cbc:	2320      	movmi	r3, #32
 8002cbe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8002cc2:	0713      	lsls	r3, r2, #28
 8002cc4:	bf44      	itt	mi
 8002cc6:	232b      	movmi	r3, #43	@ 0x2b
 8002cc8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8002ccc:	f89a 3000 	ldrb.w	r3, [sl]
 8002cd0:	2b2a      	cmp	r3, #42	@ 0x2a
 8002cd2:	d015      	beq.n	8002d00 <_vfiprintf_r+0x120>
 8002cd4:	9a07      	ldr	r2, [sp, #28]
 8002cd6:	4654      	mov	r4, sl
 8002cd8:	2000      	movs	r0, #0
 8002cda:	f04f 0c0a 	mov.w	ip, #10
 8002cde:	4621      	mov	r1, r4
 8002ce0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002ce4:	3b30      	subs	r3, #48	@ 0x30
 8002ce6:	2b09      	cmp	r3, #9
 8002ce8:	d94b      	bls.n	8002d82 <_vfiprintf_r+0x1a2>
 8002cea:	b1b0      	cbz	r0, 8002d1a <_vfiprintf_r+0x13a>
 8002cec:	9207      	str	r2, [sp, #28]
 8002cee:	e014      	b.n	8002d1a <_vfiprintf_r+0x13a>
 8002cf0:	eba0 0308 	sub.w	r3, r0, r8
 8002cf4:	fa09 f303 	lsl.w	r3, r9, r3
 8002cf8:	4313      	orrs	r3, r2
 8002cfa:	9304      	str	r3, [sp, #16]
 8002cfc:	46a2      	mov	sl, r4
 8002cfe:	e7d2      	b.n	8002ca6 <_vfiprintf_r+0xc6>
 8002d00:	9b03      	ldr	r3, [sp, #12]
 8002d02:	1d19      	adds	r1, r3, #4
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	9103      	str	r1, [sp, #12]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	bfbb      	ittet	lt
 8002d0c:	425b      	neglt	r3, r3
 8002d0e:	f042 0202 	orrlt.w	r2, r2, #2
 8002d12:	9307      	strge	r3, [sp, #28]
 8002d14:	9307      	strlt	r3, [sp, #28]
 8002d16:	bfb8      	it	lt
 8002d18:	9204      	strlt	r2, [sp, #16]
 8002d1a:	7823      	ldrb	r3, [r4, #0]
 8002d1c:	2b2e      	cmp	r3, #46	@ 0x2e
 8002d1e:	d10a      	bne.n	8002d36 <_vfiprintf_r+0x156>
 8002d20:	7863      	ldrb	r3, [r4, #1]
 8002d22:	2b2a      	cmp	r3, #42	@ 0x2a
 8002d24:	d132      	bne.n	8002d8c <_vfiprintf_r+0x1ac>
 8002d26:	9b03      	ldr	r3, [sp, #12]
 8002d28:	1d1a      	adds	r2, r3, #4
 8002d2a:	681b      	ldr	r3, [r3, #0]
 8002d2c:	9203      	str	r2, [sp, #12]
 8002d2e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8002d32:	3402      	adds	r4, #2
 8002d34:	9305      	str	r3, [sp, #20]
 8002d36:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8002e0c <_vfiprintf_r+0x22c>
 8002d3a:	7821      	ldrb	r1, [r4, #0]
 8002d3c:	2203      	movs	r2, #3
 8002d3e:	4650      	mov	r0, sl
 8002d40:	f7fd fa56 	bl	80001f0 <memchr>
 8002d44:	b138      	cbz	r0, 8002d56 <_vfiprintf_r+0x176>
 8002d46:	9b04      	ldr	r3, [sp, #16]
 8002d48:	eba0 000a 	sub.w	r0, r0, sl
 8002d4c:	2240      	movs	r2, #64	@ 0x40
 8002d4e:	4082      	lsls	r2, r0
 8002d50:	4313      	orrs	r3, r2
 8002d52:	3401      	adds	r4, #1
 8002d54:	9304      	str	r3, [sp, #16]
 8002d56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002d5a:	4829      	ldr	r0, [pc, #164]	@ (8002e00 <_vfiprintf_r+0x220>)
 8002d5c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8002d60:	2206      	movs	r2, #6
 8002d62:	f7fd fa45 	bl	80001f0 <memchr>
 8002d66:	2800      	cmp	r0, #0
 8002d68:	d03f      	beq.n	8002dea <_vfiprintf_r+0x20a>
 8002d6a:	4b26      	ldr	r3, [pc, #152]	@ (8002e04 <_vfiprintf_r+0x224>)
 8002d6c:	bb1b      	cbnz	r3, 8002db6 <_vfiprintf_r+0x1d6>
 8002d6e:	9b03      	ldr	r3, [sp, #12]
 8002d70:	3307      	adds	r3, #7
 8002d72:	f023 0307 	bic.w	r3, r3, #7
 8002d76:	3308      	adds	r3, #8
 8002d78:	9303      	str	r3, [sp, #12]
 8002d7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d7c:	443b      	add	r3, r7
 8002d7e:	9309      	str	r3, [sp, #36]	@ 0x24
 8002d80:	e76a      	b.n	8002c58 <_vfiprintf_r+0x78>
 8002d82:	fb0c 3202 	mla	r2, ip, r2, r3
 8002d86:	460c      	mov	r4, r1
 8002d88:	2001      	movs	r0, #1
 8002d8a:	e7a8      	b.n	8002cde <_vfiprintf_r+0xfe>
 8002d8c:	2300      	movs	r3, #0
 8002d8e:	3401      	adds	r4, #1
 8002d90:	9305      	str	r3, [sp, #20]
 8002d92:	4619      	mov	r1, r3
 8002d94:	f04f 0c0a 	mov.w	ip, #10
 8002d98:	4620      	mov	r0, r4
 8002d9a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002d9e:	3a30      	subs	r2, #48	@ 0x30
 8002da0:	2a09      	cmp	r2, #9
 8002da2:	d903      	bls.n	8002dac <_vfiprintf_r+0x1cc>
 8002da4:	2b00      	cmp	r3, #0
 8002da6:	d0c6      	beq.n	8002d36 <_vfiprintf_r+0x156>
 8002da8:	9105      	str	r1, [sp, #20]
 8002daa:	e7c4      	b.n	8002d36 <_vfiprintf_r+0x156>
 8002dac:	fb0c 2101 	mla	r1, ip, r1, r2
 8002db0:	4604      	mov	r4, r0
 8002db2:	2301      	movs	r3, #1
 8002db4:	e7f0      	b.n	8002d98 <_vfiprintf_r+0x1b8>
 8002db6:	ab03      	add	r3, sp, #12
 8002db8:	9300      	str	r3, [sp, #0]
 8002dba:	462a      	mov	r2, r5
 8002dbc:	4b12      	ldr	r3, [pc, #72]	@ (8002e08 <_vfiprintf_r+0x228>)
 8002dbe:	a904      	add	r1, sp, #16
 8002dc0:	4630      	mov	r0, r6
 8002dc2:	f3af 8000 	nop.w
 8002dc6:	4607      	mov	r7, r0
 8002dc8:	1c78      	adds	r0, r7, #1
 8002dca:	d1d6      	bne.n	8002d7a <_vfiprintf_r+0x19a>
 8002dcc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8002dce:	07d9      	lsls	r1, r3, #31
 8002dd0:	d405      	bmi.n	8002dde <_vfiprintf_r+0x1fe>
 8002dd2:	89ab      	ldrh	r3, [r5, #12]
 8002dd4:	059a      	lsls	r2, r3, #22
 8002dd6:	d402      	bmi.n	8002dde <_vfiprintf_r+0x1fe>
 8002dd8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8002dda:	f7ff fddd 	bl	8002998 <__retarget_lock_release_recursive>
 8002dde:	89ab      	ldrh	r3, [r5, #12]
 8002de0:	065b      	lsls	r3, r3, #25
 8002de2:	f53f af1f 	bmi.w	8002c24 <_vfiprintf_r+0x44>
 8002de6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8002de8:	e71e      	b.n	8002c28 <_vfiprintf_r+0x48>
 8002dea:	ab03      	add	r3, sp, #12
 8002dec:	9300      	str	r3, [sp, #0]
 8002dee:	462a      	mov	r2, r5
 8002df0:	4b05      	ldr	r3, [pc, #20]	@ (8002e08 <_vfiprintf_r+0x228>)
 8002df2:	a904      	add	r1, sp, #16
 8002df4:	4630      	mov	r0, r6
 8002df6:	f000 f879 	bl	8002eec <_printf_i>
 8002dfa:	e7e4      	b.n	8002dc6 <_vfiprintf_r+0x1e6>
 8002dfc:	080034fc 	.word	0x080034fc
 8002e00:	08003506 	.word	0x08003506
 8002e04:	00000000 	.word	0x00000000
 8002e08:	08002bbb 	.word	0x08002bbb
 8002e0c:	08003502 	.word	0x08003502

08002e10 <_printf_common>:
 8002e10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002e14:	4616      	mov	r6, r2
 8002e16:	4698      	mov	r8, r3
 8002e18:	688a      	ldr	r2, [r1, #8]
 8002e1a:	690b      	ldr	r3, [r1, #16]
 8002e1c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002e20:	4293      	cmp	r3, r2
 8002e22:	bfb8      	it	lt
 8002e24:	4613      	movlt	r3, r2
 8002e26:	6033      	str	r3, [r6, #0]
 8002e28:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8002e2c:	4607      	mov	r7, r0
 8002e2e:	460c      	mov	r4, r1
 8002e30:	b10a      	cbz	r2, 8002e36 <_printf_common+0x26>
 8002e32:	3301      	adds	r3, #1
 8002e34:	6033      	str	r3, [r6, #0]
 8002e36:	6823      	ldr	r3, [r4, #0]
 8002e38:	0699      	lsls	r1, r3, #26
 8002e3a:	bf42      	ittt	mi
 8002e3c:	6833      	ldrmi	r3, [r6, #0]
 8002e3e:	3302      	addmi	r3, #2
 8002e40:	6033      	strmi	r3, [r6, #0]
 8002e42:	6825      	ldr	r5, [r4, #0]
 8002e44:	f015 0506 	ands.w	r5, r5, #6
 8002e48:	d106      	bne.n	8002e58 <_printf_common+0x48>
 8002e4a:	f104 0a19 	add.w	sl, r4, #25
 8002e4e:	68e3      	ldr	r3, [r4, #12]
 8002e50:	6832      	ldr	r2, [r6, #0]
 8002e52:	1a9b      	subs	r3, r3, r2
 8002e54:	42ab      	cmp	r3, r5
 8002e56:	dc26      	bgt.n	8002ea6 <_printf_common+0x96>
 8002e58:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002e5c:	6822      	ldr	r2, [r4, #0]
 8002e5e:	3b00      	subs	r3, #0
 8002e60:	bf18      	it	ne
 8002e62:	2301      	movne	r3, #1
 8002e64:	0692      	lsls	r2, r2, #26
 8002e66:	d42b      	bmi.n	8002ec0 <_printf_common+0xb0>
 8002e68:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002e6c:	4641      	mov	r1, r8
 8002e6e:	4638      	mov	r0, r7
 8002e70:	47c8      	blx	r9
 8002e72:	3001      	adds	r0, #1
 8002e74:	d01e      	beq.n	8002eb4 <_printf_common+0xa4>
 8002e76:	6823      	ldr	r3, [r4, #0]
 8002e78:	6922      	ldr	r2, [r4, #16]
 8002e7a:	f003 0306 	and.w	r3, r3, #6
 8002e7e:	2b04      	cmp	r3, #4
 8002e80:	bf02      	ittt	eq
 8002e82:	68e5      	ldreq	r5, [r4, #12]
 8002e84:	6833      	ldreq	r3, [r6, #0]
 8002e86:	1aed      	subeq	r5, r5, r3
 8002e88:	68a3      	ldr	r3, [r4, #8]
 8002e8a:	bf0c      	ite	eq
 8002e8c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002e90:	2500      	movne	r5, #0
 8002e92:	4293      	cmp	r3, r2
 8002e94:	bfc4      	itt	gt
 8002e96:	1a9b      	subgt	r3, r3, r2
 8002e98:	18ed      	addgt	r5, r5, r3
 8002e9a:	2600      	movs	r6, #0
 8002e9c:	341a      	adds	r4, #26
 8002e9e:	42b5      	cmp	r5, r6
 8002ea0:	d11a      	bne.n	8002ed8 <_printf_common+0xc8>
 8002ea2:	2000      	movs	r0, #0
 8002ea4:	e008      	b.n	8002eb8 <_printf_common+0xa8>
 8002ea6:	2301      	movs	r3, #1
 8002ea8:	4652      	mov	r2, sl
 8002eaa:	4641      	mov	r1, r8
 8002eac:	4638      	mov	r0, r7
 8002eae:	47c8      	blx	r9
 8002eb0:	3001      	adds	r0, #1
 8002eb2:	d103      	bne.n	8002ebc <_printf_common+0xac>
 8002eb4:	f04f 30ff 	mov.w	r0, #4294967295
 8002eb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002ebc:	3501      	adds	r5, #1
 8002ebe:	e7c6      	b.n	8002e4e <_printf_common+0x3e>
 8002ec0:	18e1      	adds	r1, r4, r3
 8002ec2:	1c5a      	adds	r2, r3, #1
 8002ec4:	2030      	movs	r0, #48	@ 0x30
 8002ec6:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8002eca:	4422      	add	r2, r4
 8002ecc:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8002ed0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8002ed4:	3302      	adds	r3, #2
 8002ed6:	e7c7      	b.n	8002e68 <_printf_common+0x58>
 8002ed8:	2301      	movs	r3, #1
 8002eda:	4622      	mov	r2, r4
 8002edc:	4641      	mov	r1, r8
 8002ede:	4638      	mov	r0, r7
 8002ee0:	47c8      	blx	r9
 8002ee2:	3001      	adds	r0, #1
 8002ee4:	d0e6      	beq.n	8002eb4 <_printf_common+0xa4>
 8002ee6:	3601      	adds	r6, #1
 8002ee8:	e7d9      	b.n	8002e9e <_printf_common+0x8e>
	...

08002eec <_printf_i>:
 8002eec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002ef0:	7e0f      	ldrb	r7, [r1, #24]
 8002ef2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8002ef4:	2f78      	cmp	r7, #120	@ 0x78
 8002ef6:	4691      	mov	r9, r2
 8002ef8:	4680      	mov	r8, r0
 8002efa:	460c      	mov	r4, r1
 8002efc:	469a      	mov	sl, r3
 8002efe:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8002f02:	d807      	bhi.n	8002f14 <_printf_i+0x28>
 8002f04:	2f62      	cmp	r7, #98	@ 0x62
 8002f06:	d80a      	bhi.n	8002f1e <_printf_i+0x32>
 8002f08:	2f00      	cmp	r7, #0
 8002f0a:	f000 80d2 	beq.w	80030b2 <_printf_i+0x1c6>
 8002f0e:	2f58      	cmp	r7, #88	@ 0x58
 8002f10:	f000 80b9 	beq.w	8003086 <_printf_i+0x19a>
 8002f14:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002f18:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8002f1c:	e03a      	b.n	8002f94 <_printf_i+0xa8>
 8002f1e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8002f22:	2b15      	cmp	r3, #21
 8002f24:	d8f6      	bhi.n	8002f14 <_printf_i+0x28>
 8002f26:	a101      	add	r1, pc, #4	@ (adr r1, 8002f2c <_printf_i+0x40>)
 8002f28:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002f2c:	08002f85 	.word	0x08002f85
 8002f30:	08002f99 	.word	0x08002f99
 8002f34:	08002f15 	.word	0x08002f15
 8002f38:	08002f15 	.word	0x08002f15
 8002f3c:	08002f15 	.word	0x08002f15
 8002f40:	08002f15 	.word	0x08002f15
 8002f44:	08002f99 	.word	0x08002f99
 8002f48:	08002f15 	.word	0x08002f15
 8002f4c:	08002f15 	.word	0x08002f15
 8002f50:	08002f15 	.word	0x08002f15
 8002f54:	08002f15 	.word	0x08002f15
 8002f58:	08003099 	.word	0x08003099
 8002f5c:	08002fc3 	.word	0x08002fc3
 8002f60:	08003053 	.word	0x08003053
 8002f64:	08002f15 	.word	0x08002f15
 8002f68:	08002f15 	.word	0x08002f15
 8002f6c:	080030bb 	.word	0x080030bb
 8002f70:	08002f15 	.word	0x08002f15
 8002f74:	08002fc3 	.word	0x08002fc3
 8002f78:	08002f15 	.word	0x08002f15
 8002f7c:	08002f15 	.word	0x08002f15
 8002f80:	0800305b 	.word	0x0800305b
 8002f84:	6833      	ldr	r3, [r6, #0]
 8002f86:	1d1a      	adds	r2, r3, #4
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	6032      	str	r2, [r6, #0]
 8002f8c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8002f90:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002f94:	2301      	movs	r3, #1
 8002f96:	e09d      	b.n	80030d4 <_printf_i+0x1e8>
 8002f98:	6833      	ldr	r3, [r6, #0]
 8002f9a:	6820      	ldr	r0, [r4, #0]
 8002f9c:	1d19      	adds	r1, r3, #4
 8002f9e:	6031      	str	r1, [r6, #0]
 8002fa0:	0606      	lsls	r6, r0, #24
 8002fa2:	d501      	bpl.n	8002fa8 <_printf_i+0xbc>
 8002fa4:	681d      	ldr	r5, [r3, #0]
 8002fa6:	e003      	b.n	8002fb0 <_printf_i+0xc4>
 8002fa8:	0645      	lsls	r5, r0, #25
 8002faa:	d5fb      	bpl.n	8002fa4 <_printf_i+0xb8>
 8002fac:	f9b3 5000 	ldrsh.w	r5, [r3]
 8002fb0:	2d00      	cmp	r5, #0
 8002fb2:	da03      	bge.n	8002fbc <_printf_i+0xd0>
 8002fb4:	232d      	movs	r3, #45	@ 0x2d
 8002fb6:	426d      	negs	r5, r5
 8002fb8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002fbc:	4859      	ldr	r0, [pc, #356]	@ (8003124 <_printf_i+0x238>)
 8002fbe:	230a      	movs	r3, #10
 8002fc0:	e011      	b.n	8002fe6 <_printf_i+0xfa>
 8002fc2:	6821      	ldr	r1, [r4, #0]
 8002fc4:	6833      	ldr	r3, [r6, #0]
 8002fc6:	0608      	lsls	r0, r1, #24
 8002fc8:	f853 5b04 	ldr.w	r5, [r3], #4
 8002fcc:	d402      	bmi.n	8002fd4 <_printf_i+0xe8>
 8002fce:	0649      	lsls	r1, r1, #25
 8002fd0:	bf48      	it	mi
 8002fd2:	b2ad      	uxthmi	r5, r5
 8002fd4:	2f6f      	cmp	r7, #111	@ 0x6f
 8002fd6:	4853      	ldr	r0, [pc, #332]	@ (8003124 <_printf_i+0x238>)
 8002fd8:	6033      	str	r3, [r6, #0]
 8002fda:	bf14      	ite	ne
 8002fdc:	230a      	movne	r3, #10
 8002fde:	2308      	moveq	r3, #8
 8002fe0:	2100      	movs	r1, #0
 8002fe2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8002fe6:	6866      	ldr	r6, [r4, #4]
 8002fe8:	60a6      	str	r6, [r4, #8]
 8002fea:	2e00      	cmp	r6, #0
 8002fec:	bfa2      	ittt	ge
 8002fee:	6821      	ldrge	r1, [r4, #0]
 8002ff0:	f021 0104 	bicge.w	r1, r1, #4
 8002ff4:	6021      	strge	r1, [r4, #0]
 8002ff6:	b90d      	cbnz	r5, 8002ffc <_printf_i+0x110>
 8002ff8:	2e00      	cmp	r6, #0
 8002ffa:	d04b      	beq.n	8003094 <_printf_i+0x1a8>
 8002ffc:	4616      	mov	r6, r2
 8002ffe:	fbb5 f1f3 	udiv	r1, r5, r3
 8003002:	fb03 5711 	mls	r7, r3, r1, r5
 8003006:	5dc7      	ldrb	r7, [r0, r7]
 8003008:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800300c:	462f      	mov	r7, r5
 800300e:	42bb      	cmp	r3, r7
 8003010:	460d      	mov	r5, r1
 8003012:	d9f4      	bls.n	8002ffe <_printf_i+0x112>
 8003014:	2b08      	cmp	r3, #8
 8003016:	d10b      	bne.n	8003030 <_printf_i+0x144>
 8003018:	6823      	ldr	r3, [r4, #0]
 800301a:	07df      	lsls	r7, r3, #31
 800301c:	d508      	bpl.n	8003030 <_printf_i+0x144>
 800301e:	6923      	ldr	r3, [r4, #16]
 8003020:	6861      	ldr	r1, [r4, #4]
 8003022:	4299      	cmp	r1, r3
 8003024:	bfde      	ittt	le
 8003026:	2330      	movle	r3, #48	@ 0x30
 8003028:	f806 3c01 	strble.w	r3, [r6, #-1]
 800302c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8003030:	1b92      	subs	r2, r2, r6
 8003032:	6122      	str	r2, [r4, #16]
 8003034:	f8cd a000 	str.w	sl, [sp]
 8003038:	464b      	mov	r3, r9
 800303a:	aa03      	add	r2, sp, #12
 800303c:	4621      	mov	r1, r4
 800303e:	4640      	mov	r0, r8
 8003040:	f7ff fee6 	bl	8002e10 <_printf_common>
 8003044:	3001      	adds	r0, #1
 8003046:	d14a      	bne.n	80030de <_printf_i+0x1f2>
 8003048:	f04f 30ff 	mov.w	r0, #4294967295
 800304c:	b004      	add	sp, #16
 800304e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003052:	6823      	ldr	r3, [r4, #0]
 8003054:	f043 0320 	orr.w	r3, r3, #32
 8003058:	6023      	str	r3, [r4, #0]
 800305a:	4833      	ldr	r0, [pc, #204]	@ (8003128 <_printf_i+0x23c>)
 800305c:	2778      	movs	r7, #120	@ 0x78
 800305e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8003062:	6823      	ldr	r3, [r4, #0]
 8003064:	6831      	ldr	r1, [r6, #0]
 8003066:	061f      	lsls	r7, r3, #24
 8003068:	f851 5b04 	ldr.w	r5, [r1], #4
 800306c:	d402      	bmi.n	8003074 <_printf_i+0x188>
 800306e:	065f      	lsls	r7, r3, #25
 8003070:	bf48      	it	mi
 8003072:	b2ad      	uxthmi	r5, r5
 8003074:	6031      	str	r1, [r6, #0]
 8003076:	07d9      	lsls	r1, r3, #31
 8003078:	bf44      	itt	mi
 800307a:	f043 0320 	orrmi.w	r3, r3, #32
 800307e:	6023      	strmi	r3, [r4, #0]
 8003080:	b11d      	cbz	r5, 800308a <_printf_i+0x19e>
 8003082:	2310      	movs	r3, #16
 8003084:	e7ac      	b.n	8002fe0 <_printf_i+0xf4>
 8003086:	4827      	ldr	r0, [pc, #156]	@ (8003124 <_printf_i+0x238>)
 8003088:	e7e9      	b.n	800305e <_printf_i+0x172>
 800308a:	6823      	ldr	r3, [r4, #0]
 800308c:	f023 0320 	bic.w	r3, r3, #32
 8003090:	6023      	str	r3, [r4, #0]
 8003092:	e7f6      	b.n	8003082 <_printf_i+0x196>
 8003094:	4616      	mov	r6, r2
 8003096:	e7bd      	b.n	8003014 <_printf_i+0x128>
 8003098:	6833      	ldr	r3, [r6, #0]
 800309a:	6825      	ldr	r5, [r4, #0]
 800309c:	6961      	ldr	r1, [r4, #20]
 800309e:	1d18      	adds	r0, r3, #4
 80030a0:	6030      	str	r0, [r6, #0]
 80030a2:	062e      	lsls	r6, r5, #24
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	d501      	bpl.n	80030ac <_printf_i+0x1c0>
 80030a8:	6019      	str	r1, [r3, #0]
 80030aa:	e002      	b.n	80030b2 <_printf_i+0x1c6>
 80030ac:	0668      	lsls	r0, r5, #25
 80030ae:	d5fb      	bpl.n	80030a8 <_printf_i+0x1bc>
 80030b0:	8019      	strh	r1, [r3, #0]
 80030b2:	2300      	movs	r3, #0
 80030b4:	6123      	str	r3, [r4, #16]
 80030b6:	4616      	mov	r6, r2
 80030b8:	e7bc      	b.n	8003034 <_printf_i+0x148>
 80030ba:	6833      	ldr	r3, [r6, #0]
 80030bc:	1d1a      	adds	r2, r3, #4
 80030be:	6032      	str	r2, [r6, #0]
 80030c0:	681e      	ldr	r6, [r3, #0]
 80030c2:	6862      	ldr	r2, [r4, #4]
 80030c4:	2100      	movs	r1, #0
 80030c6:	4630      	mov	r0, r6
 80030c8:	f7fd f892 	bl	80001f0 <memchr>
 80030cc:	b108      	cbz	r0, 80030d2 <_printf_i+0x1e6>
 80030ce:	1b80      	subs	r0, r0, r6
 80030d0:	6060      	str	r0, [r4, #4]
 80030d2:	6863      	ldr	r3, [r4, #4]
 80030d4:	6123      	str	r3, [r4, #16]
 80030d6:	2300      	movs	r3, #0
 80030d8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80030dc:	e7aa      	b.n	8003034 <_printf_i+0x148>
 80030de:	6923      	ldr	r3, [r4, #16]
 80030e0:	4632      	mov	r2, r6
 80030e2:	4649      	mov	r1, r9
 80030e4:	4640      	mov	r0, r8
 80030e6:	47d0      	blx	sl
 80030e8:	3001      	adds	r0, #1
 80030ea:	d0ad      	beq.n	8003048 <_printf_i+0x15c>
 80030ec:	6823      	ldr	r3, [r4, #0]
 80030ee:	079b      	lsls	r3, r3, #30
 80030f0:	d413      	bmi.n	800311a <_printf_i+0x22e>
 80030f2:	68e0      	ldr	r0, [r4, #12]
 80030f4:	9b03      	ldr	r3, [sp, #12]
 80030f6:	4298      	cmp	r0, r3
 80030f8:	bfb8      	it	lt
 80030fa:	4618      	movlt	r0, r3
 80030fc:	e7a6      	b.n	800304c <_printf_i+0x160>
 80030fe:	2301      	movs	r3, #1
 8003100:	4632      	mov	r2, r6
 8003102:	4649      	mov	r1, r9
 8003104:	4640      	mov	r0, r8
 8003106:	47d0      	blx	sl
 8003108:	3001      	adds	r0, #1
 800310a:	d09d      	beq.n	8003048 <_printf_i+0x15c>
 800310c:	3501      	adds	r5, #1
 800310e:	68e3      	ldr	r3, [r4, #12]
 8003110:	9903      	ldr	r1, [sp, #12]
 8003112:	1a5b      	subs	r3, r3, r1
 8003114:	42ab      	cmp	r3, r5
 8003116:	dcf2      	bgt.n	80030fe <_printf_i+0x212>
 8003118:	e7eb      	b.n	80030f2 <_printf_i+0x206>
 800311a:	2500      	movs	r5, #0
 800311c:	f104 0619 	add.w	r6, r4, #25
 8003120:	e7f5      	b.n	800310e <_printf_i+0x222>
 8003122:	bf00      	nop
 8003124:	0800350d 	.word	0x0800350d
 8003128:	0800351e 	.word	0x0800351e

0800312c <__sflush_r>:
 800312c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003130:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003134:	0716      	lsls	r6, r2, #28
 8003136:	4605      	mov	r5, r0
 8003138:	460c      	mov	r4, r1
 800313a:	d454      	bmi.n	80031e6 <__sflush_r+0xba>
 800313c:	684b      	ldr	r3, [r1, #4]
 800313e:	2b00      	cmp	r3, #0
 8003140:	dc02      	bgt.n	8003148 <__sflush_r+0x1c>
 8003142:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003144:	2b00      	cmp	r3, #0
 8003146:	dd48      	ble.n	80031da <__sflush_r+0xae>
 8003148:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800314a:	2e00      	cmp	r6, #0
 800314c:	d045      	beq.n	80031da <__sflush_r+0xae>
 800314e:	2300      	movs	r3, #0
 8003150:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003154:	682f      	ldr	r7, [r5, #0]
 8003156:	6a21      	ldr	r1, [r4, #32]
 8003158:	602b      	str	r3, [r5, #0]
 800315a:	d030      	beq.n	80031be <__sflush_r+0x92>
 800315c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800315e:	89a3      	ldrh	r3, [r4, #12]
 8003160:	0759      	lsls	r1, r3, #29
 8003162:	d505      	bpl.n	8003170 <__sflush_r+0x44>
 8003164:	6863      	ldr	r3, [r4, #4]
 8003166:	1ad2      	subs	r2, r2, r3
 8003168:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800316a:	b10b      	cbz	r3, 8003170 <__sflush_r+0x44>
 800316c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800316e:	1ad2      	subs	r2, r2, r3
 8003170:	2300      	movs	r3, #0
 8003172:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003174:	6a21      	ldr	r1, [r4, #32]
 8003176:	4628      	mov	r0, r5
 8003178:	47b0      	blx	r6
 800317a:	1c43      	adds	r3, r0, #1
 800317c:	89a3      	ldrh	r3, [r4, #12]
 800317e:	d106      	bne.n	800318e <__sflush_r+0x62>
 8003180:	6829      	ldr	r1, [r5, #0]
 8003182:	291d      	cmp	r1, #29
 8003184:	d82b      	bhi.n	80031de <__sflush_r+0xb2>
 8003186:	4a2a      	ldr	r2, [pc, #168]	@ (8003230 <__sflush_r+0x104>)
 8003188:	410a      	asrs	r2, r1
 800318a:	07d6      	lsls	r6, r2, #31
 800318c:	d427      	bmi.n	80031de <__sflush_r+0xb2>
 800318e:	2200      	movs	r2, #0
 8003190:	6062      	str	r2, [r4, #4]
 8003192:	04d9      	lsls	r1, r3, #19
 8003194:	6922      	ldr	r2, [r4, #16]
 8003196:	6022      	str	r2, [r4, #0]
 8003198:	d504      	bpl.n	80031a4 <__sflush_r+0x78>
 800319a:	1c42      	adds	r2, r0, #1
 800319c:	d101      	bne.n	80031a2 <__sflush_r+0x76>
 800319e:	682b      	ldr	r3, [r5, #0]
 80031a0:	b903      	cbnz	r3, 80031a4 <__sflush_r+0x78>
 80031a2:	6560      	str	r0, [r4, #84]	@ 0x54
 80031a4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80031a6:	602f      	str	r7, [r5, #0]
 80031a8:	b1b9      	cbz	r1, 80031da <__sflush_r+0xae>
 80031aa:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80031ae:	4299      	cmp	r1, r3
 80031b0:	d002      	beq.n	80031b8 <__sflush_r+0x8c>
 80031b2:	4628      	mov	r0, r5
 80031b4:	f7ff fbf2 	bl	800299c <_free_r>
 80031b8:	2300      	movs	r3, #0
 80031ba:	6363      	str	r3, [r4, #52]	@ 0x34
 80031bc:	e00d      	b.n	80031da <__sflush_r+0xae>
 80031be:	2301      	movs	r3, #1
 80031c0:	4628      	mov	r0, r5
 80031c2:	47b0      	blx	r6
 80031c4:	4602      	mov	r2, r0
 80031c6:	1c50      	adds	r0, r2, #1
 80031c8:	d1c9      	bne.n	800315e <__sflush_r+0x32>
 80031ca:	682b      	ldr	r3, [r5, #0]
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	d0c6      	beq.n	800315e <__sflush_r+0x32>
 80031d0:	2b1d      	cmp	r3, #29
 80031d2:	d001      	beq.n	80031d8 <__sflush_r+0xac>
 80031d4:	2b16      	cmp	r3, #22
 80031d6:	d11e      	bne.n	8003216 <__sflush_r+0xea>
 80031d8:	602f      	str	r7, [r5, #0]
 80031da:	2000      	movs	r0, #0
 80031dc:	e022      	b.n	8003224 <__sflush_r+0xf8>
 80031de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80031e2:	b21b      	sxth	r3, r3
 80031e4:	e01b      	b.n	800321e <__sflush_r+0xf2>
 80031e6:	690f      	ldr	r7, [r1, #16]
 80031e8:	2f00      	cmp	r7, #0
 80031ea:	d0f6      	beq.n	80031da <__sflush_r+0xae>
 80031ec:	0793      	lsls	r3, r2, #30
 80031ee:	680e      	ldr	r6, [r1, #0]
 80031f0:	bf08      	it	eq
 80031f2:	694b      	ldreq	r3, [r1, #20]
 80031f4:	600f      	str	r7, [r1, #0]
 80031f6:	bf18      	it	ne
 80031f8:	2300      	movne	r3, #0
 80031fa:	eba6 0807 	sub.w	r8, r6, r7
 80031fe:	608b      	str	r3, [r1, #8]
 8003200:	f1b8 0f00 	cmp.w	r8, #0
 8003204:	dde9      	ble.n	80031da <__sflush_r+0xae>
 8003206:	6a21      	ldr	r1, [r4, #32]
 8003208:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800320a:	4643      	mov	r3, r8
 800320c:	463a      	mov	r2, r7
 800320e:	4628      	mov	r0, r5
 8003210:	47b0      	blx	r6
 8003212:	2800      	cmp	r0, #0
 8003214:	dc08      	bgt.n	8003228 <__sflush_r+0xfc>
 8003216:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800321a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800321e:	81a3      	strh	r3, [r4, #12]
 8003220:	f04f 30ff 	mov.w	r0, #4294967295
 8003224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003228:	4407      	add	r7, r0
 800322a:	eba8 0800 	sub.w	r8, r8, r0
 800322e:	e7e7      	b.n	8003200 <__sflush_r+0xd4>
 8003230:	dfbffffe 	.word	0xdfbffffe

08003234 <_fflush_r>:
 8003234:	b538      	push	{r3, r4, r5, lr}
 8003236:	690b      	ldr	r3, [r1, #16]
 8003238:	4605      	mov	r5, r0
 800323a:	460c      	mov	r4, r1
 800323c:	b913      	cbnz	r3, 8003244 <_fflush_r+0x10>
 800323e:	2500      	movs	r5, #0
 8003240:	4628      	mov	r0, r5
 8003242:	bd38      	pop	{r3, r4, r5, pc}
 8003244:	b118      	cbz	r0, 800324e <_fflush_r+0x1a>
 8003246:	6a03      	ldr	r3, [r0, #32]
 8003248:	b90b      	cbnz	r3, 800324e <_fflush_r+0x1a>
 800324a:	f7ff fa9f 	bl	800278c <__sinit>
 800324e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003252:	2b00      	cmp	r3, #0
 8003254:	d0f3      	beq.n	800323e <_fflush_r+0xa>
 8003256:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003258:	07d0      	lsls	r0, r2, #31
 800325a:	d404      	bmi.n	8003266 <_fflush_r+0x32>
 800325c:	0599      	lsls	r1, r3, #22
 800325e:	d402      	bmi.n	8003266 <_fflush_r+0x32>
 8003260:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003262:	f7ff fb98 	bl	8002996 <__retarget_lock_acquire_recursive>
 8003266:	4628      	mov	r0, r5
 8003268:	4621      	mov	r1, r4
 800326a:	f7ff ff5f 	bl	800312c <__sflush_r>
 800326e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003270:	07da      	lsls	r2, r3, #31
 8003272:	4605      	mov	r5, r0
 8003274:	d4e4      	bmi.n	8003240 <_fflush_r+0xc>
 8003276:	89a3      	ldrh	r3, [r4, #12]
 8003278:	059b      	lsls	r3, r3, #22
 800327a:	d4e1      	bmi.n	8003240 <_fflush_r+0xc>
 800327c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800327e:	f7ff fb8b 	bl	8002998 <__retarget_lock_release_recursive>
 8003282:	e7dd      	b.n	8003240 <_fflush_r+0xc>

08003284 <__swbuf_r>:
 8003284:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003286:	460e      	mov	r6, r1
 8003288:	4614      	mov	r4, r2
 800328a:	4605      	mov	r5, r0
 800328c:	b118      	cbz	r0, 8003296 <__swbuf_r+0x12>
 800328e:	6a03      	ldr	r3, [r0, #32]
 8003290:	b90b      	cbnz	r3, 8003296 <__swbuf_r+0x12>
 8003292:	f7ff fa7b 	bl	800278c <__sinit>
 8003296:	69a3      	ldr	r3, [r4, #24]
 8003298:	60a3      	str	r3, [r4, #8]
 800329a:	89a3      	ldrh	r3, [r4, #12]
 800329c:	071a      	lsls	r2, r3, #28
 800329e:	d501      	bpl.n	80032a4 <__swbuf_r+0x20>
 80032a0:	6923      	ldr	r3, [r4, #16]
 80032a2:	b943      	cbnz	r3, 80032b6 <__swbuf_r+0x32>
 80032a4:	4621      	mov	r1, r4
 80032a6:	4628      	mov	r0, r5
 80032a8:	f000 f82a 	bl	8003300 <__swsetup_r>
 80032ac:	b118      	cbz	r0, 80032b6 <__swbuf_r+0x32>
 80032ae:	f04f 37ff 	mov.w	r7, #4294967295
 80032b2:	4638      	mov	r0, r7
 80032b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80032b6:	6823      	ldr	r3, [r4, #0]
 80032b8:	6922      	ldr	r2, [r4, #16]
 80032ba:	1a98      	subs	r0, r3, r2
 80032bc:	6963      	ldr	r3, [r4, #20]
 80032be:	b2f6      	uxtb	r6, r6
 80032c0:	4283      	cmp	r3, r0
 80032c2:	4637      	mov	r7, r6
 80032c4:	dc05      	bgt.n	80032d2 <__swbuf_r+0x4e>
 80032c6:	4621      	mov	r1, r4
 80032c8:	4628      	mov	r0, r5
 80032ca:	f7ff ffb3 	bl	8003234 <_fflush_r>
 80032ce:	2800      	cmp	r0, #0
 80032d0:	d1ed      	bne.n	80032ae <__swbuf_r+0x2a>
 80032d2:	68a3      	ldr	r3, [r4, #8]
 80032d4:	3b01      	subs	r3, #1
 80032d6:	60a3      	str	r3, [r4, #8]
 80032d8:	6823      	ldr	r3, [r4, #0]
 80032da:	1c5a      	adds	r2, r3, #1
 80032dc:	6022      	str	r2, [r4, #0]
 80032de:	701e      	strb	r6, [r3, #0]
 80032e0:	6962      	ldr	r2, [r4, #20]
 80032e2:	1c43      	adds	r3, r0, #1
 80032e4:	429a      	cmp	r2, r3
 80032e6:	d004      	beq.n	80032f2 <__swbuf_r+0x6e>
 80032e8:	89a3      	ldrh	r3, [r4, #12]
 80032ea:	07db      	lsls	r3, r3, #31
 80032ec:	d5e1      	bpl.n	80032b2 <__swbuf_r+0x2e>
 80032ee:	2e0a      	cmp	r6, #10
 80032f0:	d1df      	bne.n	80032b2 <__swbuf_r+0x2e>
 80032f2:	4621      	mov	r1, r4
 80032f4:	4628      	mov	r0, r5
 80032f6:	f7ff ff9d 	bl	8003234 <_fflush_r>
 80032fa:	2800      	cmp	r0, #0
 80032fc:	d0d9      	beq.n	80032b2 <__swbuf_r+0x2e>
 80032fe:	e7d6      	b.n	80032ae <__swbuf_r+0x2a>

08003300 <__swsetup_r>:
 8003300:	b538      	push	{r3, r4, r5, lr}
 8003302:	4b29      	ldr	r3, [pc, #164]	@ (80033a8 <__swsetup_r+0xa8>)
 8003304:	4605      	mov	r5, r0
 8003306:	6818      	ldr	r0, [r3, #0]
 8003308:	460c      	mov	r4, r1
 800330a:	b118      	cbz	r0, 8003314 <__swsetup_r+0x14>
 800330c:	6a03      	ldr	r3, [r0, #32]
 800330e:	b90b      	cbnz	r3, 8003314 <__swsetup_r+0x14>
 8003310:	f7ff fa3c 	bl	800278c <__sinit>
 8003314:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003318:	0719      	lsls	r1, r3, #28
 800331a:	d422      	bmi.n	8003362 <__swsetup_r+0x62>
 800331c:	06da      	lsls	r2, r3, #27
 800331e:	d407      	bmi.n	8003330 <__swsetup_r+0x30>
 8003320:	2209      	movs	r2, #9
 8003322:	602a      	str	r2, [r5, #0]
 8003324:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003328:	81a3      	strh	r3, [r4, #12]
 800332a:	f04f 30ff 	mov.w	r0, #4294967295
 800332e:	e033      	b.n	8003398 <__swsetup_r+0x98>
 8003330:	0758      	lsls	r0, r3, #29
 8003332:	d512      	bpl.n	800335a <__swsetup_r+0x5a>
 8003334:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003336:	b141      	cbz	r1, 800334a <__swsetup_r+0x4a>
 8003338:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800333c:	4299      	cmp	r1, r3
 800333e:	d002      	beq.n	8003346 <__swsetup_r+0x46>
 8003340:	4628      	mov	r0, r5
 8003342:	f7ff fb2b 	bl	800299c <_free_r>
 8003346:	2300      	movs	r3, #0
 8003348:	6363      	str	r3, [r4, #52]	@ 0x34
 800334a:	89a3      	ldrh	r3, [r4, #12]
 800334c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8003350:	81a3      	strh	r3, [r4, #12]
 8003352:	2300      	movs	r3, #0
 8003354:	6063      	str	r3, [r4, #4]
 8003356:	6923      	ldr	r3, [r4, #16]
 8003358:	6023      	str	r3, [r4, #0]
 800335a:	89a3      	ldrh	r3, [r4, #12]
 800335c:	f043 0308 	orr.w	r3, r3, #8
 8003360:	81a3      	strh	r3, [r4, #12]
 8003362:	6923      	ldr	r3, [r4, #16]
 8003364:	b94b      	cbnz	r3, 800337a <__swsetup_r+0x7a>
 8003366:	89a3      	ldrh	r3, [r4, #12]
 8003368:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800336c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003370:	d003      	beq.n	800337a <__swsetup_r+0x7a>
 8003372:	4621      	mov	r1, r4
 8003374:	4628      	mov	r0, r5
 8003376:	f000 f84f 	bl	8003418 <__smakebuf_r>
 800337a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800337e:	f013 0201 	ands.w	r2, r3, #1
 8003382:	d00a      	beq.n	800339a <__swsetup_r+0x9a>
 8003384:	2200      	movs	r2, #0
 8003386:	60a2      	str	r2, [r4, #8]
 8003388:	6962      	ldr	r2, [r4, #20]
 800338a:	4252      	negs	r2, r2
 800338c:	61a2      	str	r2, [r4, #24]
 800338e:	6922      	ldr	r2, [r4, #16]
 8003390:	b942      	cbnz	r2, 80033a4 <__swsetup_r+0xa4>
 8003392:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8003396:	d1c5      	bne.n	8003324 <__swsetup_r+0x24>
 8003398:	bd38      	pop	{r3, r4, r5, pc}
 800339a:	0799      	lsls	r1, r3, #30
 800339c:	bf58      	it	pl
 800339e:	6962      	ldrpl	r2, [r4, #20]
 80033a0:	60a2      	str	r2, [r4, #8]
 80033a2:	e7f4      	b.n	800338e <__swsetup_r+0x8e>
 80033a4:	2000      	movs	r0, #0
 80033a6:	e7f7      	b.n	8003398 <__swsetup_r+0x98>
 80033a8:	20000010 	.word	0x20000010

080033ac <_sbrk_r>:
 80033ac:	b538      	push	{r3, r4, r5, lr}
 80033ae:	4d06      	ldr	r5, [pc, #24]	@ (80033c8 <_sbrk_r+0x1c>)
 80033b0:	2300      	movs	r3, #0
 80033b2:	4604      	mov	r4, r0
 80033b4:	4608      	mov	r0, r1
 80033b6:	602b      	str	r3, [r5, #0]
 80033b8:	f7fd f9c0 	bl	800073c <_sbrk>
 80033bc:	1c43      	adds	r3, r0, #1
 80033be:	d102      	bne.n	80033c6 <_sbrk_r+0x1a>
 80033c0:	682b      	ldr	r3, [r5, #0]
 80033c2:	b103      	cbz	r3, 80033c6 <_sbrk_r+0x1a>
 80033c4:	6023      	str	r3, [r4, #0]
 80033c6:	bd38      	pop	{r3, r4, r5, pc}
 80033c8:	200003d8 	.word	0x200003d8

080033cc <__swhatbuf_r>:
 80033cc:	b570      	push	{r4, r5, r6, lr}
 80033ce:	460c      	mov	r4, r1
 80033d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80033d4:	2900      	cmp	r1, #0
 80033d6:	b096      	sub	sp, #88	@ 0x58
 80033d8:	4615      	mov	r5, r2
 80033da:	461e      	mov	r6, r3
 80033dc:	da0d      	bge.n	80033fa <__swhatbuf_r+0x2e>
 80033de:	89a3      	ldrh	r3, [r4, #12]
 80033e0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80033e4:	f04f 0100 	mov.w	r1, #0
 80033e8:	bf14      	ite	ne
 80033ea:	2340      	movne	r3, #64	@ 0x40
 80033ec:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80033f0:	2000      	movs	r0, #0
 80033f2:	6031      	str	r1, [r6, #0]
 80033f4:	602b      	str	r3, [r5, #0]
 80033f6:	b016      	add	sp, #88	@ 0x58
 80033f8:	bd70      	pop	{r4, r5, r6, pc}
 80033fa:	466a      	mov	r2, sp
 80033fc:	f000 f848 	bl	8003490 <_fstat_r>
 8003400:	2800      	cmp	r0, #0
 8003402:	dbec      	blt.n	80033de <__swhatbuf_r+0x12>
 8003404:	9901      	ldr	r1, [sp, #4]
 8003406:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800340a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800340e:	4259      	negs	r1, r3
 8003410:	4159      	adcs	r1, r3
 8003412:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003416:	e7eb      	b.n	80033f0 <__swhatbuf_r+0x24>

08003418 <__smakebuf_r>:
 8003418:	898b      	ldrh	r3, [r1, #12]
 800341a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800341c:	079d      	lsls	r5, r3, #30
 800341e:	4606      	mov	r6, r0
 8003420:	460c      	mov	r4, r1
 8003422:	d507      	bpl.n	8003434 <__smakebuf_r+0x1c>
 8003424:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003428:	6023      	str	r3, [r4, #0]
 800342a:	6123      	str	r3, [r4, #16]
 800342c:	2301      	movs	r3, #1
 800342e:	6163      	str	r3, [r4, #20]
 8003430:	b003      	add	sp, #12
 8003432:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003434:	ab01      	add	r3, sp, #4
 8003436:	466a      	mov	r2, sp
 8003438:	f7ff ffc8 	bl	80033cc <__swhatbuf_r>
 800343c:	9f00      	ldr	r7, [sp, #0]
 800343e:	4605      	mov	r5, r0
 8003440:	4639      	mov	r1, r7
 8003442:	4630      	mov	r0, r6
 8003444:	f7ff fb16 	bl	8002a74 <_malloc_r>
 8003448:	b948      	cbnz	r0, 800345e <__smakebuf_r+0x46>
 800344a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800344e:	059a      	lsls	r2, r3, #22
 8003450:	d4ee      	bmi.n	8003430 <__smakebuf_r+0x18>
 8003452:	f023 0303 	bic.w	r3, r3, #3
 8003456:	f043 0302 	orr.w	r3, r3, #2
 800345a:	81a3      	strh	r3, [r4, #12]
 800345c:	e7e2      	b.n	8003424 <__smakebuf_r+0xc>
 800345e:	89a3      	ldrh	r3, [r4, #12]
 8003460:	6020      	str	r0, [r4, #0]
 8003462:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003466:	81a3      	strh	r3, [r4, #12]
 8003468:	9b01      	ldr	r3, [sp, #4]
 800346a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800346e:	b15b      	cbz	r3, 8003488 <__smakebuf_r+0x70>
 8003470:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003474:	4630      	mov	r0, r6
 8003476:	f000 f81d 	bl	80034b4 <_isatty_r>
 800347a:	b128      	cbz	r0, 8003488 <__smakebuf_r+0x70>
 800347c:	89a3      	ldrh	r3, [r4, #12]
 800347e:	f023 0303 	bic.w	r3, r3, #3
 8003482:	f043 0301 	orr.w	r3, r3, #1
 8003486:	81a3      	strh	r3, [r4, #12]
 8003488:	89a3      	ldrh	r3, [r4, #12]
 800348a:	431d      	orrs	r5, r3
 800348c:	81a5      	strh	r5, [r4, #12]
 800348e:	e7cf      	b.n	8003430 <__smakebuf_r+0x18>

08003490 <_fstat_r>:
 8003490:	b538      	push	{r3, r4, r5, lr}
 8003492:	4d07      	ldr	r5, [pc, #28]	@ (80034b0 <_fstat_r+0x20>)
 8003494:	2300      	movs	r3, #0
 8003496:	4604      	mov	r4, r0
 8003498:	4608      	mov	r0, r1
 800349a:	4611      	mov	r1, r2
 800349c:	602b      	str	r3, [r5, #0]
 800349e:	f7fd f924 	bl	80006ea <_fstat>
 80034a2:	1c43      	adds	r3, r0, #1
 80034a4:	d102      	bne.n	80034ac <_fstat_r+0x1c>
 80034a6:	682b      	ldr	r3, [r5, #0]
 80034a8:	b103      	cbz	r3, 80034ac <_fstat_r+0x1c>
 80034aa:	6023      	str	r3, [r4, #0]
 80034ac:	bd38      	pop	{r3, r4, r5, pc}
 80034ae:	bf00      	nop
 80034b0:	200003d8 	.word	0x200003d8

080034b4 <_isatty_r>:
 80034b4:	b538      	push	{r3, r4, r5, lr}
 80034b6:	4d06      	ldr	r5, [pc, #24]	@ (80034d0 <_isatty_r+0x1c>)
 80034b8:	2300      	movs	r3, #0
 80034ba:	4604      	mov	r4, r0
 80034bc:	4608      	mov	r0, r1
 80034be:	602b      	str	r3, [r5, #0]
 80034c0:	f7fd f923 	bl	800070a <_isatty>
 80034c4:	1c43      	adds	r3, r0, #1
 80034c6:	d102      	bne.n	80034ce <_isatty_r+0x1a>
 80034c8:	682b      	ldr	r3, [r5, #0]
 80034ca:	b103      	cbz	r3, 80034ce <_isatty_r+0x1a>
 80034cc:	6023      	str	r3, [r4, #0]
 80034ce:	bd38      	pop	{r3, r4, r5, pc}
 80034d0:	200003d8 	.word	0x200003d8

080034d4 <_init>:
 80034d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034d6:	bf00      	nop
 80034d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80034da:	bc08      	pop	{r3}
 80034dc:	469e      	mov	lr, r3
 80034de:	4770      	bx	lr

080034e0 <_fini>:
 80034e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80034e2:	bf00      	nop
 80034e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80034e6:	bc08      	pop	{r3}
 80034e8:	469e      	mov	lr, r3
 80034ea:	4770      	bx	lr
